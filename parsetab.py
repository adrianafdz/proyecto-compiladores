
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "startCALL COMP DEF DO ELSE END FOR FUNC ID IF INPUT MAIN NOTHING NUM NUMBER OPFACT OPTERM PRINT PROGRAM RET STR STRING THEN TO TO_NUMBER TO_STRING TYPE WHILEstart : PROGRAM f_start ID f_prog ';' clases vars funciones MAIN f_main '(' ')' '{' estatutos '}' END f_end ';' f_start :f_prog :f_main :f_end : clases : clases clase\n              | emptyclase : TYPE ID f_startclass ':' ID f_clasepadre '{' cvars f_cvars funciones '}' f_endclass \n             | TYPE ID f_startclass '{' cvars f_cvars funciones '}' f_endclass f_startclass :f_clasepadre :cvars : cvars DEF tipo dimension ':' lista_id ';'\n             | emptyf_cvars :f_endclass :funciones : funciones funcion\n                  | emptyfuncion : FUNC ID f_startfunc '(' params ')' ':' tipo f_tipofunc '{' vars estatutos '}' f_endfunc\n               | FUNC ID f_startfunc '(' params ')' ':' NOTHING f_nothing f_tipofunc '{' vars estatutos '}' f_endfunc f_startfunc :f_nothing :f_tipofunc :f_endfunc :vars : vars DEF tipo dimension ':' lista_id ';'\n            | vars DEF ID f_varsobj ':' lista_id_obj ';'\n            | emptyf_varsobj :lista_id : ID f_vars\n                | lista_id ',' ID f_varsf_vars :lista_id_obj : ID f_vars_obj\n                    | lista_id_obj ',' ID f_vars_objf_vars_obj :dimension : '[' NUM f_dim1 ']' f_enddim\n                 | '[' NUM f_dim1 ']' '[' NUM f_dim2 ']' f_enddim\n                 | emptyf_dim1 :f_dim2 :f_enddim :tipo : NUMBER \n            | STRINGparams : pparams \n              | emptypparams : tipo ID f_param\n               | pparams ',' tipo ID f_paramf_param :estatutos : estatutos estatuto \n                 | emptyestatuto : asignacion \n                | while \n                | for \n                | condicion \n                | CALL call_func ';' call_func : func f_end_call f_end_check\n                 | input \n                 | write \n                 | to_num \n                 | to_str\n                 | return f_end_call :func : ID  f_verify_func '(' args ')'\n            | ID  f_varobj ':' ID f_verify_func_composite '(' args ')' f_verify_func :f_verify_func_composite :args : args_list f_end_args\n            | f_end_argsargs_list : expresion f_arg\n                 | args_list ',' expresion f_argf_arg :f_end_args :asignacion : var '=' f_oper expresion ';' var : ID f_varobj ':' ID f_verify_type_composite indexacion f_end_check\n           | ID f_verify_type indexacion f_end_checkindexacion : f_start_array '[' expresion f_index ']' f_end_array\n                 | f_start_array '[' expresion f_index ']' '[' f_next_index expresion f_index ']' f_end_array\n                 | f_no_index emptyf_varobj :f_end_check :f_verify_type :f_verify_type_composite :f_no_index :f_start_array :f_index :f_next_index :f_end_array :expresion : exp\n                 | expresion COMP f_oper exp f_expres\n                 | STR f_string_expr f_string_expr :f_expres :exp : term\n           | exp OPTERM f_oper term f_expf_exp :term : fact\n            | term OPFACT f_oper fact f_termf_term :f_oper :fact : '(' lparen expresion ')' rparen\n            | var\n            | NUM f_fact\n            | OPTERM NUM\n            | CALL func f_return_val f_end_call f_end_checkf_return_val :lparen :rparen :f_fact :condicion : IF '(' expresion ')' f_if THEN '{' estatutos '}' condicionp f_endifcondicionp : ELSE f_else '{' estatutos '}'\n                  | empty f_if :f_endif :f_else :while : WHILE f_while '(' expresion f_exprwhile ')' DO '{' estatutos '}' f_endwhile f_while :f_exprwhile :f_endwhile :for : FOR expresion f_for_start TO expresion f_for_to '{' estatutos '}' f_for_end f_for_start :f_for_to :f_for_end :to_num : TO_NUMBER '(' STR ')' \n              | TO_NUMBER '(' var ')' to_str : TO_STRING '(' expresion ')' input : INPUT '(' var ')' write : PRINT '(' write_list ')' write_list : write_list '&' write_listp\n                  | write_listpwrite_listp : STR f_string\n                   | var \n                   | CALL to_strf_string :return : RET '(' expresion ')' empty :"
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,170,],[0,-1,]),'ID':([2,3,11,12,14,19,22,23,31,35,37,51,53,56,57,61,62,66,67,80,81,82,83,84,85,88,92,98,115,123,126,127,134,139,143,144,145,146,147,148,149,151,152,154,156,168,172,173,186,187,188,189,193,206,213,222,223,228,240,241,245,247,248,250,251,255,256,257,260,262,263,264,267,268,269,271,273,274,277,279,280,],[-2,4,-26,16,21,26,-40,-41,38,44,46,-133,69,-24,71,-25,74,78,-48,-47,-49,-50,-51,-52,109,78,130,44,-97,-104,109,78,166,-53,78,78,78,78,78,78,78,-97,-97,-97,78,78,78,203,78,78,78,78,-133,78,-71,-133,-133,78,78,-133,78,-133,-133,78,-84,-133,78,78,78,78,-120,-133,-116,-117,-111,-109,-113,-107,-133,78,-108,]),';':([4,5,43,44,46,47,58,60,71,74,78,93,95,100,101,102,103,104,105,106,107,108,118,119,120,122,124,125,133,135,137,138,140,153,155,157,158,166,167,169,171,184,191,197,204,205,209,210,211,212,216,217,218,219,220,224,226,234,235,236,237,238,242,243,252,261,276,278,],[-3,6,56,-30,-33,61,-28,-31,-30,-33,-79,-29,-32,-81,-5,139,-60,-55,-56,-57,-58,-59,-86,-89,-91,-94,-99,-106,165,-78,-133,170,-78,-88,-101,-100,-103,-80,-73,-76,-54,213,-60,-81,-124,-125,-121,-122,-123,-132,-90,-93,-96,-105,-78,-78,-61,-87,-92,-95,-98,-102,-72,-85,-74,-62,-85,-75,]),'TYPE':([6,7,8,10,76,97,164,196,],[-133,12,-7,-6,-15,-9,-15,-8,]),'DEF':([6,7,8,9,10,11,32,39,40,56,61,63,75,76,97,164,165,193,196,222,223,241,],[-133,-133,-7,14,-6,-26,-133,50,-13,-24,-25,-133,50,-15,-9,-15,-12,-133,-8,14,-133,14,]),'MAIN':([6,7,8,9,10,11,13,15,18,56,61,76,97,164,196,249,258,259,265,],[-133,-133,-7,-133,-6,-26,17,-17,-16,-24,-25,-15,-9,-15,-8,-23,-18,-23,-19,]),'FUNC':([6,7,8,9,10,11,13,15,18,32,39,40,49,56,61,63,64,75,76,96,97,132,164,165,196,249,258,259,265,],[-133,-133,-7,-133,-6,-26,19,-17,-16,-133,-14,-13,-133,-24,-25,-133,19,-14,-15,-133,-9,19,-15,-12,-8,-23,-18,-23,-19,]),'}':([11,15,18,32,39,40,49,51,56,61,63,64,66,67,75,80,81,82,83,84,96,132,139,165,193,213,222,223,240,241,247,248,249,250,255,256,257,258,259,262,263,264,265,267,268,269,271,273,274,277,279,280,],[-26,-17,-16,-133,-14,-13,-133,-133,-24,-25,-133,76,79,-48,-14,-47,-49,-50,-51,-52,-133,164,-53,-12,-133,-71,-133,-133,249,-133,-133,-133,-23,259,-133,263,264,-18,-23,267,-120,-133,-19,-116,-117,-111,-109,-113,-107,-133,280,-108,]),'CALL':([11,51,56,61,66,67,80,81,82,83,84,88,115,123,127,139,144,146,147,148,149,151,152,154,156,168,172,186,187,188,189,193,206,213,222,223,228,240,241,245,247,248,250,251,255,256,257,260,262,263,264,267,268,269,271,273,274,277,279,280,],[-26,-133,-24,-25,85,-48,-47,-49,-50,-51,-52,126,-97,-104,126,-53,179,126,126,126,126,-97,-97,-97,126,126,126,126,126,126,126,-133,179,-71,-133,-133,126,85,-133,126,-133,-133,85,-84,-133,85,85,126,85,-120,-133,-116,-117,-111,-109,-113,-107,-133,85,-108,]),'WHILE':([11,51,56,61,66,67,80,81,82,83,84,139,193,213,222,223,240,241,247,248,250,255,256,257,262,263,264,267,268,269,271,273,274,277,279,280,],[-26,-133,-24,-25,87,-48,-47,-49,-50,-51,-52,-53,-133,-71,-133,-133,87,-133,-133,-133,87,-133,87,87,87,-120,-133,-116,-117,-111,-109,-113,-107,-133,87,-108,]),'FOR':([11,51,56,61,66,67,80,81,82,83,84,139,193,213,222,223,240,241,247,248,250,255,256,257,262,263,264,267,268,269,271,273,274,277,279,280,],[-26,-133,-24,-25,88,-48,-47,-49,-50,-51,-52,-53,-133,-71,-133,-133,88,-133,-133,-133,88,-133,88,88,88,-120,-133,-116,-117,-111,-109,-113,-107,-133,88,-108,]),'IF':([11,51,56,61,66,67,80,81,82,83,84,139,193,213,222,223,240,241,247,248,250,255,256,257,262,263,264,267,268,269,271,273,274,277,279,280,],[-26,-133,-24,-25,89,-48,-47,-49,-50,-51,-52,-53,-133,-71,-133,-133,89,-133,-133,-133,89,-133,89,89,89,-120,-133,-116,-117,-111,-109,-113,-107,-133,89,-108,]),'NUMBER':([14,42,50,70,90,],[22,22,22,22,22,]),'STRING':([14,42,50,70,90,],[23,23,23,23,23,]),':':([16,20,21,22,23,24,27,29,30,59,65,68,73,77,78,99,109,142,163,195,],[-10,-133,-27,-40,-41,31,35,-36,37,-39,-133,90,-34,98,-77,134,-77,173,-39,-35,]),'{':([16,22,23,24,38,41,48,78,100,118,119,120,122,124,125,128,129,135,137,153,155,157,158,160,161,166,167,169,191,194,197,215,216,217,218,219,220,224,226,233,234,235,236,237,238,239,242,243,246,252,261,270,275,276,278,],[-10,-40,-41,32,-11,51,63,-79,-81,-86,-89,-91,-94,-99,-106,-22,-21,-78,-133,-88,-101,-100,-103,193,-22,-80,-73,-76,-60,223,-81,-119,-90,-93,-96,-105,-78,-78,-61,247,-87,-92,-95,-98,-102,248,-72,-85,255,-74,-62,-112,277,-85,-75,]),'(':([17,25,26,34,87,88,89,109,110,111,112,113,114,115,116,123,127,141,146,147,148,149,151,152,154,156,168,172,186,187,188,189,203,228,230,245,251,260,],[-4,33,-20,42,-114,123,127,-63,143,144,145,146,147,-97,149,-104,123,172,123,123,123,123,-97,-97,-97,123,123,123,123,123,123,123,-64,123,245,123,-84,123,]),'[':([20,22,23,59,65,78,100,136,166,197,243,],[28,-40,-41,72,28,-79,-82,168,-80,-82,251,]),'NUM':([28,72,88,115,121,123,127,146,147,148,149,151,152,154,156,168,172,186,187,188,189,228,245,251,260,],[36,94,125,-97,155,-104,125,125,125,125,125,-97,-97,-97,125,125,125,125,125,125,125,125,125,-84,125,]),')':([33,42,52,54,55,69,78,91,100,118,119,120,122,124,125,130,135,137,153,155,157,158,159,162,166,167,169,172,174,175,176,177,178,180,181,182,183,185,190,191,197,199,200,201,202,207,208,211,214,216,217,218,219,220,224,226,227,229,231,234,235,236,237,238,242,243,244,245,252,253,254,261,276,278,],[41,-133,68,-42,-43,-46,-79,-44,-81,-86,-89,-91,-94,-99,-106,-46,-78,-133,-88,-101,-100,-103,192,-45,-80,-73,-76,-70,204,205,-127,-131,-129,209,210,211,212,-115,219,-60,-81,226,-70,-66,-69,-128,-130,-123,232,-90,-93,-96,-105,-78,-78,-61,-65,-67,-126,-87,-92,-95,-98,-102,-72,-85,-69,-70,-74,-68,261,-62,-85,-75,]),']':([36,45,78,94,100,118,119,120,122,124,125,131,135,137,153,155,157,158,166,167,169,191,197,198,216,217,218,219,220,224,225,226,234,235,236,237,238,242,243,252,261,266,272,276,278,],[-37,59,-79,-38,-81,-86,-89,-91,-94,-99,-106,163,-78,-133,-88,-101,-100,-103,-80,-73,-76,-60,-81,-83,-90,-93,-96,-105,-78,-78,243,-61,-87,-92,-95,-98,-102,-72,-85,-74,-62,-83,276,-85,-75,]),',':([43,44,46,47,54,58,60,69,71,74,78,91,93,95,100,118,119,120,122,124,125,130,133,135,137,153,155,157,158,162,166,167,169,191,197,200,202,216,217,218,219,220,224,226,229,234,235,236,237,238,242,243,244,252,253,261,276,278,],[57,-30,-33,62,70,-28,-31,-46,-30,-33,-79,-44,-29,-32,-81,-86,-89,-91,-94,-99,-106,-46,57,-78,-133,-88,-101,-100,-103,-45,-80,-73,-76,-60,-81,228,-69,-90,-93,-96,-105,-78,-78,-61,-67,-87,-92,-95,-98,-102,-72,-85,-69,-74,-68,-62,-85,-75,]),'=':([78,86,100,135,137,166,167,169,197,224,242,243,252,276,278,],[-79,115,-81,-78,-133,-80,-73,-76,-81,-78,-72,-85,-74,-85,-75,]),'OPFACT':([78,100,120,122,124,125,135,137,155,157,158,166,167,169,191,197,217,218,219,220,224,226,236,237,238,242,243,252,261,276,278,],[-79,-81,154,-94,-99,-106,-78,-133,-101,-100,-103,-80,-73,-76,-60,-81,154,-96,-105,-78,-78,-61,-95,-98,-102,-72,-85,-74,-62,-85,-75,]),'OPTERM':([78,88,100,115,118,120,122,123,124,125,127,135,137,146,147,148,149,151,152,154,155,156,157,158,166,167,168,169,172,186,187,188,189,191,197,216,217,218,219,220,224,226,228,235,236,237,238,242,243,245,251,252,260,261,276,278,],[-79,121,-81,-97,152,-91,-94,-104,-99,-106,121,-78,-133,121,121,121,121,-97,-97,-97,-101,121,-100,-103,-80,-73,121,-76,121,121,121,121,121,-60,-81,152,-93,-96,-105,-78,-78,-61,121,-92,-95,-98,-102,-72,-85,121,-84,-74,121,-62,-85,-75,]),'COMP':([78,100,117,118,119,120,122,124,125,135,137,153,155,157,158,159,166,167,169,182,183,184,185,190,191,197,198,202,215,216,217,218,219,220,224,226,234,235,236,237,238,242,243,244,252,261,266,276,278,],[-79,-81,151,-86,-89,-91,-94,-99,-106,-78,-133,-88,-101,-100,-103,151,-80,-73,-76,151,151,151,151,151,-60,-81,151,151,151,-90,-93,-96,-105,-78,-78,-61,-87,-92,-95,-98,-102,-72,-85,151,-74,-62,151,-85,-75,]),'TO':([78,100,117,118,119,120,122,124,125,135,137,150,153,155,157,158,166,167,169,191,197,216,217,218,219,220,224,226,234,235,236,237,238,242,243,252,261,276,278,],[-79,-81,-118,-86,-89,-91,-94,-99,-106,-78,-133,186,-88,-101,-100,-103,-80,-73,-76,-60,-81,-90,-93,-96,-105,-78,-78,-61,-87,-92,-95,-98,-102,-72,-85,-74,-62,-85,-75,]),'&':([78,100,135,137,166,167,169,175,176,177,178,197,207,208,211,224,231,242,243,252,276,278,],[-79,-81,-78,-133,-80,-73,-76,206,-127,-131,-129,-81,-128,-130,-123,-78,-126,-72,-85,-74,-85,-75,]),'END':([79,],[101,]),'INPUT':([85,],[110,]),'PRINT':([85,],[111,]),'TO_NUMBER':([85,],[112,]),'TO_STRING':([85,179,],[113,113,]),'RET':([85,],[114,]),'STR':([88,115,123,127,144,145,146,147,148,149,156,168,172,186,206,228,245,251,260,],[119,-97,-104,119,177,180,119,119,119,119,119,119,119,119,177,119,119,-84,119,]),'NOTHING':([90,],[129,]),'THEN':([192,221,],[-110,239,]),'DO':([232,],[246,]),'ELSE':([264,],[270,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'f_start':([2,],[3,]),'f_prog':([4,],[5,]),'clases':([6,],[7,]),'empty':([6,7,9,20,32,42,49,51,63,65,96,137,193,222,223,241,247,248,255,264,277,],[8,11,15,29,40,55,15,67,40,29,15,169,11,67,11,67,67,67,67,271,67,]),'vars':([7,193,223,],[9,222,241,]),'clase':([7,],[10,]),'funciones':([9,49,96,],[13,64,132,]),'funcion':([13,64,132,],[18,18,18,]),'tipo':([14,42,50,70,90,],[20,53,65,92,128,]),'f_startclass':([16,],[24,]),'f_main':([17,],[25,]),'dimension':([20,65,],[27,77,]),'f_varsobj':([21,],[30,]),'f_startfunc':([26,],[34,]),'cvars':([32,63,],[39,75,]),'lista_id':([35,98,],[43,133,]),'f_dim1':([36,],[45,]),'lista_id_obj':([37,],[47,]),'f_clasepadre':([38,],[48,]),'f_cvars':([39,75,],[49,96,]),'params':([42,],[52,]),'pparams':([42,],[54,]),'f_vars':([44,71,],[58,93,]),'f_vars_obj':([46,74,],[60,95,]),'estatutos':([51,222,241,247,248,255,277,],[66,240,250,256,257,262,279,]),'f_enddim':([59,163,],[73,195,]),'estatuto':([66,240,250,256,257,262,279,],[80,80,80,80,80,80,80,]),'asignacion':([66,240,250,256,257,262,279,],[81,81,81,81,81,81,81,]),'while':([66,240,250,256,257,262,279,],[82,82,82,82,82,82,82,]),'for':([66,240,250,256,257,262,279,],[83,83,83,83,83,83,83,]),'condicion':([66,240,250,256,257,262,279,],[84,84,84,84,84,84,84,]),'var':([66,88,127,143,144,145,146,147,148,149,156,168,172,186,187,188,189,206,228,240,245,250,256,257,260,262,279,],[86,124,124,174,178,181,124,124,124,124,124,124,124,124,124,124,124,178,124,86,124,86,86,86,124,86,86,]),'f_param':([69,130,],[91,162,]),'f_endclass':([76,164,],[97,196,]),'f_varobj':([78,109,],[99,142,]),'f_verify_type':([78,],[100,]),'call_func':([85,],[102,]),'func':([85,126,],[103,158,]),'input':([85,],[104,]),'write':([85,],[105,]),'to_num':([85,],[106,]),'to_str':([85,179,],[107,208,]),'return':([85,],[108,]),'f_while':([87,],[116,]),'expresion':([88,127,146,147,148,149,156,168,172,186,228,245,260,],[117,159,182,183,184,185,190,198,202,215,244,202,266,]),'exp':([88,127,146,147,148,149,156,168,172,186,187,228,245,260,],[118,118,118,118,118,118,118,118,118,118,216,118,118,118,]),'term':([88,127,146,147,148,149,156,168,172,186,187,188,228,245,260,],[120,120,120,120,120,120,120,120,120,120,120,217,120,120,120,]),'fact':([88,127,146,147,148,149,156,168,172,186,187,188,189,228,245,260,],[122,122,122,122,122,122,122,122,122,122,122,122,218,122,122,122,]),'f_dim2':([94,],[131,]),'indexacion':([100,197,],[135,224,]),'f_start_array':([100,197,],[136,136,]),'f_no_index':([100,197,],[137,137,]),'f_end':([101,],[138,]),'f_end_call':([103,191,],[140,220,]),'f_verify_func':([109,],[141,]),'f_oper':([115,151,152,154,],[148,187,188,189,]),'f_for_start':([117,],[150,]),'f_string_expr':([119,],[153,]),'lparen':([123,],[156,]),'f_fact':([125,],[157,]),'f_tipofunc':([128,161,],[160,194,]),'f_nothing':([129,],[161,]),'f_end_check':([135,140,220,224,],[167,171,238,242,]),'write_list':([144,],[175,]),'write_listp':([144,206,],[176,231,]),'f_return_val':([158,],[191,]),'f_verify_type_composite':([166,],[197,]),'args':([172,245,],[199,254,]),'args_list':([172,245,],[200,200,]),'f_end_args':([172,200,245,],[201,227,201,]),'f_string':([177,],[207,]),'f_exprwhile':([185,],[214,]),'f_if':([192,],[221,]),'f_index':([198,266,],[225,272,]),'f_arg':([202,244,],[229,253,]),'f_verify_func_composite':([203,],[230,]),'f_for_to':([215,],[233,]),'f_expres':([216,],[234,]),'f_exp':([217,],[235,]),'f_term':([218,],[236,]),'rparen':([219,],[237,]),'f_end_array':([243,276,],[252,278,]),'f_endfunc':([249,259,],[258,265,]),'f_next_index':([251,],[260,]),'f_for_end':([263,],[268,]),'condicionp':([264,],[269,]),'f_endwhile':([267,],[273,]),'f_endif':([269,],[274,]),'f_else':([270,],[275,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> PROGRAM f_start ID f_prog ; clases vars funciones MAIN f_main ( ) { estatutos } END f_end ;','start',18,'p_start','aloop.py',231),
  ('f_start -> <empty>','f_start',0,'p_f_start','aloop.py',234),
  ('f_prog -> <empty>','f_prog',0,'p_f_prog','aloop.py',242),
  ('f_main -> <empty>','f_main',0,'p_f_main','aloop.py',247),
  ('f_end -> <empty>','f_end',0,'p_f_end','aloop.py',251),
  ('clases -> clases clase','clases',2,'p_clases','aloop.py',266),
  ('clases -> empty','clases',1,'p_clases','aloop.py',267),
  ('clase -> TYPE ID f_startclass : ID f_clasepadre { cvars f_cvars funciones } f_endclass','clase',12,'p_clase','aloop.py',270),
  ('clase -> TYPE ID f_startclass { cvars f_cvars funciones } f_endclass','clase',9,'p_clase','aloop.py',271),
  ('f_startclass -> <empty>','f_startclass',0,'p_f_startclass','aloop.py',274),
  ('f_clasepadre -> <empty>','f_clasepadre',0,'p_f_clasepadre','aloop.py',282),
  ('cvars -> cvars DEF tipo dimension : lista_id ;','cvars',7,'p_cvars','aloop.py',292),
  ('cvars -> empty','cvars',1,'p_cvars','aloop.py',293),
  ('f_cvars -> <empty>','f_cvars',0,'p_f_cvars','aloop.py',296),
  ('f_endclass -> <empty>','f_endclass',0,'p_f_endclass','aloop.py',302),
  ('funciones -> funciones funcion','funciones',2,'p_funciones','aloop.py',317),
  ('funciones -> empty','funciones',1,'p_funciones','aloop.py',318),
  ('funcion -> FUNC ID f_startfunc ( params ) : tipo f_tipofunc { vars estatutos } f_endfunc','funcion',14,'p_funcion','aloop.py',321),
  ('funcion -> FUNC ID f_startfunc ( params ) : NOTHING f_nothing f_tipofunc { vars estatutos } f_endfunc','funcion',15,'p_funcion','aloop.py',322),
  ('f_startfunc -> <empty>','f_startfunc',0,'p_f_startfunc','aloop.py',325),
  ('f_nothing -> <empty>','f_nothing',0,'p_f_nothing','aloop.py',330),
  ('f_tipofunc -> <empty>','f_tipofunc',0,'p_f_tipofunc','aloop.py',335),
  ('f_endfunc -> <empty>','f_endfunc',0,'p_f_endfunc','aloop.py',354),
  ('vars -> vars DEF tipo dimension : lista_id ;','vars',7,'p_vars','aloop.py',380),
  ('vars -> vars DEF ID f_varsobj : lista_id_obj ;','vars',7,'p_vars','aloop.py',381),
  ('vars -> empty','vars',1,'p_vars','aloop.py',382),
  ('f_varsobj -> <empty>','f_varsobj',0,'p_f_varsobj','aloop.py',385),
  ('lista_id -> ID f_vars','lista_id',2,'p_lista_id','aloop.py',397),
  ('lista_id -> lista_id , ID f_vars','lista_id',4,'p_lista_id','aloop.py',398),
  ('f_vars -> <empty>','f_vars',0,'p_f_vars','aloop.py',401),
  ('lista_id_obj -> ID f_vars_obj','lista_id_obj',2,'p_lista_id_obj','aloop.py',451),
  ('lista_id_obj -> lista_id_obj , ID f_vars_obj','lista_id_obj',4,'p_lista_id_obj','aloop.py',452),
  ('f_vars_obj -> <empty>','f_vars_obj',0,'p_f_vars_obj','aloop.py',455),
  ('dimension -> [ NUM f_dim1 ] f_enddim','dimension',5,'p_dimension','aloop.py',473),
  ('dimension -> [ NUM f_dim1 ] [ NUM f_dim2 ] f_enddim','dimension',9,'p_dimension','aloop.py',474),
  ('dimension -> empty','dimension',1,'p_dimension','aloop.py',475),
  ('f_dim1 -> <empty>','f_dim1',0,'p_f_dim1','aloop.py',478),
  ('f_dim2 -> <empty>','f_dim2',0,'p_f_dim2','aloop.py',486),
  ('f_enddim -> <empty>','f_enddim',0,'p_f_enddim','aloop.py',493),
  ('tipo -> NUMBER','tipo',1,'p_tipo','aloop.py',500),
  ('tipo -> STRING','tipo',1,'p_tipo','aloop.py',501),
  ('params -> pparams','params',1,'p_params','aloop.py',509),
  ('params -> empty','params',1,'p_params','aloop.py',510),
  ('pparams -> tipo ID f_param','pparams',3,'p_pparams','aloop.py',513),
  ('pparams -> pparams , tipo ID f_param','pparams',5,'p_pparams','aloop.py',514),
  ('f_param -> <empty>','f_param',0,'p_f_param','aloop.py',517),
  ('estatutos -> estatutos estatuto','estatutos',2,'p_estatutos','aloop.py',533),
  ('estatutos -> empty','estatutos',1,'p_estatutos','aloop.py',534),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','aloop.py',537),
  ('estatuto -> while','estatuto',1,'p_estatuto','aloop.py',538),
  ('estatuto -> for','estatuto',1,'p_estatuto','aloop.py',539),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','aloop.py',540),
  ('estatuto -> CALL call_func ;','estatuto',3,'p_estatuto','aloop.py',541),
  ('call_func -> func f_end_call f_end_check','call_func',3,'p_call_func','aloop.py',544),
  ('call_func -> input','call_func',1,'p_call_func','aloop.py',545),
  ('call_func -> write','call_func',1,'p_call_func','aloop.py',546),
  ('call_func -> to_num','call_func',1,'p_call_func','aloop.py',547),
  ('call_func -> to_str','call_func',1,'p_call_func','aloop.py',548),
  ('call_func -> return','call_func',1,'p_call_func','aloop.py',549),
  ('f_end_call -> <empty>','f_end_call',0,'p_f_end_call','aloop.py',552),
  ('func -> ID f_verify_func ( args )','func',5,'p_func','aloop.py',568),
  ('func -> ID f_varobj : ID f_verify_func_composite ( args )','func',8,'p_func','aloop.py',569),
  ('f_verify_func -> <empty>','f_verify_func',0,'p_f_verify_func','aloop.py',572),
  ('f_verify_func_composite -> <empty>','f_verify_func_composite',0,'p_f_verify_func_composite','aloop.py',590),
  ('args -> args_list f_end_args','args',2,'p_args','aloop.py',609),
  ('args -> f_end_args','args',1,'p_args','aloop.py',610),
  ('args_list -> expresion f_arg','args_list',2,'p_args_list','aloop.py',613),
  ('args_list -> args_list , expresion f_arg','args_list',4,'p_args_list','aloop.py',614),
  ('f_arg -> <empty>','f_arg',0,'p_f_arg','aloop.py',617),
  ('f_end_args -> <empty>','f_end_args',0,'p_f_end_args','aloop.py',636),
  ('asignacion -> var = f_oper expresion ;','asignacion',5,'p_asignacion','aloop.py',646),
  ('var -> ID f_varobj : ID f_verify_type_composite indexacion f_end_check','var',7,'p_var','aloop.py',653),
  ('var -> ID f_verify_type indexacion f_end_check','var',4,'p_var','aloop.py',654),
  ('indexacion -> f_start_array [ expresion f_index ] f_end_array','indexacion',6,'p_indexacion','aloop.py',657),
  ('indexacion -> f_start_array [ expresion f_index ] [ f_next_index expresion f_index ] f_end_array','indexacion',11,'p_indexacion','aloop.py',658),
  ('indexacion -> f_no_index empty','indexacion',2,'p_indexacion','aloop.py',659),
  ('f_varobj -> <empty>','f_varobj',0,'p_f_varobj','aloop.py',662),
  ('f_end_check -> <empty>','f_end_check',0,'p_f_end_check','aloop.py',666),
  ('f_verify_type -> <empty>','f_verify_type',0,'p_f_verify_type','aloop.py',670),
  ('f_verify_type_composite -> <empty>','f_verify_type_composite',0,'p_f_verify_type_composite','aloop.py',712),
  ('f_no_index -> <empty>','f_no_index',0,'p_f_no_index','aloop.py',736),
  ('f_start_array -> <empty>','f_start_array',0,'p_f_start_array','aloop.py',743),
  ('f_index -> <empty>','f_index',0,'p_f_index','aloop.py',756),
  ('f_next_index -> <empty>','f_next_index',0,'p_f_next_index','aloop.py',786),
  ('f_end_array -> <empty>','f_end_array',0,'p_f_end_array','aloop.py',793),
  ('expresion -> exp','expresion',1,'p_expresion','aloop.py',828),
  ('expresion -> expresion COMP f_oper exp f_expres','expresion',5,'p_expresion','aloop.py',829),
  ('expresion -> STR f_string_expr','expresion',2,'p_expresion','aloop.py',830),
  ('f_string_expr -> <empty>','f_string_expr',0,'p_f_string_expr','aloop.py',833),
  ('f_expres -> <empty>','f_expres',0,'p_f_expres','aloop.py',838),
  ('exp -> term','exp',1,'p_exp','aloop.py',862),
  ('exp -> exp OPTERM f_oper term f_exp','exp',5,'p_exp','aloop.py',863),
  ('f_exp -> <empty>','f_exp',0,'p_f_exp','aloop.py',867),
  ('term -> fact','term',1,'p_term','aloop.py',891),
  ('term -> term OPFACT f_oper fact f_term','term',5,'p_term','aloop.py',892),
  ('f_term -> <empty>','f_term',0,'p_f_term','aloop.py',896),
  ('f_oper -> <empty>','f_oper',0,'p_f_oper','aloop.py',921),
  ('fact -> ( lparen expresion ) rparen','fact',5,'p_fact','aloop.py',925),
  ('fact -> var','fact',1,'p_fact','aloop.py',926),
  ('fact -> NUM f_fact','fact',2,'p_fact','aloop.py',927),
  ('fact -> OPTERM NUM','fact',2,'p_fact','aloop.py',928),
  ('fact -> CALL func f_return_val f_end_call f_end_check','fact',5,'p_fact','aloop.py',929),
  ('f_return_val -> <empty>','f_return_val',0,'p_f_return_val','aloop.py',942),
  ('lparen -> <empty>','lparen',0,'p_lparen','aloop.py',968),
  ('rparen -> <empty>','rparen',0,'p_rparen','aloop.py',972),
  ('f_fact -> <empty>','f_fact',0,'p_f_fact','aloop.py',976),
  ('condicion -> IF ( expresion ) f_if THEN { estatutos } condicionp f_endif','condicion',11,'p_condicion','aloop.py',982),
  ('condicionp -> ELSE f_else { estatutos }','condicionp',5,'p_condicionp','aloop.py',985),
  ('condicionp -> empty','condicionp',1,'p_condicionp','aloop.py',986),
  ('f_if -> <empty>','f_if',0,'p_f_if','aloop.py',989),
  ('f_endif -> <empty>','f_endif',0,'p_f_endif','aloop.py',999),
  ('f_else -> <empty>','f_else',0,'p_f_else','aloop.py',1004),
  ('while -> WHILE f_while ( expresion f_exprwhile ) DO { estatutos } f_endwhile','while',11,'p_while','aloop.py',1011),
  ('f_while -> <empty>','f_while',0,'p_f_while','aloop.py',1014),
  ('f_exprwhile -> <empty>','f_exprwhile',0,'p_f_exprwhile','aloop.py',1018),
  ('f_endwhile -> <empty>','f_endwhile',0,'p_f_endwhile','aloop.py',1028),
  ('for -> FOR expresion f_for_start TO expresion f_for_to { estatutos } f_for_end','for',10,'p_for','aloop.py',1035),
  ('f_for_start -> <empty>','f_for_start',0,'p_f_for_start','aloop.py',1038),
  ('f_for_to -> <empty>','f_for_to',0,'p_f_for_to','aloop.py',1048),
  ('f_for_end -> <empty>','f_for_end',0,'p_f_for_end','aloop.py',1064),
  ('to_num -> TO_NUMBER ( STR )','to_num',4,'p_to_num','aloop.py',1076),
  ('to_num -> TO_NUMBER ( var )','to_num',4,'p_to_num','aloop.py',1077),
  ('to_str -> TO_STRING ( expresion )','to_str',4,'p_to_str','aloop.py',1090),
  ('input -> INPUT ( var )','input',4,'p_input','aloop.py',1103),
  ('write -> PRINT ( write_list )','write',4,'p_write','aloop.py',1107),
  ('write_list -> write_list & write_listp','write_list',3,'p_write_list','aloop.py',1110),
  ('write_list -> write_listp','write_list',1,'p_write_list','aloop.py',1111),
  ('write_listp -> STR f_string','write_listp',2,'p_write_listp','aloop.py',1114),
  ('write_listp -> var','write_listp',1,'p_write_listp','aloop.py',1115),
  ('write_listp -> CALL to_str','write_listp',2,'p_write_listp','aloop.py',1116),
  ('f_string -> <empty>','f_string',0,'p_f_string','aloop.py',1123),
  ('return -> RET ( expresion )','return',4,'p_return','aloop.py',1129),
  ('empty -> <empty>','empty',0,'p_empty','aloop.py',1161),
]
