
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "startCALL COMP DEF DO ELSE END FOR FUNC ID IF INPUT MAIN NOTHING NUM NUMBER OPFACT OPTERM PRINT PROGRAM RET STR STRING THEN TO TO_NUMBER TO_STRING TYPE WHILEstart : PROGRAM ID ';' clases vars funciones MAIN '(' ')' '{' estatutos '}' END ';' clases : clases clase\n              | emptyclase : TYPE ID ':' ID '{' cvars funciones '}' \n             | TYPE ID '{' cvars funciones '}' funciones : funciones funcion\n                  | emptyfuncion : FUNC ID '(' params ')' ':' tipo '{' vars estatutos '}'\n               | FUNC ID '(' params ')' ':' NOTHING '{' vars estatutos '}' vars : vars DEF tipo dimension ':' lista_id ';'\n            | vars DEF ID ':' lista_id ';'\n            | emptycvars : cvars DEF tipo dimension ':' lista_id ';'\n             | emptylista_id : ID \n                | lista_id ',' IDdimension : '[' expresion ']' \n                 | '[' expresion ']' '[' expresion ']' \n                 | emptytipo : NUMBER \n            | STRINGparams : pparams \n              | emptypparams : tipo ID\n               | pparams ',' tipo IDestatutos : estatutos estatuto \n                 | emptyestatuto : asignacion \n                | while \n                | for \n                | condicion \n                | CALL call_func ';' call_func : func\n                 | input \n                 | write \n                 | to_num \n                 | to_str\n                 | return func : ID  '(' args ')'\n            | ID  ':' ID '(' args ')' args : args_list\n            | emptyargs_list : expresion \n                 | args_list ',' expresionasignacion : var '=' expresion ';' var : ID ':' ID dimension\n           | ID dimensionexpresion : exp\n                 | expresion COMP expexp : term\n           | exp OPTERM termterm : fact\n            | term OPFACT factfact : '(' expresion ')'\n            | var\n            | NUM\n            | OPTERM NUM\n            | CALL call_funccondicion : IF '(' expresion ')' THEN '{' estatutos '}' condicionpcondicionp : ELSE '{' estatutos '}'\n                  | empty while : WHILE '(' expresion ')' DO '{' estatutos '}' for : FOR expresion TO expresion '{' estatutos '}' to_num : TO_NUMBER '(' STR ')' \n              | TO_NUMBER '(' var ')' to_str : TO_STRING '(' expresion ')' input : INPUT '(' var ')' write : PRINT '(' write_list ')' write_list : write_list '&' write_listp\n                  | write_listpwrite_listp : STR \n                   | var \n                   | to_strreturn : RET '(' expresion ')' empty :"
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,158,],[0,-1,]),'ID':([2,9,10,12,17,20,21,22,27,29,35,41,44,51,53,58,59,60,76,78,79,83,84,88,89,94,95,96,97,98,99,100,106,107,108,109,110,111,114,117,136,139,140,142,148,149,152,159,162,164,165,170,174,175,178,180,181,182,183,184,187,188,189,190,191,192,194,195,196,197,],[3,-12,14,19,25,-20,-21,30,45,46,46,45,70,-75,86,45,45,45,101,-11,102,45,-27,-10,45,45,123,45,45,45,45,45,-26,-28,-29,-30,-31,70,45,145,46,45,45,45,45,45,45,-32,45,-75,-75,-45,-75,-75,-75,45,45,-75,45,-75,45,-63,45,-62,-75,-59,-61,-75,45,-60,]),';':([3,28,37,38,40,42,43,45,46,47,56,57,61,63,64,65,66,67,68,69,77,90,91,92,93,101,102,134,137,138,146,147,150,151,153,154,155,156,157,160,176,],[4,-19,-48,-50,-52,-55,-56,-75,-15,78,88,-17,-57,-58,-33,-34,-35,-36,-37,-38,-47,-49,-51,-53,-54,-75,-16,-46,158,159,-18,-39,-67,-68,-64,-65,-66,-74,169,170,-40,]),'TYPE':([4,5,6,8,81,135,],[-75,10,-3,-2,-5,-4,]),'DEF':([4,5,6,7,8,9,23,31,32,48,78,80,81,88,135,164,165,169,174,175,],[-75,-75,-3,12,-2,-12,-75,50,-14,-75,-11,50,-5,-10,-4,-75,-75,-13,12,12,]),'MAIN':([4,5,6,7,8,9,11,13,16,78,81,88,135,185,186,],[-75,-75,-3,-75,-2,-12,15,-7,-6,-11,-5,-10,-4,-8,-9,]),'FUNC':([4,5,6,7,8,9,11,13,16,23,31,32,48,49,78,80,81,88,103,135,169,185,186,],[-75,-75,-3,-75,-2,-12,17,-7,-6,-75,-75,-14,-75,17,-11,-75,-5,-10,17,-4,-13,-8,-9,]),'}':([9,13,16,23,31,32,48,49,51,78,80,83,84,88,103,106,107,108,109,110,159,164,165,169,170,174,175,178,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,],[-12,-7,-6,-75,-75,-14,-75,81,-75,-11,-75,105,-27,-10,135,-26,-28,-29,-30,-31,-32,-75,-75,-13,-45,-75,-75,-75,185,186,-75,188,-75,-8,-9,190,-63,191,-62,-75,-59,-61,-75,197,-60,]),'CALL':([9,27,41,51,58,59,60,78,83,84,88,89,94,99,100,106,107,108,109,110,114,139,140,142,148,149,159,162,164,165,170,174,175,178,180,181,182,183,184,187,188,189,190,191,192,194,195,196,197,],[-12,44,44,-75,44,44,44,-11,111,-27,-10,44,44,44,44,-26,-28,-29,-30,-31,44,44,44,44,44,44,-32,44,-75,-75,-45,-75,-75,-75,111,111,-75,111,-75,111,-63,111,-62,-75,-59,-61,-75,111,-60,]),'WHILE':([9,51,78,83,84,88,106,107,108,109,110,159,164,165,170,174,175,178,180,181,182,183,184,187,188,189,190,191,192,194,195,196,197,],[-12,-75,-11,113,-27,-10,-26,-28,-29,-30,-31,-32,-75,-75,-45,-75,-75,-75,113,113,-75,113,-75,113,-63,113,-62,-75,-59,-61,-75,113,-60,]),'FOR':([9,51,78,83,84,88,106,107,108,109,110,159,164,165,170,174,175,178,180,181,182,183,184,187,188,189,190,191,192,194,195,196,197,],[-12,-75,-11,114,-27,-10,-26,-28,-29,-30,-31,-32,-75,-75,-45,-75,-75,-75,114,114,-75,114,-75,114,-63,114,-62,-75,-59,-61,-75,114,-60,]),'IF':([9,51,78,83,84,88,106,107,108,109,110,159,164,165,170,174,175,178,180,181,182,183,184,187,188,189,190,191,192,194,195,196,197,],[-12,-75,-11,115,-27,-10,-26,-28,-29,-30,-31,-32,-75,-75,-45,-75,-75,-75,115,115,-75,115,-75,115,-63,115,-62,-75,-59,-61,-75,115,-60,]),'NUMBER':([12,34,50,87,116,],[20,20,20,20,20,]),'STRING':([12,34,50,87,116,],[21,21,21,21,21,]),':':([14,18,19,20,21,26,28,45,57,70,82,85,104,146,],[22,-75,29,-20,-21,35,-19,76,-17,95,-75,116,136,-18,]),'{':([14,20,21,28,30,33,37,38,40,42,43,45,57,61,63,64,65,66,67,68,69,77,90,91,92,93,101,134,143,144,146,147,150,151,153,154,155,156,172,176,177,179,193,],[23,-20,-21,-19,48,51,-48,-50,-52,-55,-56,-75,-17,-57,-58,-33,-34,-35,-36,-37,-38,-47,-49,-51,-53,-54,-75,-46,164,165,-18,-39,-67,-68,-64,-65,-66,-74,178,-40,182,184,195,]),'(':([15,25,27,41,58,59,60,70,71,72,73,74,75,89,94,99,100,113,114,115,123,139,140,142,148,149,162,],[24,34,41,41,41,41,41,94,96,97,98,99,100,41,41,41,41,140,41,142,149,41,41,41,41,41,41,]),'[':([18,20,21,45,57,82,101,],[27,-20,-21,27,89,27,27,]),')':([24,28,34,37,38,40,42,43,45,52,54,55,57,61,62,63,64,65,66,67,68,69,77,86,90,91,92,93,94,101,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,145,146,147,149,150,151,153,154,155,156,161,163,166,167,168,176,],[33,-19,-75,-48,-50,-52,-55,-56,-75,85,-22,-23,-17,-57,93,-58,-33,-34,-35,-36,-37,-38,-47,-24,-49,-51,-53,-54,-75,-75,147,-41,-42,-43,150,151,-70,-71,-72,-73,153,154,155,156,-46,-25,-18,-39,-75,-67,-68,-64,-65,-66,-74,171,173,-44,176,-69,-40,]),'NUM':([27,39,41,58,59,60,89,94,99,100,114,139,140,142,148,149,162,],[43,61,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'OPTERM':([27,28,37,38,40,41,42,43,45,57,58,59,60,61,63,64,65,66,67,68,69,77,89,90,91,92,93,94,99,100,101,114,134,139,140,142,146,147,148,149,150,151,153,154,155,156,162,176,],[39,-19,59,-50,-52,39,-55,-56,-75,-17,39,39,39,-57,-58,-33,-34,-35,-36,-37,-38,-47,39,59,-51,-53,-54,39,39,39,-75,39,-46,39,39,39,-18,-39,39,39,-67,-68,-64,-65,-66,-74,39,-40,]),'OPFACT':([28,38,40,42,43,45,57,61,63,64,65,66,67,68,69,77,91,92,93,101,134,146,147,150,151,153,154,155,156,176,],[-19,60,-52,-55,-56,-75,-17,-57,-58,-33,-34,-35,-36,-37,-38,-47,60,-53,-54,-75,-46,-18,-39,-67,-68,-64,-65,-66,-74,-40,]),']':([28,36,37,38,40,42,43,45,57,61,63,64,65,66,67,68,69,77,90,91,92,93,101,118,134,146,147,150,151,153,154,155,156,176,],[-19,57,-48,-50,-52,-55,-56,-75,-17,-57,-58,-33,-34,-35,-36,-37,-38,-47,-49,-51,-53,-54,-75,146,-46,-18,-39,-67,-68,-64,-65,-66,-74,-40,]),'COMP':([28,36,37,38,40,42,43,45,57,61,62,63,64,65,66,67,68,69,77,90,91,92,93,101,118,122,132,133,134,141,146,147,150,151,153,154,155,156,160,161,163,166,172,176,],[-19,58,-48,-50,-52,-55,-56,-75,-17,-57,58,-58,-33,-34,-35,-36,-37,-38,-47,-49,-51,-53,-54,-75,58,58,58,58,-46,58,-18,-39,-67,-68,-64,-65,-66,-74,58,58,58,58,58,-40,]),',':([28,37,38,40,42,43,45,46,47,54,56,57,61,63,64,65,66,67,68,69,77,86,90,91,92,93,101,102,120,122,134,145,146,147,150,151,153,154,155,156,157,166,176,],[-19,-48,-50,-52,-55,-56,-75,-15,79,87,79,-17,-57,-58,-33,-34,-35,-36,-37,-38,-47,-24,-49,-51,-53,-54,-75,-16,148,-43,-46,-25,-18,-39,-67,-68,-64,-65,-66,-74,79,-44,-40,]),'TO':([28,37,38,40,42,43,45,57,61,63,64,65,66,67,68,69,77,90,91,92,93,101,134,141,146,147,150,151,153,154,155,156,176,],[-19,-48,-50,-52,-55,-56,-75,-17,-57,-58,-33,-34,-35,-36,-37,-38,-47,-49,-51,-53,-54,-75,-46,162,-18,-39,-67,-68,-64,-65,-66,-74,-40,]),'=':([28,45,57,77,101,112,134,146,],[-19,-75,-17,-47,-75,139,-46,-18,]),'&':([28,45,57,77,101,125,126,127,128,129,134,146,155,168,],[-19,-75,-17,-47,-75,152,-70,-71,-72,-73,-46,-18,-66,-69,]),'INPUT':([44,111,],[71,71,]),'PRINT':([44,111,],[72,72,]),'TO_NUMBER':([44,111,],[73,73,]),'TO_STRING':([44,97,111,152,],[74,74,74,74,]),'RET':([44,111,],[75,75,]),'STR':([97,98,152,],[127,130,127,]),'END':([105,],[137,]),'NOTHING':([116,],[144,]),'DO':([171,],[177,]),'THEN':([173,],[179,]),'ELSE':([191,],[193,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'clases':([4,],[5,]),'empty':([4,5,7,18,23,31,34,45,48,51,80,82,94,101,149,164,165,174,175,178,182,184,191,195,],[6,9,13,28,32,13,55,28,32,84,13,28,121,28,121,9,9,84,84,84,84,84,194,84,]),'vars':([5,164,165,],[7,174,175,]),'clase':([5,],[8,]),'funciones':([7,31,80,],[11,49,103,]),'funcion':([11,49,103,],[16,16,16,]),'tipo':([12,34,50,87,116,],[18,53,82,117,143,]),'dimension':([18,45,82,101,],[26,77,104,134,]),'cvars':([23,48,],[31,80,]),'expresion':([27,41,89,94,99,100,114,139,140,142,148,149,162,],[36,62,118,122,132,133,141,160,161,163,166,122,172,]),'exp':([27,41,58,89,94,99,100,114,139,140,142,148,149,162,],[37,37,90,37,37,37,37,37,37,37,37,37,37,37,]),'term':([27,41,58,59,89,94,99,100,114,139,140,142,148,149,162,],[38,38,38,91,38,38,38,38,38,38,38,38,38,38,38,]),'fact':([27,41,58,59,60,89,94,99,100,114,139,140,142,148,149,162,],[40,40,40,40,92,40,40,40,40,40,40,40,40,40,40,40,]),'var':([27,41,58,59,60,83,89,94,96,97,98,99,100,114,139,140,142,148,149,152,162,180,181,183,187,189,196,],[42,42,42,42,42,112,42,42,124,128,131,42,42,42,42,42,42,42,42,128,42,112,112,112,112,112,112,]),'lista_id':([29,35,136,],[47,56,157,]),'params':([34,],[52,]),'pparams':([34,],[54,]),'call_func':([44,111,],[63,138,]),'func':([44,111,],[64,64,]),'input':([44,111,],[65,65,]),'write':([44,111,],[66,66,]),'to_num':([44,111,],[67,67,]),'to_str':([44,97,111,152,],[68,129,68,129,]),'return':([44,111,],[69,69,]),'estatutos':([51,174,175,178,182,184,195,],[83,180,181,183,187,189,196,]),'estatuto':([83,180,181,183,187,189,196,],[106,106,106,106,106,106,106,]),'asignacion':([83,180,181,183,187,189,196,],[107,107,107,107,107,107,107,]),'while':([83,180,181,183,187,189,196,],[108,108,108,108,108,108,108,]),'for':([83,180,181,183,187,189,196,],[109,109,109,109,109,109,109,]),'condicion':([83,180,181,183,187,189,196,],[110,110,110,110,110,110,110,]),'args':([94,149,],[119,167,]),'args_list':([94,149,],[120,120,]),'write_list':([97,],[125,]),'write_listp':([97,152,],[126,168,]),'condicionp':([191,],[192,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> PROGRAM ID ; clases vars funciones MAIN ( ) { estatutos } END ;','start',14,'p_start','aloop.py',85),
  ('clases -> clases clase','clases',2,'p_clases','aloop.py',88),
  ('clases -> empty','clases',1,'p_clases','aloop.py',89),
  ('clase -> TYPE ID : ID { cvars funciones }','clase',8,'p_clase','aloop.py',92),
  ('clase -> TYPE ID { cvars funciones }','clase',6,'p_clase','aloop.py',93),
  ('funciones -> funciones funcion','funciones',2,'p_funciones','aloop.py',96),
  ('funciones -> empty','funciones',1,'p_funciones','aloop.py',97),
  ('funcion -> FUNC ID ( params ) : tipo { vars estatutos }','funcion',11,'p_funcion','aloop.py',100),
  ('funcion -> FUNC ID ( params ) : NOTHING { vars estatutos }','funcion',11,'p_funcion','aloop.py',101),
  ('vars -> vars DEF tipo dimension : lista_id ;','vars',7,'p_vars','aloop.py',104),
  ('vars -> vars DEF ID : lista_id ;','vars',6,'p_vars','aloop.py',105),
  ('vars -> empty','vars',1,'p_vars','aloop.py',106),
  ('cvars -> cvars DEF tipo dimension : lista_id ;','cvars',7,'p_cvars','aloop.py',109),
  ('cvars -> empty','cvars',1,'p_cvars','aloop.py',110),
  ('lista_id -> ID','lista_id',1,'p_lista_id','aloop.py',113),
  ('lista_id -> lista_id , ID','lista_id',3,'p_lista_id','aloop.py',114),
  ('dimension -> [ expresion ]','dimension',3,'p_dimension','aloop.py',117),
  ('dimension -> [ expresion ] [ expresion ]','dimension',6,'p_dimension','aloop.py',118),
  ('dimension -> empty','dimension',1,'p_dimension','aloop.py',119),
  ('tipo -> NUMBER','tipo',1,'p_tipo','aloop.py',122),
  ('tipo -> STRING','tipo',1,'p_tipo','aloop.py',123),
  ('params -> pparams','params',1,'p_params','aloop.py',126),
  ('params -> empty','params',1,'p_params','aloop.py',127),
  ('pparams -> tipo ID','pparams',2,'p_pparams','aloop.py',130),
  ('pparams -> pparams , tipo ID','pparams',4,'p_pparams','aloop.py',131),
  ('estatutos -> estatutos estatuto','estatutos',2,'p_estatutos','aloop.py',134),
  ('estatutos -> empty','estatutos',1,'p_estatutos','aloop.py',135),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','aloop.py',138),
  ('estatuto -> while','estatuto',1,'p_estatuto','aloop.py',139),
  ('estatuto -> for','estatuto',1,'p_estatuto','aloop.py',140),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','aloop.py',141),
  ('estatuto -> CALL call_func ;','estatuto',3,'p_estatuto','aloop.py',142),
  ('call_func -> func','call_func',1,'p_call_func','aloop.py',145),
  ('call_func -> input','call_func',1,'p_call_func','aloop.py',146),
  ('call_func -> write','call_func',1,'p_call_func','aloop.py',147),
  ('call_func -> to_num','call_func',1,'p_call_func','aloop.py',148),
  ('call_func -> to_str','call_func',1,'p_call_func','aloop.py',149),
  ('call_func -> return','call_func',1,'p_call_func','aloop.py',150),
  ('func -> ID ( args )','func',4,'p_func','aloop.py',153),
  ('func -> ID : ID ( args )','func',6,'p_func','aloop.py',154),
  ('args -> args_list','args',1,'p_args','aloop.py',157),
  ('args -> empty','args',1,'p_args','aloop.py',158),
  ('args_list -> expresion','args_list',1,'p_args_list','aloop.py',161),
  ('args_list -> args_list , expresion','args_list',3,'p_args_list','aloop.py',162),
  ('asignacion -> var = expresion ;','asignacion',4,'p_asignacion','aloop.py',165),
  ('var -> ID : ID dimension','var',4,'p_var','aloop.py',168),
  ('var -> ID dimension','var',2,'p_var','aloop.py',169),
  ('expresion -> exp','expresion',1,'p_expresion','aloop.py',172),
  ('expresion -> expresion COMP exp','expresion',3,'p_expresion','aloop.py',173),
  ('exp -> term','exp',1,'p_exp','aloop.py',176),
  ('exp -> exp OPTERM term','exp',3,'p_exp','aloop.py',177),
  ('term -> fact','term',1,'p_term','aloop.py',180),
  ('term -> term OPFACT fact','term',3,'p_term','aloop.py',181),
  ('fact -> ( expresion )','fact',3,'p_fact','aloop.py',184),
  ('fact -> var','fact',1,'p_fact','aloop.py',185),
  ('fact -> NUM','fact',1,'p_fact','aloop.py',186),
  ('fact -> OPTERM NUM','fact',2,'p_fact','aloop.py',187),
  ('fact -> CALL call_func','fact',2,'p_fact','aloop.py',188),
  ('condicion -> IF ( expresion ) THEN { estatutos } condicionp','condicion',9,'p_condicion','aloop.py',191),
  ('condicionp -> ELSE { estatutos }','condicionp',4,'p_condicionp','aloop.py',194),
  ('condicionp -> empty','condicionp',1,'p_condicionp','aloop.py',195),
  ('while -> WHILE ( expresion ) DO { estatutos }','while',8,'p_while','aloop.py',198),
  ('for -> FOR expresion TO expresion { estatutos }','for',7,'p_for','aloop.py',201),
  ('to_num -> TO_NUMBER ( STR )','to_num',4,'p_to_num','aloop.py',204),
  ('to_num -> TO_NUMBER ( var )','to_num',4,'p_to_num','aloop.py',205),
  ('to_str -> TO_STRING ( expresion )','to_str',4,'p_to_str','aloop.py',208),
  ('input -> INPUT ( var )','input',4,'p_input','aloop.py',211),
  ('write -> PRINT ( write_list )','write',4,'p_write','aloop.py',214),
  ('write_list -> write_list & write_listp','write_list',3,'p_write_list','aloop.py',217),
  ('write_list -> write_listp','write_list',1,'p_write_list','aloop.py',218),
  ('write_listp -> STR','write_listp',1,'p_write_listp','aloop.py',221),
  ('write_listp -> var','write_listp',1,'p_write_listp','aloop.py',222),
  ('write_listp -> to_str','write_listp',1,'p_write_listp','aloop.py',223),
  ('return -> RET ( expresion )','return',4,'p_return','aloop.py',226),
  ('empty -> <empty>','empty',0,'p_empty','aloop.py',229),
]
