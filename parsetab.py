
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "startCALL COMP DEF DO ELSE END FOR FUNC ID IF INPUT MAIN NOTHING NUM NUMBER OPFACT OPTERM PRINT PROGRAM RET STR STRING THEN TO TO_NUMBER TO_STRING TYPE WHILEstart : PROGRAM f_start ID f_prog ';' clases vars funciones MAIN f_main '(' ')' '{' estatutos '}' END f_end ';' f_start :f_prog :f_main :f_end : clases : clases clase\n              | emptyclase : TYPE ID f_startclass ':' ID f_clasepadre '{' cvars f_cvars funciones '}' f_endclass \n             | TYPE ID f_startclass '{' cvars f_cvars funciones '}' f_endclass f_startclass :f_clasepadre :cvars : cvars DEF tipo dimension ':' lista_id ';'\n             | emptyf_cvars :f_endclass :funciones : funciones funcion\n                  | emptyfuncion : FUNC ID f_startfunc '(' params ')' ':' tipo f_tipofunc '{' cvars estatutos '}' f_endfunc\n               | FUNC ID f_startfunc '(' params ')' ':' NOTHING f_nothing f_tipofunc '{' cvars estatutos '}' f_endfunc f_startfunc :f_nothing :f_tipofunc :f_endfunc :vars : vars DEF tipo dimension ':' lista_id ';'\n            | vars DEF ID f_varsobj ':' lista_id_obj ';'\n            | emptyf_varsobj :lista_id : ID f_vars\n                | lista_id ',' ID f_varsf_vars :lista_id_obj : ID f_vars_obj\n                    | lista_id_obj ',' ID f_vars_objf_vars_obj :dimension : '[' NUM f_dim1 ']' f_enddim\n                 | '[' NUM f_dim1 ']' '[' NUM f_dim2 ']' f_enddim\n                 | emptyf_dim1 :f_dim2 :f_enddim :tipo : NUMBER \n            | STRINGparams : pparams \n              | emptypparams : tipo ID f_param\n               | pparams ',' tipo ID f_paramf_param :estatutos : estatutos estatuto \n                 | emptyestatuto : asignacion \n                | while \n                | for \n                | condicion \n                | CALL call_func ';' call_func : func f_end_call f_end_check\n                 | input \n                 | write \n                 | to_num \n                 | to_str\n                 | return f_end_call :func : ID  f_verify_func '(' args ')'\n            | ID  f_varobj ':' ID f_verify_func_composite '(' args ')' f_verify_func :f_varobj :f_verify_func_composite :args : args_list f_end_args\n            | f_end_argsargs_list : expresion f_arg\n                 | args_list ',' expresion f_argf_arg :f_end_args :asignacion : var '=' f_oper expresion ';' var : ID f_varobj ':' ID f_verify_type_composite indexacion f_end_check\n           | ID f_verify_type indexacion f_end_checkindexacion : '[' f_start_array expresion f_index ']' f_end_array\n                 | '[' f_start_array expresion f_index ']' '[' f_next_index expresion f_index ']' f_end_array\n                 | f_no_index emptyf_end_check :f_verify_type :f_verify_type_composite :f_no_index :f_start_array :f_index :f_next_index :f_end_array :expresion : exp\n                 | expresion COMP f_oper exp f_expres f_expres :exp : term\n           | exp OPTERM f_oper term f_expf_exp :term : fact\n            | term OPFACT f_oper fact f_termf_term :f_oper :fact : '(' f_lparen expresion ')' f_rparen\n            | var\n            | NUM f_fact\n            | OPTERM NUM\n            | CALL func f_return_val f_end_call f_end_check\n            | CALL to_num\n            | STR f_string \n            | fact '&' f_oper var f_concat\n            | fact '&' f_oper STR f_string f_concat f_concat :f_lparen :f_rparen :f_fact :f_return_val :condicion : IF '(' expresion ')' f_if THEN '{' estatutos '}' condicionp f_endifcondicionp : ELSE f_else '{' estatutos '}'\n                  | empty f_if :f_endif :f_else :while : WHILE f_while '(' expresion f_exprwhile ')' DO '{' estatutos '}' f_endwhile f_while :f_exprwhile :f_endwhile :for : FOR expresion f_for_start TO expresion f_for_to '{' estatutos '}' f_for_end f_for_start :f_for_to :f_for_end :to_num : TO_NUMBER '(' STR f_string ')' \n              | TO_NUMBER '(' var ')' to_str : TO_STRING '(' expresion ')' input : INPUT '(' var ')' write : PRINT '(' write_list ')' write_list : write_list '&' write_listp\n                  | write_listpwrite_listp : STR f_string\n                   | var \n                   | CALL to_strf_string :return : RET '(' expresion ')' empty :"
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,172,],[0,-1,]),'ID':([2,3,12,14,19,22,23,31,35,37,40,51,53,57,62,66,67,80,81,82,83,84,85,88,92,98,115,122,125,127,134,136,139,143,144,145,146,147,148,149,151,152,153,155,156,167,170,174,175,188,189,190,191,192,196,209,216,227,228,233,248,249,253,255,257,259,260,264,265,266,269,271,272,273,276,277,278,280,282,283,286,288,289,],[-2,4,16,21,26,-40,-41,38,44,46,-13,-136,69,71,74,78,-48,-47,-49,-50,-51,-52,109,78,130,44,-95,-106,109,78,168,-82,-53,78,78,78,78,78,78,78,-95,-95,-95,-95,78,-12,78,78,206,78,78,78,78,78,-136,78,-72,-136,-136,78,78,-136,78,-136,-136,78,-84,-136,78,78,78,78,-123,-136,-119,-120,-114,-112,-116,-110,-136,78,-111,]),';':([4,5,43,44,46,47,58,60,71,74,78,93,95,100,101,102,103,104,105,106,107,108,118,119,121,123,124,126,133,135,137,138,140,154,157,158,159,160,168,169,171,173,186,194,200,207,208,213,214,215,219,220,221,222,223,224,225,229,231,237,240,241,242,243,244,245,246,250,251,256,261,270,285,287,],[-3,6,56,-30,-33,61,-28,-31,-30,-33,-79,-29,-32,-81,-5,139,-60,-55,-56,-57,-58,-59,-86,-89,-92,-97,-108,-134,167,-78,-136,172,-78,-99,-98,-109,-101,-102,-80,-74,-77,-54,216,-60,-81,-127,-128,-125,-126,-135,-88,-91,-94,-105,-134,-107,-78,-78,-61,-124,-87,-90,-93,-103,-105,-96,-100,-73,-85,-104,-75,-62,-85,-76,]),'TYPE':([6,7,8,10,76,97,166,199,],[-136,12,-7,-6,-15,-9,-15,-8,]),'DEF':([6,7,8,9,10,11,32,39,40,56,61,63,75,76,97,166,167,196,199,227,228,249,],[-136,-136,-7,14,-6,-26,-136,50,-13,-24,-25,-136,50,-15,-9,-15,-12,-136,-8,50,-136,50,]),'MAIN':([6,7,8,9,10,11,13,15,18,56,61,76,97,166,199,258,267,268,274,],[-136,-136,-7,-136,-6,-26,17,-17,-16,-24,-25,-15,-9,-15,-8,-23,-18,-23,-19,]),'FUNC':([6,7,8,9,10,11,13,15,18,32,39,40,49,56,61,63,64,75,76,96,97,132,166,167,199,258,267,268,274,],[-136,-136,-7,-136,-6,-26,19,-17,-16,-136,-14,-13,-136,-24,-25,-136,19,-14,-15,-136,-9,19,-15,-12,-8,-23,-18,-23,-19,]),'NUMBER':([14,42,50,70,90,],[22,22,22,22,22,]),'STRING':([14,42,50,70,90,],[23,23,23,23,23,]),'}':([15,18,32,39,40,49,51,63,64,66,67,75,80,81,82,83,84,96,132,139,167,196,216,227,228,248,249,255,257,258,259,264,265,266,267,268,271,272,273,274,276,277,278,280,282,283,286,288,289,],[-17,-16,-136,-14,-13,-136,-136,-136,76,79,-48,-14,-47,-49,-50,-51,-52,-136,166,-53,-12,-136,-72,-136,-136,258,-136,-136,-136,-23,268,-136,272,273,-18,-23,276,-123,-136,-19,-119,-120,-114,-112,-116,-110,-136,289,-111,]),':':([16,20,21,22,23,24,27,29,30,59,65,68,73,77,78,99,109,142,165,198,],[-10,-136,-27,-40,-41,31,35,-36,37,-39,-136,90,-34,98,-64,134,-64,175,-39,-35,]),'{':([16,22,23,24,38,41,48,78,100,118,119,121,123,124,126,128,129,135,137,154,157,158,159,160,162,163,168,169,171,194,197,200,213,218,219,220,221,222,223,224,225,229,231,237,239,240,241,242,243,244,245,246,247,250,251,254,256,261,270,279,284,285,287,],[-10,-40,-41,32,-11,51,63,-79,-81,-86,-89,-92,-97,-108,-134,-22,-21,-78,-136,-99,-98,-109,-101,-102,196,-22,-80,-74,-77,-60,228,-81,-125,-122,-88,-91,-94,-105,-134,-107,-78,-78,-61,-124,255,-87,-90,-93,-103,-105,-96,-100,257,-73,-85,264,-104,-75,-62,-115,286,-85,-76,]),'(':([17,25,26,34,87,88,89,109,110,111,112,113,114,115,116,122,127,136,141,146,147,148,149,151,152,153,156,170,174,188,189,190,191,206,233,235,253,260,269,],[-4,33,-20,42,-117,122,127,-63,143,144,145,146,147,-95,149,-106,122,-82,174,122,122,122,122,-95,-95,-95,122,122,122,122,122,122,122,-65,122,253,122,-84,122,]),'[':([20,22,23,59,65,78,100,168,200,251,],[28,-40,-41,72,28,-79,136,-80,136,260,]),'NUM':([28,72,88,115,120,122,127,136,146,147,148,149,151,152,153,156,170,174,188,189,190,191,233,253,260,269,],[36,94,124,-95,154,-106,124,-82,124,124,124,124,-95,-95,-95,124,124,124,124,124,124,124,124,124,-84,124,]),')':([33,42,52,54,55,69,78,91,100,118,119,121,123,124,126,130,135,137,154,157,158,159,160,161,164,168,169,171,174,176,177,178,179,180,182,183,184,185,187,193,194,200,202,203,204,205,210,211,212,213,214,217,219,220,221,222,223,224,225,229,231,232,234,236,237,240,241,242,243,244,245,246,250,251,252,253,256,261,262,263,270,285,287,],[41,-136,68,-42,-43,-46,-79,-44,-81,-86,-89,-92,-97,-108,-134,-46,-78,-136,-99,-98,-109,-101,-102,195,-45,-80,-74,-77,-71,207,208,-130,-134,-132,-134,213,214,215,-118,224,-60,-81,231,-71,-67,-70,-131,-133,237,-125,-126,238,-88,-91,-94,-105,-134,-107,-78,-78,-61,-66,-68,-129,-124,-87,-90,-93,-103,-105,-96,-100,-73,-85,-70,-71,-104,-75,-69,270,-62,-85,-76,]),']':([36,45,78,94,100,118,119,121,123,124,126,131,135,137,154,157,158,159,160,168,169,171,194,200,201,213,219,220,221,222,223,224,225,229,230,231,237,240,241,242,243,244,245,246,250,251,256,261,270,275,281,285,287,],[-37,59,-79,-38,-81,-86,-89,-92,-97,-108,-134,165,-78,-136,-99,-98,-109,-101,-102,-80,-74,-77,-60,-81,-83,-125,-88,-91,-94,-105,-134,-107,-78,-78,251,-61,-124,-87,-90,-93,-103,-105,-96,-100,-73,-85,-104,-75,-62,-83,285,-85,-76,]),'CALL':([40,51,66,67,80,81,82,83,84,88,115,122,127,136,139,144,146,147,148,149,151,152,153,156,167,170,174,188,189,190,191,196,209,216,227,228,233,248,249,253,255,257,259,260,264,265,266,269,271,272,273,276,277,278,280,282,283,286,288,289,],[-13,-136,85,-48,-47,-49,-50,-51,-52,125,-95,-106,125,-82,-53,181,125,125,125,125,-95,-95,-95,125,-12,125,125,125,125,125,125,-136,181,-72,-136,-136,125,85,-136,125,-136,-136,85,-84,-136,85,85,125,85,-123,-136,-119,-120,-114,-112,-116,-110,-136,85,-111,]),'WHILE':([40,51,66,67,80,81,82,83,84,139,167,196,216,227,228,248,249,255,257,259,264,265,266,271,272,273,276,277,278,280,282,283,286,288,289,],[-13,-136,87,-48,-47,-49,-50,-51,-52,-53,-12,-136,-72,-136,-136,87,-136,-136,-136,87,-136,87,87,87,-123,-136,-119,-120,-114,-112,-116,-110,-136,87,-111,]),'FOR':([40,51,66,67,80,81,82,83,84,139,167,196,216,227,228,248,249,255,257,259,264,265,266,271,272,273,276,277,278,280,282,283,286,288,289,],[-13,-136,88,-48,-47,-49,-50,-51,-52,-53,-12,-136,-72,-136,-136,88,-136,-136,-136,88,-136,88,88,88,-123,-136,-119,-120,-114,-112,-116,-110,-136,88,-111,]),'IF':([40,51,66,67,80,81,82,83,84,139,167,196,216,227,228,248,249,255,257,259,264,265,266,271,272,273,276,277,278,280,282,283,286,288,289,],[-13,-136,89,-48,-47,-49,-50,-51,-52,-53,-12,-136,-72,-136,-136,89,-136,-136,-136,89,-136,89,89,89,-123,-136,-119,-120,-114,-112,-116,-110,-136,89,-111,]),',':([43,44,46,47,54,58,60,69,71,74,78,91,93,95,100,118,119,121,123,124,126,130,133,135,137,154,157,158,159,160,164,168,169,171,194,200,203,205,213,219,220,221,222,223,224,225,229,231,234,237,240,241,242,243,244,245,246,250,251,252,256,261,262,270,285,287,],[57,-30,-33,62,70,-28,-31,-46,-30,-33,-79,-44,-29,-32,-81,-86,-89,-92,-97,-108,-134,-46,57,-78,-136,-99,-98,-109,-101,-102,-45,-80,-74,-77,-60,-81,233,-70,-125,-88,-91,-94,-105,-134,-107,-78,-78,-61,-68,-124,-87,-90,-93,-103,-105,-96,-100,-73,-85,-70,-104,-75,-69,-62,-85,-76,]),'=':([78,86,100,135,137,168,169,171,200,229,250,251,261,285,287,],[-79,115,-81,-78,-136,-80,-74,-77,-81,-78,-73,-85,-75,-85,-76,]),'&':([78,100,121,123,124,126,135,137,154,157,158,159,160,168,169,171,177,178,179,180,194,200,210,211,213,214,221,222,223,224,225,229,231,236,237,243,244,245,246,250,251,256,261,270,285,287,],[-79,-81,155,-97,-108,-134,-78,-136,-99,-98,-109,-101,-102,-80,-74,-77,209,-130,-134,-132,-60,-81,-131,-133,-125,-126,155,-105,-134,-107,-78,-78,-61,-129,-124,-103,-105,-96,-100,-73,-85,-104,-75,-62,-85,-76,]),'OPFACT':([78,100,119,121,123,124,126,135,137,154,157,158,159,160,168,169,171,194,200,213,220,221,222,223,224,225,229,231,237,242,243,244,245,246,250,251,256,261,270,285,287,],[-79,-81,153,-92,-97,-108,-134,-78,-136,-99,-98,-109,-101,-102,-80,-74,-77,-60,-81,-125,153,-94,-105,-134,-107,-78,-78,-61,-124,-93,-103,-105,-96,-100,-73,-85,-104,-75,-62,-85,-76,]),'OPTERM':([78,88,100,115,118,119,121,122,123,124,126,127,135,136,137,146,147,148,149,151,152,153,154,156,157,158,159,160,168,169,170,171,174,188,189,190,191,194,200,213,219,220,221,222,223,224,225,229,231,233,237,241,242,243,244,245,246,250,251,253,256,260,261,269,270,285,287,],[-79,120,-81,-95,152,-89,-92,-106,-97,-108,-134,120,-78,-82,-136,120,120,120,120,-95,-95,-95,-99,120,-98,-109,-101,-102,-80,-74,120,-77,120,120,120,120,120,-60,-81,-125,152,-91,-94,-105,-134,-107,-78,-78,-61,120,-124,-90,-93,-103,-105,-96,-100,-73,-85,120,-104,-84,-75,120,-62,-85,-76,]),'COMP':([78,100,117,118,119,121,123,124,126,135,137,154,157,158,159,160,161,168,169,171,184,185,186,187,193,194,200,201,205,213,218,219,220,221,222,223,224,225,229,231,237,240,241,242,243,244,245,246,250,251,252,256,261,270,275,285,287,],[-79,-81,151,-86,-89,-92,-97,-108,-134,-78,-136,-99,-98,-109,-101,-102,151,-80,-74,-77,151,151,151,151,151,-60,-81,151,151,-125,151,-88,-91,-94,-105,-134,-107,-78,-78,-61,-124,-87,-90,-93,-103,-105,-96,-100,-73,-85,151,-104,-75,-62,151,-85,-76,]),'TO':([78,100,117,118,119,121,123,124,126,135,137,150,154,157,158,159,160,168,169,171,194,200,213,219,220,221,222,223,224,225,229,231,237,240,241,242,243,244,245,246,250,251,256,261,270,285,287,],[-79,-81,-121,-86,-89,-92,-97,-108,-134,-78,-136,188,-99,-98,-109,-101,-102,-80,-74,-77,-60,-81,-125,-88,-91,-94,-105,-134,-107,-78,-78,-61,-124,-87,-90,-93,-103,-105,-96,-100,-73,-85,-104,-75,-62,-85,-76,]),'END':([79,],[101,]),'INPUT':([85,],[110,]),'PRINT':([85,],[111,]),'TO_NUMBER':([85,125,],[112,112,]),'TO_STRING':([85,181,],[113,113,]),'RET':([85,],[114,]),'STR':([88,115,122,127,136,144,145,146,147,148,149,151,152,153,155,156,170,174,188,189,190,191,192,209,233,253,260,269,],[126,-95,-106,126,-82,179,182,126,126,126,126,-95,-95,-95,-95,126,126,126,126,126,126,126,223,179,126,126,-84,126,]),'NOTHING':([90,],[129,]),'THEN':([195,226,],[-113,247,]),'DO':([238,],[254,]),'ELSE':([273,],[279,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'f_start':([2,],[3,]),'f_prog':([4,],[5,]),'clases':([6,],[7,]),'empty':([6,7,9,20,32,42,49,51,63,65,96,137,196,227,228,249,255,257,264,273,286,],[8,11,15,29,40,55,15,67,40,29,15,171,40,67,40,67,67,67,67,280,67,]),'vars':([7,],[9,]),'clase':([7,],[10,]),'funciones':([9,49,96,],[13,64,132,]),'funcion':([13,64,132,],[18,18,18,]),'tipo':([14,42,50,70,90,],[20,53,65,92,128,]),'f_startclass':([16,],[24,]),'f_main':([17,],[25,]),'dimension':([20,65,],[27,77,]),'f_varsobj':([21,],[30,]),'f_startfunc':([26,],[34,]),'cvars':([32,63,196,228,],[39,75,227,249,]),'lista_id':([35,98,],[43,133,]),'f_dim1':([36,],[45,]),'lista_id_obj':([37,],[47,]),'f_clasepadre':([38,],[48,]),'f_cvars':([39,75,],[49,96,]),'params':([42,],[52,]),'pparams':([42,],[54,]),'f_vars':([44,71,],[58,93,]),'f_vars_obj':([46,74,],[60,95,]),'estatutos':([51,227,249,255,257,264,286,],[66,248,259,265,266,271,288,]),'f_enddim':([59,165,],[73,198,]),'estatuto':([66,248,259,265,266,271,288,],[80,80,80,80,80,80,80,]),'asignacion':([66,248,259,265,266,271,288,],[81,81,81,81,81,81,81,]),'while':([66,248,259,265,266,271,288,],[82,82,82,82,82,82,82,]),'for':([66,248,259,265,266,271,288,],[83,83,83,83,83,83,83,]),'condicion':([66,248,259,265,266,271,288,],[84,84,84,84,84,84,84,]),'var':([66,88,127,143,144,145,146,147,148,149,156,170,174,188,189,190,191,192,209,233,248,253,259,265,266,269,271,288,],[86,123,123,176,180,183,123,123,123,123,123,123,123,123,123,123,123,222,180,123,86,123,86,86,86,123,86,86,]),'f_param':([69,130,],[91,164,]),'f_endclass':([76,166,],[97,199,]),'f_varobj':([78,109,],[99,142,]),'f_verify_type':([78,],[100,]),'call_func':([85,],[102,]),'func':([85,125,],[103,158,]),'input':([85,],[104,]),'write':([85,],[105,]),'to_num':([85,125,],[106,159,]),'to_str':([85,181,],[107,211,]),'return':([85,],[108,]),'f_while':([87,],[116,]),'expresion':([88,127,146,147,148,149,156,170,174,188,233,253,269,],[117,161,184,185,186,187,193,201,205,218,252,205,275,]),'exp':([88,127,146,147,148,149,156,170,174,188,189,233,253,269,],[118,118,118,118,118,118,118,118,118,118,219,118,118,118,]),'term':([88,127,146,147,148,149,156,170,174,188,189,190,233,253,269,],[119,119,119,119,119,119,119,119,119,119,119,220,119,119,119,]),'fact':([88,127,146,147,148,149,156,170,174,188,189,190,191,233,253,269,],[121,121,121,121,121,121,121,121,121,121,121,121,221,121,121,121,]),'f_dim2':([94,],[131,]),'indexacion':([100,200,],[135,229,]),'f_no_index':([100,200,],[137,137,]),'f_end':([101,],[138,]),'f_end_call':([103,194,],[140,225,]),'f_verify_func':([109,],[141,]),'f_oper':([115,151,152,153,155,],[148,189,190,191,192,]),'f_for_start':([117,],[150,]),'f_lparen':([122,],[156,]),'f_fact':([124,],[157,]),'f_string':([126,179,182,223,],[160,210,212,244,]),'f_tipofunc':([128,163,],[162,197,]),'f_nothing':([129,],[163,]),'f_end_check':([135,140,225,229,],[169,173,246,250,]),'f_start_array':([136,],[170,]),'write_list':([144,],[177,]),'write_listp':([144,209,],[178,236,]),'f_return_val':([158,],[194,]),'f_verify_type_composite':([168,],[200,]),'args':([174,253,],[202,263,]),'args_list':([174,253,],[203,203,]),'f_end_args':([174,203,253,],[204,232,204,]),'f_exprwhile':([187,],[217,]),'f_if':([195,],[226,]),'f_index':([201,275,],[230,281,]),'f_arg':([205,252,],[234,262,]),'f_verify_func_composite':([206,],[235,]),'f_for_to':([218,],[239,]),'f_expres':([219,],[240,]),'f_exp':([220,],[241,]),'f_term':([221,],[242,]),'f_concat':([222,244,],[243,256,]),'f_rparen':([224,],[245,]),'f_end_array':([251,285,],[261,287,]),'f_endfunc':([258,268,],[267,274,]),'f_next_index':([260,],[269,]),'f_for_end':([272,],[277,]),'condicionp':([273,],[278,]),'f_endwhile':([276,],[282,]),'f_endif':([278,],[283,]),'f_else':([279,],[284,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> PROGRAM f_start ID f_prog ; clases vars funciones MAIN f_main ( ) { estatutos } END f_end ;','start',18,'p_start','aloop.py',231),
  ('f_start -> <empty>','f_start',0,'p_f_start','aloop.py',234),
  ('f_prog -> <empty>','f_prog',0,'p_f_prog','aloop.py',242),
  ('f_main -> <empty>','f_main',0,'p_f_main','aloop.py',247),
  ('f_end -> <empty>','f_end',0,'p_f_end','aloop.py',251),
  ('clases -> clases clase','clases',2,'p_clases','aloop.py',267),
  ('clases -> empty','clases',1,'p_clases','aloop.py',268),
  ('clase -> TYPE ID f_startclass : ID f_clasepadre { cvars f_cvars funciones } f_endclass','clase',12,'p_clase','aloop.py',271),
  ('clase -> TYPE ID f_startclass { cvars f_cvars funciones } f_endclass','clase',9,'p_clase','aloop.py',272),
  ('f_startclass -> <empty>','f_startclass',0,'p_f_startclass','aloop.py',275),
  ('f_clasepadre -> <empty>','f_clasepadre',0,'p_f_clasepadre','aloop.py',283),
  ('cvars -> cvars DEF tipo dimension : lista_id ;','cvars',7,'p_cvars','aloop.py',293),
  ('cvars -> empty','cvars',1,'p_cvars','aloop.py',294),
  ('f_cvars -> <empty>','f_cvars',0,'p_f_cvars','aloop.py',297),
  ('f_endclass -> <empty>','f_endclass',0,'p_f_endclass','aloop.py',303),
  ('funciones -> funciones funcion','funciones',2,'p_funciones','aloop.py',318),
  ('funciones -> empty','funciones',1,'p_funciones','aloop.py',319),
  ('funcion -> FUNC ID f_startfunc ( params ) : tipo f_tipofunc { cvars estatutos } f_endfunc','funcion',14,'p_funcion','aloop.py',322),
  ('funcion -> FUNC ID f_startfunc ( params ) : NOTHING f_nothing f_tipofunc { cvars estatutos } f_endfunc','funcion',15,'p_funcion','aloop.py',323),
  ('f_startfunc -> <empty>','f_startfunc',0,'p_f_startfunc','aloop.py',326),
  ('f_nothing -> <empty>','f_nothing',0,'p_f_nothing','aloop.py',331),
  ('f_tipofunc -> <empty>','f_tipofunc',0,'p_f_tipofunc','aloop.py',336),
  ('f_endfunc -> <empty>','f_endfunc',0,'p_f_endfunc','aloop.py',355),
  ('vars -> vars DEF tipo dimension : lista_id ;','vars',7,'p_vars','aloop.py',381),
  ('vars -> vars DEF ID f_varsobj : lista_id_obj ;','vars',7,'p_vars','aloop.py',382),
  ('vars -> empty','vars',1,'p_vars','aloop.py',383),
  ('f_varsobj -> <empty>','f_varsobj',0,'p_f_varsobj','aloop.py',386),
  ('lista_id -> ID f_vars','lista_id',2,'p_lista_id','aloop.py',398),
  ('lista_id -> lista_id , ID f_vars','lista_id',4,'p_lista_id','aloop.py',399),
  ('f_vars -> <empty>','f_vars',0,'p_f_vars','aloop.py',402),
  ('lista_id_obj -> ID f_vars_obj','lista_id_obj',2,'p_lista_id_obj','aloop.py',452),
  ('lista_id_obj -> lista_id_obj , ID f_vars_obj','lista_id_obj',4,'p_lista_id_obj','aloop.py',453),
  ('f_vars_obj -> <empty>','f_vars_obj',0,'p_f_vars_obj','aloop.py',456),
  ('dimension -> [ NUM f_dim1 ] f_enddim','dimension',5,'p_dimension','aloop.py',474),
  ('dimension -> [ NUM f_dim1 ] [ NUM f_dim2 ] f_enddim','dimension',9,'p_dimension','aloop.py',475),
  ('dimension -> empty','dimension',1,'p_dimension','aloop.py',476),
  ('f_dim1 -> <empty>','f_dim1',0,'p_f_dim1','aloop.py',479),
  ('f_dim2 -> <empty>','f_dim2',0,'p_f_dim2','aloop.py',487),
  ('f_enddim -> <empty>','f_enddim',0,'p_f_enddim','aloop.py',494),
  ('tipo -> NUMBER','tipo',1,'p_tipo','aloop.py',501),
  ('tipo -> STRING','tipo',1,'p_tipo','aloop.py',502),
  ('params -> pparams','params',1,'p_params','aloop.py',510),
  ('params -> empty','params',1,'p_params','aloop.py',511),
  ('pparams -> tipo ID f_param','pparams',3,'p_pparams','aloop.py',514),
  ('pparams -> pparams , tipo ID f_param','pparams',5,'p_pparams','aloop.py',515),
  ('f_param -> <empty>','f_param',0,'p_f_param','aloop.py',518),
  ('estatutos -> estatutos estatuto','estatutos',2,'p_estatutos','aloop.py',534),
  ('estatutos -> empty','estatutos',1,'p_estatutos','aloop.py',535),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','aloop.py',538),
  ('estatuto -> while','estatuto',1,'p_estatuto','aloop.py',539),
  ('estatuto -> for','estatuto',1,'p_estatuto','aloop.py',540),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','aloop.py',541),
  ('estatuto -> CALL call_func ;','estatuto',3,'p_estatuto','aloop.py',542),
  ('call_func -> func f_end_call f_end_check','call_func',3,'p_call_func','aloop.py',545),
  ('call_func -> input','call_func',1,'p_call_func','aloop.py',546),
  ('call_func -> write','call_func',1,'p_call_func','aloop.py',547),
  ('call_func -> to_num','call_func',1,'p_call_func','aloop.py',548),
  ('call_func -> to_str','call_func',1,'p_call_func','aloop.py',549),
  ('call_func -> return','call_func',1,'p_call_func','aloop.py',550),
  ('f_end_call -> <empty>','f_end_call',0,'p_f_end_call','aloop.py',553),
  ('func -> ID f_verify_func ( args )','func',5,'p_func','aloop.py',571),
  ('func -> ID f_varobj : ID f_verify_func_composite ( args )','func',8,'p_func','aloop.py',572),
  ('f_verify_func -> <empty>','f_verify_func',0,'p_f_verify_func','aloop.py',575),
  ('f_varobj -> <empty>','f_varobj',0,'p_f_varobj','aloop.py',593),
  ('f_verify_func_composite -> <empty>','f_verify_func_composite',0,'p_f_verify_func_composite','aloop.py',597),
  ('args -> args_list f_end_args','args',2,'p_args','aloop.py',621),
  ('args -> f_end_args','args',1,'p_args','aloop.py',622),
  ('args_list -> expresion f_arg','args_list',2,'p_args_list','aloop.py',625),
  ('args_list -> args_list , expresion f_arg','args_list',4,'p_args_list','aloop.py',626),
  ('f_arg -> <empty>','f_arg',0,'p_f_arg','aloop.py',629),
  ('f_end_args -> <empty>','f_end_args',0,'p_f_end_args','aloop.py',648),
  ('asignacion -> var = f_oper expresion ;','asignacion',5,'p_asignacion','aloop.py',658),
  ('var -> ID f_varobj : ID f_verify_type_composite indexacion f_end_check','var',7,'p_var','aloop.py',665),
  ('var -> ID f_verify_type indexacion f_end_check','var',4,'p_var','aloop.py',666),
  ('indexacion -> [ f_start_array expresion f_index ] f_end_array','indexacion',6,'p_indexacion','aloop.py',670),
  ('indexacion -> [ f_start_array expresion f_index ] [ f_next_index expresion f_index ] f_end_array','indexacion',11,'p_indexacion','aloop.py',671),
  ('indexacion -> f_no_index empty','indexacion',2,'p_indexacion','aloop.py',672),
  ('f_end_check -> <empty>','f_end_check',0,'p_f_end_check','aloop.py',675),
  ('f_verify_type -> <empty>','f_verify_type',0,'p_f_verify_type','aloop.py',679),
  ('f_verify_type_composite -> <empty>','f_verify_type_composite',0,'p_f_verify_type_composite','aloop.py',703),
  ('f_no_index -> <empty>','f_no_index',0,'p_f_no_index','aloop.py',727),
  ('f_start_array -> <empty>','f_start_array',0,'p_f_start_array','aloop.py',734),
  ('f_index -> <empty>','f_index',0,'p_f_index','aloop.py',747),
  ('f_next_index -> <empty>','f_next_index',0,'p_f_next_index','aloop.py',777),
  ('f_end_array -> <empty>','f_end_array',0,'p_f_end_array','aloop.py',784),
  ('expresion -> exp','expresion',1,'p_expresion','aloop.py',819),
  ('expresion -> expresion COMP f_oper exp f_expres','expresion',5,'p_expresion','aloop.py',820),
  ('f_expres -> <empty>','f_expres',0,'p_f_expres','aloop.py',823),
  ('exp -> term','exp',1,'p_exp','aloop.py',847),
  ('exp -> exp OPTERM f_oper term f_exp','exp',5,'p_exp','aloop.py',848),
  ('f_exp -> <empty>','f_exp',0,'p_f_exp','aloop.py',852),
  ('term -> fact','term',1,'p_term','aloop.py',876),
  ('term -> term OPFACT f_oper fact f_term','term',5,'p_term','aloop.py',877),
  ('f_term -> <empty>','f_term',0,'p_f_term','aloop.py',881),
  ('f_oper -> <empty>','f_oper',0,'p_f_oper','aloop.py',906),
  ('fact -> ( f_lparen expresion ) f_rparen','fact',5,'p_fact','aloop.py',910),
  ('fact -> var','fact',1,'p_fact','aloop.py',911),
  ('fact -> NUM f_fact','fact',2,'p_fact','aloop.py',912),
  ('fact -> OPTERM NUM','fact',2,'p_fact','aloop.py',913),
  ('fact -> CALL func f_return_val f_end_call f_end_check','fact',5,'p_fact','aloop.py',914),
  ('fact -> CALL to_num','fact',2,'p_fact','aloop.py',915),
  ('fact -> STR f_string','fact',2,'p_fact','aloop.py',916),
  ('fact -> fact & f_oper var f_concat','fact',5,'p_fact','aloop.py',917),
  ('fact -> fact & f_oper STR f_string f_concat','fact',6,'p_fact','aloop.py',918),
  ('f_concat -> <empty>','f_concat',0,'p_f_concat','aloop.py',931),
  ('f_lparen -> <empty>','f_lparen',0,'p_f_lparen','aloop.py',955),
  ('f_rparen -> <empty>','f_rparen',0,'p_f_rparen','aloop.py',959),
  ('f_fact -> <empty>','f_fact',0,'p_f_fact','aloop.py',963),
  ('f_return_val -> <empty>','f_return_val',0,'p_f_return_val','aloop.py',969),
  ('condicion -> IF ( expresion ) f_if THEN { estatutos } condicionp f_endif','condicion',11,'p_condicion','aloop.py',995),
  ('condicionp -> ELSE f_else { estatutos }','condicionp',5,'p_condicionp','aloop.py',998),
  ('condicionp -> empty','condicionp',1,'p_condicionp','aloop.py',999),
  ('f_if -> <empty>','f_if',0,'p_f_if','aloop.py',1002),
  ('f_endif -> <empty>','f_endif',0,'p_f_endif','aloop.py',1012),
  ('f_else -> <empty>','f_else',0,'p_f_else','aloop.py',1017),
  ('while -> WHILE f_while ( expresion f_exprwhile ) DO { estatutos } f_endwhile','while',11,'p_while','aloop.py',1024),
  ('f_while -> <empty>','f_while',0,'p_f_while','aloop.py',1027),
  ('f_exprwhile -> <empty>','f_exprwhile',0,'p_f_exprwhile','aloop.py',1031),
  ('f_endwhile -> <empty>','f_endwhile',0,'p_f_endwhile','aloop.py',1041),
  ('for -> FOR expresion f_for_start TO expresion f_for_to { estatutos } f_for_end','for',10,'p_for','aloop.py',1048),
  ('f_for_start -> <empty>','f_for_start',0,'p_f_for_start','aloop.py',1051),
  ('f_for_to -> <empty>','f_for_to',0,'p_f_for_to','aloop.py',1061),
  ('f_for_end -> <empty>','f_for_end',0,'p_f_for_end','aloop.py',1077),
  ('to_num -> TO_NUMBER ( STR f_string )','to_num',5,'p_to_num','aloop.py',1089),
  ('to_num -> TO_NUMBER ( var )','to_num',4,'p_to_num','aloop.py',1090),
  ('to_str -> TO_STRING ( expresion )','to_str',4,'p_to_str','aloop.py',1103),
  ('input -> INPUT ( var )','input',4,'p_input','aloop.py',1116),
  ('write -> PRINT ( write_list )','write',4,'p_write','aloop.py',1123),
  ('write_list -> write_list & write_listp','write_list',3,'p_write_list','aloop.py',1126),
  ('write_list -> write_listp','write_list',1,'p_write_list','aloop.py',1127),
  ('write_listp -> STR f_string','write_listp',2,'p_write_listp','aloop.py',1130),
  ('write_listp -> var','write_listp',1,'p_write_listp','aloop.py',1131),
  ('write_listp -> CALL to_str','write_listp',2,'p_write_listp','aloop.py',1132),
  ('f_string -> <empty>','f_string',0,'p_f_string','aloop.py',1139),
  ('return -> RET ( expresion )','return',4,'p_return','aloop.py',1146),
  ('empty -> <empty>','empty',0,'p_empty','aloop.py',1178),
]
