
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "startCALL COMP DEF DO ELSE END FOR FUNC ID IF INPUT MAIN NOTHING NUM NUMBER OPFACT OPTERM PRINT PROGRAM RET STR STRING THEN TO TO_NUMBER TO_STRING TYPE WHILEstart : PROGRAM f_start ID f_prog ';' clases vars funciones MAIN f_main '(' ')' '{' estatutos '}' END f_end ';' f_start :f_prog :f_main :f_end : clases : clases clase\n              | emptyclase : TYPE ID f_startclass ':' ID f_clasepadre '{' cvars f_cvars funciones '}' f_endclass \n             | TYPE ID f_startclass '{' cvars f_cvars funciones '}' f_endclass f_startclass :f_clasepadre :cvars : cvars DEF tipo dimension ':' lista_id ';'\n             | emptyf_cvars :f_endclass :funciones : funciones funcion\n                  | emptyfuncion : FUNC ID f_startfunc '(' params ')' ':' tipo f_tipofunc '{' cvars estatutos '}' f_endfunc\n               | FUNC ID f_startfunc '(' params ')' ':' NOTHING f_nothing f_tipofunc '{' cvars estatutos '}' f_endfunc f_startfunc :f_nothing :f_tipofunc :f_endfunc :vars : vars DEF tipo dimension ':' lista_id ';'\n            | vars DEF ID f_varsobj ':' lista_id_obj ';'\n            | emptyf_varsobj :lista_id : ID f_vars\n                | lista_id ',' ID f_varsf_vars :lista_id_obj : ID f_vars_obj\n                    | lista_id_obj ',' ID f_vars_objf_vars_obj :dimension : '[' NUM f_dim1 ']' f_enddim\n                 | '[' NUM f_dim1 ']' '[' NUM f_dim2 ']' f_enddim\n                 | emptyf_dim1 :f_dim2 :f_enddim :tipo : NUMBER \n            | STRINGparams : pparams \n              | emptypparams : tipo ID f_param\n               | pparams ',' tipo ID f_paramf_param :estatutos : estatutos estatuto \n                 | emptyestatuto : asignacion \n                | while \n                | for \n                | condicion \n                | CALL call_func ';' call_func : func f_end_call f_end_check\n                 | input \n                 | write\n                 | return f_end_call :func : ID  f_verify_func '(' args ')'\n            | ID  f_varobj ':' ID f_verify_func_composite '(' args ')' f_verify_func :f_varobj :f_verify_func_composite :args : args_list f_end_args\n            | f_end_argsargs_list : expresion f_arg\n                 | args_list ',' expresion f_argf_arg :f_end_args :asignacion : var '=' f_oper expresion ';' var : ID f_varobj ':' ID f_verify_type_composite indexacion f_end_check\n           | ID f_verify_type indexacion f_end_checkf_verify_type :f_verify_type_composite :f_end_check :indexacion : '[' f_start_array expresion f_index ']' f_end_array\n                 | '[' f_start_array expresion f_index ']' '[' f_next_index expresion f_index ']' f_end_array\n                 | f_no_index emptyf_no_index :f_start_array :f_index :f_next_index :f_end_array :expresion : exp\n                 | expresion COMP f_oper exp f_expres f_expres :exp : term\n           | exp OPTERM f_oper term f_expf_exp :term : fact\n            | term OPFACT f_oper fact f_termf_term :f_oper :fact : '(' f_lparen expresion ')' f_rparen\n            | var\n            | NUM f_fact\n            | OPTERM NUM\n            | CALL func f_return_val f_end_call f_end_check\n            | CALL to_num\n            | CALL to_str\n            | STR f_string \n            | fact '&' f_oper var f_concat\n            | fact '&' f_oper STR f_string f_concat f_concat :f_lparen :f_rparen :f_fact :f_return_val :condicion : IF '(' expresion ')' f_if THEN '{' estatutos '}' condicionp f_endifcondicionp : ELSE f_else '{' estatutos '}'\n                  | empty f_if :f_endif :f_else :while : WHILE f_while '(' expresion f_exprwhile ')' DO '{' estatutos '}' f_endwhile f_while :f_exprwhile :f_endwhile :for : FOR expresion f_for_start TO expresion f_for_to '{' estatutos '}' f_for_end f_for_start :f_for_to :f_for_end :to_num : TO_NUMBER '(' STR f_string ')' \n              | TO_NUMBER '(' var ')' to_str : TO_STRING '(' expresion ')' input : INPUT '(' var ')' write : PRINT '(' write_list ')' write_list : write_list '&' write_listp\n                  | write_listpwrite_listp : STR f_string\n                   | var \n                   | CALL to_strf_string :return : RET '(' expresion ')' empty :"
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,169,],[0,-1,]),'ID':([2,3,12,14,19,22,23,31,35,37,40,51,53,57,62,66,67,80,81,82,83,84,85,88,92,98,111,118,121,123,130,132,135,139,140,141,142,143,145,146,147,149,150,164,167,171,172,182,183,184,185,186,189,190,192,205,209,223,224,229,246,247,251,253,256,258,259,263,264,265,268,270,271,272,275,276,277,279,281,282,285,287,288,],[-2,4,16,21,26,-40,-41,38,44,46,-13,-135,69,71,74,78,-48,-47,-49,-50,-51,-52,107,78,126,44,-93,-105,107,78,165,-80,-53,78,78,78,78,78,-93,-93,-93,-93,78,-12,78,78,202,78,78,78,78,78,78,78,-135,78,-70,-135,-135,78,78,-135,78,-135,-135,78,-82,-135,78,78,78,78,-122,-135,-118,-119,-113,-111,-115,-109,-135,78,-110,]),';':([4,5,43,44,46,47,58,60,71,74,78,93,95,100,101,102,103,104,105,106,114,115,117,119,120,122,129,131,133,134,136,148,151,152,153,154,157,165,166,168,170,180,188,196,203,204,208,212,213,214,215,216,217,218,225,227,235,236,237,238,239,240,241,243,244,248,249,254,255,260,269,284,286,],[-3,6,56,-30,-33,61,-28,-31,-30,-33,-73,-29,-32,-79,-5,135,-58,-55,-56,-57,-84,-87,-90,-95,-107,-133,164,-75,-135,169,-75,-97,-96,-108,-99,-100,-101,-74,-72,-78,-54,209,-58,-79,-126,-127,-134,-86,-89,-92,-104,-133,-106,-75,-75,-59,-85,-88,-91,-102,-104,-94,-98,-124,-125,-71,-83,-103,-123,-76,-60,-83,-77,]),'TYPE':([6,7,8,10,76,97,163,195,],[-135,12,-7,-6,-15,-9,-15,-8,]),'DEF':([6,7,8,9,10,11,32,39,40,56,61,63,75,76,97,163,164,192,195,223,224,247,],[-135,-135,-7,14,-6,-26,-135,50,-13,-24,-25,-135,50,-15,-9,-15,-12,-135,-8,50,-135,50,]),'MAIN':([6,7,8,9,10,11,13,15,18,56,61,76,97,163,195,257,266,267,273,],[-135,-135,-7,-135,-6,-26,17,-17,-16,-24,-25,-15,-9,-15,-8,-23,-18,-23,-19,]),'FUNC':([6,7,8,9,10,11,13,15,18,32,39,40,49,56,61,63,64,75,76,96,97,128,163,164,195,257,266,267,273,],[-135,-135,-7,-135,-6,-26,19,-17,-16,-135,-14,-13,-135,-24,-25,-135,19,-14,-15,-135,-9,19,-15,-12,-8,-23,-18,-23,-19,]),'NUMBER':([14,42,50,70,90,],[22,22,22,22,22,]),'STRING':([14,42,50,70,90,],[23,23,23,23,23,]),'}':([15,18,32,39,40,49,51,63,64,66,67,75,80,81,82,83,84,96,128,135,164,192,209,223,224,246,247,253,256,257,258,263,264,265,266,267,270,271,272,273,275,276,277,279,281,282,285,287,288,],[-17,-16,-135,-14,-13,-135,-135,-135,76,79,-48,-14,-47,-49,-50,-51,-52,-135,163,-53,-12,-135,-70,-135,-135,257,-135,-135,-135,-23,267,-135,271,272,-18,-23,275,-122,-135,-19,-118,-119,-113,-111,-115,-109,-135,288,-110,]),':':([16,20,21,22,23,24,27,29,30,59,65,68,73,77,78,99,107,138,162,194,],[-10,-135,-27,-40,-41,31,35,-36,37,-39,-135,90,-34,98,-62,130,-62,172,-39,-35,]),'{':([16,22,23,24,38,41,48,78,100,114,115,117,119,120,122,124,125,131,133,148,151,152,153,154,157,159,160,165,166,168,188,193,196,211,212,213,214,215,216,217,218,225,227,234,235,236,237,238,239,240,241,243,244,245,248,249,252,254,255,260,269,278,283,284,286,],[-10,-40,-41,32,-11,51,63,-73,-79,-84,-87,-90,-95,-107,-133,-22,-21,-75,-135,-97,-96,-108,-99,-100,-101,192,-22,-74,-72,-78,-58,224,-79,-121,-86,-89,-92,-104,-133,-106,-75,-75,-59,253,-85,-88,-91,-102,-104,-94,-98,-124,-125,256,-71,-83,263,-103,-123,-76,-60,-114,285,-83,-77,]),'(':([17,25,26,34,87,88,89,107,108,109,110,111,112,118,123,132,137,141,142,143,145,146,147,150,155,156,167,171,182,183,184,185,190,202,229,231,251,259,268,],[-4,33,-20,42,-116,118,123,-61,139,140,141,-93,143,-105,118,-80,171,118,118,118,-93,-93,-93,118,189,190,118,118,118,118,118,118,118,-63,118,251,118,-82,118,]),'[':([20,22,23,59,65,78,100,165,196,249,],[28,-40,-41,72,28,-73,132,-74,132,259,]),'NUM':([28,72,88,111,116,118,123,132,141,142,143,145,146,147,150,167,171,182,183,184,185,190,229,251,259,268,],[36,94,120,-93,148,-105,120,-80,120,120,120,-93,-93,-93,120,120,120,120,120,120,120,120,120,120,-82,120,]),')':([33,42,52,54,55,69,78,91,100,114,115,117,119,120,122,126,131,133,148,151,152,153,154,157,158,161,165,166,168,171,173,174,175,176,177,179,181,187,188,196,198,199,200,201,206,207,210,212,213,214,215,216,217,218,219,220,221,225,227,228,230,232,235,236,237,238,239,240,241,242,243,244,248,249,250,251,254,255,260,261,262,269,284,286,],[41,-135,68,-42,-43,-46,-73,-44,-79,-84,-87,-90,-95,-107,-133,-46,-75,-135,-97,-96,-108,-99,-100,-101,191,-45,-74,-72,-78,-69,203,204,-129,-133,-131,208,-117,217,-58,-79,227,-69,-65,-68,-130,-132,233,-86,-89,-92,-104,-133,-106,-75,-133,243,244,-75,-59,-64,-66,-128,-85,-88,-91,-102,-104,-94,-98,255,-124,-125,-71,-83,-68,-69,-103,-123,-76,-67,269,-60,-83,-77,]),']':([36,45,78,94,100,114,115,117,119,120,122,127,131,133,148,151,152,153,154,157,165,166,168,188,196,197,212,213,214,215,216,217,218,225,226,227,235,236,237,238,239,240,241,243,244,248,249,254,255,260,269,274,280,284,286,],[-37,59,-73,-38,-79,-84,-87,-90,-95,-107,-133,162,-75,-135,-97,-96,-108,-99,-100,-101,-74,-72,-78,-58,-79,-81,-86,-89,-92,-104,-133,-106,-75,-75,249,-59,-85,-88,-91,-102,-104,-94,-98,-124,-125,-71,-83,-103,-123,-76,-60,-81,284,-83,-77,]),'CALL':([40,51,66,67,80,81,82,83,84,88,111,118,123,132,135,140,141,142,143,145,146,147,150,164,167,171,182,183,184,185,190,192,205,209,223,224,229,246,247,251,253,256,258,259,263,264,265,268,270,271,272,275,276,277,279,281,282,285,287,288,],[-13,-135,85,-48,-47,-49,-50,-51,-52,121,-93,-105,121,-80,-53,178,121,121,121,-93,-93,-93,121,-12,121,121,121,121,121,121,121,-135,178,-70,-135,-135,121,85,-135,121,-135,-135,85,-82,-135,85,85,121,85,-122,-135,-118,-119,-113,-111,-115,-109,-135,85,-110,]),'WHILE':([40,51,66,67,80,81,82,83,84,135,164,192,209,223,224,246,247,253,256,258,263,264,265,270,271,272,275,276,277,279,281,282,285,287,288,],[-13,-135,87,-48,-47,-49,-50,-51,-52,-53,-12,-135,-70,-135,-135,87,-135,-135,-135,87,-135,87,87,87,-122,-135,-118,-119,-113,-111,-115,-109,-135,87,-110,]),'FOR':([40,51,66,67,80,81,82,83,84,135,164,192,209,223,224,246,247,253,256,258,263,264,265,270,271,272,275,276,277,279,281,282,285,287,288,],[-13,-135,88,-48,-47,-49,-50,-51,-52,-53,-12,-135,-70,-135,-135,88,-135,-135,-135,88,-135,88,88,88,-122,-135,-118,-119,-113,-111,-115,-109,-135,88,-110,]),'IF':([40,51,66,67,80,81,82,83,84,135,164,192,209,223,224,246,247,253,256,258,263,264,265,270,271,272,275,276,277,279,281,282,285,287,288,],[-13,-135,89,-48,-47,-49,-50,-51,-52,-53,-12,-135,-70,-135,-135,89,-135,-135,-135,89,-135,89,89,89,-122,-135,-118,-119,-113,-111,-115,-109,-135,89,-110,]),',':([43,44,46,47,54,58,60,69,71,74,78,91,93,95,100,114,115,117,119,120,122,126,129,131,133,148,151,152,153,154,157,161,165,166,168,188,196,199,201,212,213,214,215,216,217,218,225,227,230,235,236,237,238,239,240,241,243,244,248,249,250,254,255,260,261,269,284,286,],[57,-30,-33,62,70,-28,-31,-46,-30,-33,-73,-44,-29,-32,-79,-84,-87,-90,-95,-107,-133,-46,57,-75,-135,-97,-96,-108,-99,-100,-101,-45,-74,-72,-78,-58,-79,229,-68,-86,-89,-92,-104,-133,-106,-75,-75,-59,-66,-85,-88,-91,-102,-104,-94,-98,-124,-125,-71,-83,-68,-103,-123,-76,-67,-60,-83,-77,]),'=':([78,86,100,131,133,165,166,168,196,225,248,249,260,284,286,],[-73,111,-79,-75,-135,-74,-72,-78,-79,-75,-71,-83,-76,-83,-77,]),'&':([78,100,117,119,120,122,131,133,148,151,152,153,154,157,165,166,168,174,175,176,177,188,196,206,207,214,215,216,217,218,225,227,232,238,239,240,241,243,244,248,249,254,255,260,269,284,286,],[-73,-79,149,-95,-107,-133,-75,-135,-97,-96,-108,-99,-100,-101,-74,-72,-78,205,-129,-133,-131,-58,-79,-130,-132,149,-104,-133,-106,-75,-75,-59,-128,-102,-104,-94,-98,-124,-125,-71,-83,-103,-123,-76,-60,-83,-77,]),'OPFACT':([78,100,115,117,119,120,122,131,133,148,151,152,153,154,157,165,166,168,188,196,213,214,215,216,217,218,225,227,237,238,239,240,241,243,244,248,249,254,255,260,269,284,286,],[-73,-79,147,-90,-95,-107,-133,-75,-135,-97,-96,-108,-99,-100,-101,-74,-72,-78,-58,-79,147,-92,-104,-133,-106,-75,-75,-59,-91,-102,-104,-94,-98,-124,-125,-71,-83,-103,-123,-76,-60,-83,-77,]),'OPTERM':([78,88,100,111,114,115,117,118,119,120,122,123,131,132,133,141,142,143,145,146,147,148,150,151,152,153,154,157,165,166,167,168,171,182,183,184,185,188,190,196,212,213,214,215,216,217,218,225,227,229,236,237,238,239,240,241,243,244,248,249,251,254,255,259,260,268,269,284,286,],[-73,116,-79,-93,146,-87,-90,-105,-95,-107,-133,116,-75,-80,-135,116,116,116,-93,-93,-93,-97,116,-96,-108,-99,-100,-101,-74,-72,116,-78,116,116,116,116,116,-58,116,-79,146,-89,-92,-104,-133,-106,-75,-75,-59,116,-88,-91,-102,-104,-94,-98,-124,-125,-71,-83,116,-103,-123,-82,-76,116,-60,-83,-77,]),'COMP':([78,100,113,114,115,117,119,120,122,131,133,148,151,152,153,154,157,158,165,166,168,179,180,181,187,188,196,197,201,211,212,213,214,215,216,217,218,221,225,227,235,236,237,238,239,240,241,243,244,248,249,250,254,255,260,269,274,284,286,],[-73,-79,145,-84,-87,-90,-95,-107,-133,-75,-135,-97,-96,-108,-99,-100,-101,145,-74,-72,-78,145,145,145,145,-58,-79,145,145,145,-86,-89,-92,-104,-133,-106,-75,145,-75,-59,-85,-88,-91,-102,-104,-94,-98,-124,-125,-71,-83,145,-103,-123,-76,-60,145,-83,-77,]),'TO':([78,100,113,114,115,117,119,120,122,131,133,144,148,151,152,153,154,157,165,166,168,188,196,212,213,214,215,216,217,218,225,227,235,236,237,238,239,240,241,243,244,248,249,254,255,260,269,284,286,],[-73,-79,-120,-84,-87,-90,-95,-107,-133,-75,-135,182,-97,-96,-108,-99,-100,-101,-74,-72,-78,-58,-79,-86,-89,-92,-104,-133,-106,-75,-75,-59,-85,-88,-91,-102,-104,-94,-98,-124,-125,-71,-83,-103,-123,-76,-60,-83,-77,]),'END':([79,],[101,]),'INPUT':([85,],[108,]),'PRINT':([85,],[109,]),'RET':([85,],[110,]),'STR':([88,111,118,123,132,140,141,142,143,145,146,147,149,150,167,171,182,183,184,185,186,189,190,205,229,251,259,268,],[122,-93,-105,122,-80,176,122,122,122,-93,-93,-93,-93,122,122,122,122,122,122,122,216,219,122,176,122,122,-82,122,]),'NOTHING':([90,],[125,]),'TO_NUMBER':([121,],[155,]),'TO_STRING':([121,178,],[156,156,]),'THEN':([191,222,],[-112,245,]),'DO':([233,],[252,]),'ELSE':([272,],[278,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'f_start':([2,],[3,]),'f_prog':([4,],[5,]),'clases':([6,],[7,]),'empty':([6,7,9,20,32,42,49,51,63,65,96,133,192,223,224,247,253,256,263,272,285,],[8,11,15,29,40,55,15,67,40,29,15,168,40,67,40,67,67,67,67,279,67,]),'vars':([7,],[9,]),'clase':([7,],[10,]),'funciones':([9,49,96,],[13,64,128,]),'funcion':([13,64,128,],[18,18,18,]),'tipo':([14,42,50,70,90,],[20,53,65,92,124,]),'f_startclass':([16,],[24,]),'f_main':([17,],[25,]),'dimension':([20,65,],[27,77,]),'f_varsobj':([21,],[30,]),'f_startfunc':([26,],[34,]),'cvars':([32,63,192,224,],[39,75,223,247,]),'lista_id':([35,98,],[43,129,]),'f_dim1':([36,],[45,]),'lista_id_obj':([37,],[47,]),'f_clasepadre':([38,],[48,]),'f_cvars':([39,75,],[49,96,]),'params':([42,],[52,]),'pparams':([42,],[54,]),'f_vars':([44,71,],[58,93,]),'f_vars_obj':([46,74,],[60,95,]),'estatutos':([51,223,247,253,256,263,285,],[66,246,258,264,265,270,287,]),'f_enddim':([59,162,],[73,194,]),'estatuto':([66,246,258,264,265,270,287,],[80,80,80,80,80,80,80,]),'asignacion':([66,246,258,264,265,270,287,],[81,81,81,81,81,81,81,]),'while':([66,246,258,264,265,270,287,],[82,82,82,82,82,82,82,]),'for':([66,246,258,264,265,270,287,],[83,83,83,83,83,83,83,]),'condicion':([66,246,258,264,265,270,287,],[84,84,84,84,84,84,84,]),'var':([66,88,123,139,140,141,142,143,150,167,171,182,183,184,185,186,189,190,205,229,246,251,258,264,265,268,270,287,],[86,119,119,173,177,119,119,119,119,119,119,119,119,119,119,215,220,119,177,119,86,119,86,86,86,119,86,86,]),'f_param':([69,126,],[91,161,]),'f_endclass':([76,163,],[97,195,]),'f_varobj':([78,107,],[99,138,]),'f_verify_type':([78,],[100,]),'call_func':([85,],[102,]),'func':([85,121,],[103,152,]),'input':([85,],[104,]),'write':([85,],[105,]),'return':([85,],[106,]),'f_while':([87,],[112,]),'expresion':([88,123,141,142,143,150,167,171,182,190,229,251,268,],[113,158,179,180,181,187,197,201,211,221,250,201,274,]),'exp':([88,123,141,142,143,150,167,171,182,183,190,229,251,268,],[114,114,114,114,114,114,114,114,114,212,114,114,114,114,]),'term':([88,123,141,142,143,150,167,171,182,183,184,190,229,251,268,],[115,115,115,115,115,115,115,115,115,115,213,115,115,115,115,]),'fact':([88,123,141,142,143,150,167,171,182,183,184,185,190,229,251,268,],[117,117,117,117,117,117,117,117,117,117,117,214,117,117,117,117,]),'f_dim2':([94,],[127,]),'indexacion':([100,196,],[131,225,]),'f_no_index':([100,196,],[133,133,]),'f_end':([101,],[134,]),'f_end_call':([103,188,],[136,218,]),'f_verify_func':([107,],[137,]),'f_oper':([111,145,146,147,149,],[142,183,184,185,186,]),'f_for_start':([113,],[144,]),'f_lparen':([118,],[150,]),'f_fact':([120,],[151,]),'to_num':([121,],[153,]),'to_str':([121,178,],[154,207,]),'f_string':([122,176,216,219,],[157,206,239,242,]),'f_tipofunc':([124,160,],[159,193,]),'f_nothing':([125,],[160,]),'f_end_check':([131,136,218,225,],[166,170,241,248,]),'f_start_array':([132,],[167,]),'write_list':([140,],[174,]),'write_listp':([140,205,],[175,232,]),'f_return_val':([152,],[188,]),'f_verify_type_composite':([165,],[196,]),'args':([171,251,],[198,262,]),'args_list':([171,251,],[199,199,]),'f_end_args':([171,199,251,],[200,228,200,]),'f_exprwhile':([181,],[210,]),'f_if':([191,],[222,]),'f_index':([197,274,],[226,280,]),'f_arg':([201,250,],[230,261,]),'f_verify_func_composite':([202,],[231,]),'f_for_to':([211,],[234,]),'f_expres':([212,],[235,]),'f_exp':([213,],[236,]),'f_term':([214,],[237,]),'f_concat':([215,239,],[238,254,]),'f_rparen':([217,],[240,]),'f_end_array':([249,284,],[260,286,]),'f_endfunc':([257,267,],[266,273,]),'f_next_index':([259,],[268,]),'f_for_end':([271,],[276,]),'condicionp':([272,],[277,]),'f_endwhile':([275,],[281,]),'f_endif':([277,],[282,]),'f_else':([278,],[283,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> PROGRAM f_start ID f_prog ; clases vars funciones MAIN f_main ( ) { estatutos } END f_end ;','start',18,'p_start','aloop.py',234),
  ('f_start -> <empty>','f_start',0,'p_f_start','aloop.py',237),
  ('f_prog -> <empty>','f_prog',0,'p_f_prog','aloop.py',245),
  ('f_main -> <empty>','f_main',0,'p_f_main','aloop.py',250),
  ('f_end -> <empty>','f_end',0,'p_f_end','aloop.py',255),
  ('clases -> clases clase','clases',2,'p_clases','aloop.py',274),
  ('clases -> empty','clases',1,'p_clases','aloop.py',275),
  ('clase -> TYPE ID f_startclass : ID f_clasepadre { cvars f_cvars funciones } f_endclass','clase',12,'p_clase','aloop.py',278),
  ('clase -> TYPE ID f_startclass { cvars f_cvars funciones } f_endclass','clase',9,'p_clase','aloop.py',279),
  ('f_startclass -> <empty>','f_startclass',0,'p_f_startclass','aloop.py',282),
  ('f_clasepadre -> <empty>','f_clasepadre',0,'p_f_clasepadre','aloop.py',290),
  ('cvars -> cvars DEF tipo dimension : lista_id ;','cvars',7,'p_cvars','aloop.py',306),
  ('cvars -> empty','cvars',1,'p_cvars','aloop.py',307),
  ('f_cvars -> <empty>','f_cvars',0,'p_f_cvars','aloop.py',310),
  ('f_endclass -> <empty>','f_endclass',0,'p_f_endclass','aloop.py',316),
  ('funciones -> funciones funcion','funciones',2,'p_funciones','aloop.py',331),
  ('funciones -> empty','funciones',1,'p_funciones','aloop.py',332),
  ('funcion -> FUNC ID f_startfunc ( params ) : tipo f_tipofunc { cvars estatutos } f_endfunc','funcion',14,'p_funcion','aloop.py',335),
  ('funcion -> FUNC ID f_startfunc ( params ) : NOTHING f_nothing f_tipofunc { cvars estatutos } f_endfunc','funcion',15,'p_funcion','aloop.py',336),
  ('f_startfunc -> <empty>','f_startfunc',0,'p_f_startfunc','aloop.py',339),
  ('f_nothing -> <empty>','f_nothing',0,'p_f_nothing','aloop.py',344),
  ('f_tipofunc -> <empty>','f_tipofunc',0,'p_f_tipofunc','aloop.py',349),
  ('f_endfunc -> <empty>','f_endfunc',0,'p_f_endfunc','aloop.py',369),
  ('vars -> vars DEF tipo dimension : lista_id ;','vars',7,'p_vars','aloop.py',395),
  ('vars -> vars DEF ID f_varsobj : lista_id_obj ;','vars',7,'p_vars','aloop.py',396),
  ('vars -> empty','vars',1,'p_vars','aloop.py',397),
  ('f_varsobj -> <empty>','f_varsobj',0,'p_f_varsobj','aloop.py',400),
  ('lista_id -> ID f_vars','lista_id',2,'p_lista_id','aloop.py',412),
  ('lista_id -> lista_id , ID f_vars','lista_id',4,'p_lista_id','aloop.py',413),
  ('f_vars -> <empty>','f_vars',0,'p_f_vars','aloop.py',416),
  ('lista_id_obj -> ID f_vars_obj','lista_id_obj',2,'p_lista_id_obj','aloop.py',466),
  ('lista_id_obj -> lista_id_obj , ID f_vars_obj','lista_id_obj',4,'p_lista_id_obj','aloop.py',467),
  ('f_vars_obj -> <empty>','f_vars_obj',0,'p_f_vars_obj','aloop.py',470),
  ('dimension -> [ NUM f_dim1 ] f_enddim','dimension',5,'p_dimension','aloop.py',488),
  ('dimension -> [ NUM f_dim1 ] [ NUM f_dim2 ] f_enddim','dimension',9,'p_dimension','aloop.py',489),
  ('dimension -> empty','dimension',1,'p_dimension','aloop.py',490),
  ('f_dim1 -> <empty>','f_dim1',0,'p_f_dim1','aloop.py',493),
  ('f_dim2 -> <empty>','f_dim2',0,'p_f_dim2','aloop.py',501),
  ('f_enddim -> <empty>','f_enddim',0,'p_f_enddim','aloop.py',508),
  ('tipo -> NUMBER','tipo',1,'p_tipo','aloop.py',515),
  ('tipo -> STRING','tipo',1,'p_tipo','aloop.py',516),
  ('params -> pparams','params',1,'p_params','aloop.py',524),
  ('params -> empty','params',1,'p_params','aloop.py',525),
  ('pparams -> tipo ID f_param','pparams',3,'p_pparams','aloop.py',528),
  ('pparams -> pparams , tipo ID f_param','pparams',5,'p_pparams','aloop.py',529),
  ('f_param -> <empty>','f_param',0,'p_f_param','aloop.py',532),
  ('estatutos -> estatutos estatuto','estatutos',2,'p_estatutos','aloop.py',548),
  ('estatutos -> empty','estatutos',1,'p_estatutos','aloop.py',549),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','aloop.py',552),
  ('estatuto -> while','estatuto',1,'p_estatuto','aloop.py',553),
  ('estatuto -> for','estatuto',1,'p_estatuto','aloop.py',554),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','aloop.py',555),
  ('estatuto -> CALL call_func ;','estatuto',3,'p_estatuto','aloop.py',556),
  ('call_func -> func f_end_call f_end_check','call_func',3,'p_call_func','aloop.py',559),
  ('call_func -> input','call_func',1,'p_call_func','aloop.py',560),
  ('call_func -> write','call_func',1,'p_call_func','aloop.py',561),
  ('call_func -> return','call_func',1,'p_call_func','aloop.py',562),
  ('f_end_call -> <empty>','f_end_call',0,'p_f_end_call','aloop.py',565),
  ('func -> ID f_verify_func ( args )','func',5,'p_func','aloop.py',583),
  ('func -> ID f_varobj : ID f_verify_func_composite ( args )','func',8,'p_func','aloop.py',584),
  ('f_verify_func -> <empty>','f_verify_func',0,'p_f_verify_func','aloop.py',587),
  ('f_varobj -> <empty>','f_varobj',0,'p_f_varobj','aloop.py',605),
  ('f_verify_func_composite -> <empty>','f_verify_func_composite',0,'p_f_verify_func_composite','aloop.py',609),
  ('args -> args_list f_end_args','args',2,'p_args','aloop.py',633),
  ('args -> f_end_args','args',1,'p_args','aloop.py',634),
  ('args_list -> expresion f_arg','args_list',2,'p_args_list','aloop.py',637),
  ('args_list -> args_list , expresion f_arg','args_list',4,'p_args_list','aloop.py',638),
  ('f_arg -> <empty>','f_arg',0,'p_f_arg','aloop.py',641),
  ('f_end_args -> <empty>','f_end_args',0,'p_f_end_args','aloop.py',660),
  ('asignacion -> var = f_oper expresion ;','asignacion',5,'p_asignacion','aloop.py',670),
  ('var -> ID f_varobj : ID f_verify_type_composite indexacion f_end_check','var',7,'p_var','aloop.py',677),
  ('var -> ID f_verify_type indexacion f_end_check','var',4,'p_var','aloop.py',678),
  ('f_verify_type -> <empty>','f_verify_type',0,'p_f_verify_type','aloop.py',681),
  ('f_verify_type_composite -> <empty>','f_verify_type_composite',0,'p_f_verify_type_composite','aloop.py',707),
  ('f_end_check -> <empty>','f_end_check',0,'p_f_end_check','aloop.py',732),
  ('indexacion -> [ f_start_array expresion f_index ] f_end_array','indexacion',6,'p_indexacion','aloop.py',737),
  ('indexacion -> [ f_start_array expresion f_index ] [ f_next_index expresion f_index ] f_end_array','indexacion',11,'p_indexacion','aloop.py',738),
  ('indexacion -> f_no_index empty','indexacion',2,'p_indexacion','aloop.py',739),
  ('f_no_index -> <empty>','f_no_index',0,'p_f_no_index','aloop.py',742),
  ('f_start_array -> <empty>','f_start_array',0,'p_f_start_array','aloop.py',749),
  ('f_index -> <empty>','f_index',0,'p_f_index','aloop.py',762),
  ('f_next_index -> <empty>','f_next_index',0,'p_f_next_index','aloop.py',792),
  ('f_end_array -> <empty>','f_end_array',0,'p_f_end_array','aloop.py',799),
  ('expresion -> exp','expresion',1,'p_expresion','aloop.py',834),
  ('expresion -> expresion COMP f_oper exp f_expres','expresion',5,'p_expresion','aloop.py',835),
  ('f_expres -> <empty>','f_expres',0,'p_f_expres','aloop.py',838),
  ('exp -> term','exp',1,'p_exp','aloop.py',862),
  ('exp -> exp OPTERM f_oper term f_exp','exp',5,'p_exp','aloop.py',863),
  ('f_exp -> <empty>','f_exp',0,'p_f_exp','aloop.py',867),
  ('term -> fact','term',1,'p_term','aloop.py',891),
  ('term -> term OPFACT f_oper fact f_term','term',5,'p_term','aloop.py',892),
  ('f_term -> <empty>','f_term',0,'p_f_term','aloop.py',896),
  ('f_oper -> <empty>','f_oper',0,'p_f_oper','aloop.py',921),
  ('fact -> ( f_lparen expresion ) f_rparen','fact',5,'p_fact','aloop.py',925),
  ('fact -> var','fact',1,'p_fact','aloop.py',926),
  ('fact -> NUM f_fact','fact',2,'p_fact','aloop.py',927),
  ('fact -> OPTERM NUM','fact',2,'p_fact','aloop.py',928),
  ('fact -> CALL func f_return_val f_end_call f_end_check','fact',5,'p_fact','aloop.py',929),
  ('fact -> CALL to_num','fact',2,'p_fact','aloop.py',930),
  ('fact -> CALL to_str','fact',2,'p_fact','aloop.py',931),
  ('fact -> STR f_string','fact',2,'p_fact','aloop.py',932),
  ('fact -> fact & f_oper var f_concat','fact',5,'p_fact','aloop.py',933),
  ('fact -> fact & f_oper STR f_string f_concat','fact',6,'p_fact','aloop.py',934),
  ('f_concat -> <empty>','f_concat',0,'p_f_concat','aloop.py',947),
  ('f_lparen -> <empty>','f_lparen',0,'p_f_lparen','aloop.py',971),
  ('f_rparen -> <empty>','f_rparen',0,'p_f_rparen','aloop.py',975),
  ('f_fact -> <empty>','f_fact',0,'p_f_fact','aloop.py',979),
  ('f_return_val -> <empty>','f_return_val',0,'p_f_return_val','aloop.py',985),
  ('condicion -> IF ( expresion ) f_if THEN { estatutos } condicionp f_endif','condicion',11,'p_condicion','aloop.py',1011),
  ('condicionp -> ELSE f_else { estatutos }','condicionp',5,'p_condicionp','aloop.py',1014),
  ('condicionp -> empty','condicionp',1,'p_condicionp','aloop.py',1015),
  ('f_if -> <empty>','f_if',0,'p_f_if','aloop.py',1018),
  ('f_endif -> <empty>','f_endif',0,'p_f_endif','aloop.py',1028),
  ('f_else -> <empty>','f_else',0,'p_f_else','aloop.py',1033),
  ('while -> WHILE f_while ( expresion f_exprwhile ) DO { estatutos } f_endwhile','while',11,'p_while','aloop.py',1040),
  ('f_while -> <empty>','f_while',0,'p_f_while','aloop.py',1043),
  ('f_exprwhile -> <empty>','f_exprwhile',0,'p_f_exprwhile','aloop.py',1047),
  ('f_endwhile -> <empty>','f_endwhile',0,'p_f_endwhile','aloop.py',1057),
  ('for -> FOR expresion f_for_start TO expresion f_for_to { estatutos } f_for_end','for',10,'p_for','aloop.py',1064),
  ('f_for_start -> <empty>','f_for_start',0,'p_f_for_start','aloop.py',1067),
  ('f_for_to -> <empty>','f_for_to',0,'p_f_for_to','aloop.py',1077),
  ('f_for_end -> <empty>','f_for_end',0,'p_f_for_end','aloop.py',1093),
  ('to_num -> TO_NUMBER ( STR f_string )','to_num',5,'p_to_num','aloop.py',1105),
  ('to_num -> TO_NUMBER ( var )','to_num',4,'p_to_num','aloop.py',1106),
  ('to_str -> TO_STRING ( expresion )','to_str',4,'p_to_str','aloop.py',1118),
  ('input -> INPUT ( var )','input',4,'p_input','aloop.py',1130),
  ('write -> PRINT ( write_list )','write',4,'p_write','aloop.py',1137),
  ('write_list -> write_list & write_listp','write_list',3,'p_write_list','aloop.py',1140),
  ('write_list -> write_listp','write_list',1,'p_write_list','aloop.py',1141),
  ('write_listp -> STR f_string','write_listp',2,'p_write_listp','aloop.py',1144),
  ('write_listp -> var','write_listp',1,'p_write_listp','aloop.py',1145),
  ('write_listp -> CALL to_str','write_listp',2,'p_write_listp','aloop.py',1146),
  ('f_string -> <empty>','f_string',0,'p_f_string','aloop.py',1153),
  ('return -> RET ( expresion )','return',4,'p_return','aloop.py',1160),
  ('empty -> <empty>','empty',0,'p_empty','aloop.py',1192),
]
