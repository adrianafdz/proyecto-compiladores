
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "startCALL COMP DEF DO ELSE END FOR FUNC ID IF INPUT MAIN NOTHING NUM NUMBER OPFACT OPTERM PRINT PROGRAM RET STR STRING THEN TO TO_NUMBER TO_STRING TYPE WHILEstart : PROGRAM f_start ID f_prog ';' clases vars funciones MAIN '(' ')' '{' estatutos '}' END f_end ';' f_start :f_prog :f_end : clases : clases clase\n              | emptyclase : TYPE ID f_startclass ':' ID f_clasepadre '{' cvars f_cvars funciones '}' f_endclass \n             | TYPE ID f_startclass '{' cvars f_cvars funciones '}' f_endclass f_startclass :f_clasepadre :f_cvars :f_endclass :funciones : funciones funcion\n                  | emptyfuncion : FUNC ID f_startfunc '(' params ')' ':' tipo f_tipofunc '{' vars estatutos '}' f_endfunc\n               | FUNC ID f_startfunc '(' params ')' ':' NOTHING f_nothing f_tipofunc '{' vars estatutos '}' f_endfunc f_startfunc :f_nothing :f_tipofunc :f_endfunc :vars : vars DEF tipo dimension ':' lista_id ';'\n            | vars DEF ID f_varsobj ':' lista_id ';'\n            | emptyf_varsobj :cvars : cvars DEF tipo dimension ':' lista_id ';'\n             | emptylista_id : ID f_vars\n                | lista_id ',' ID f_varsf_vars :dimension : '[' expresion f_dim1 ']' f_onedim\n                 | '[' expresion f_dim1 ']' '[' expresion f_dim2 ']' f_twodim\n                 | emptyf_dim1 :f_dim2 :f_onedim :f_twodim :tipo : NUMBER \n            | STRINGparams : pparams \n              | emptypparams : tipo ID f_param\n               | pparams ',' tipo ID f_paramf_param :estatutos : estatutos estatuto \n                 | emptyestatuto : asignacion \n                | while \n                | for \n                | condicion \n                | CALL call_func ';' call_func : func\n                 | input \n                 | write \n                 | to_num \n                 | to_str\n                 | return func : ID  f_verify_func '(' args ')'\n            | ID  f_varobj ':' ID f_verify_func_composite '(' args ')' f_verify_func :f_verify_func_composite :args : args_list\n            | emptyargs_list : expresion \n                 | args_list ',' expresionasignacion : var '=' f_oper expresion ';' var : ID f_varobj ':' ID f_verify_type_composite dimension\n           | ID f_verify_type dimensionf_varobj :f_verify_type :f_verify_type_composite :expresion : exp\n                 | expresion COMP f_oper exp f_expresf_expres :exp : term\n           | exp OPTERM f_oper term f_expf_exp :term : fact\n            | term OPFACT f_oper fact f_termf_term :f_oper :fact : '(' lparen expresion ')' rparen\n            | var\n            | NUM f_fact\n            | OPTERM NUM\n            | CALL call_funclparen :rparen :f_fact :condicion : IF '(' expresion ')' f_if THEN '{' estatutos '}' condicionp f_endifcondicionp : ELSE f_else '{' estatutos '}'\n                  | empty f_if :f_endif :f_else :while : WHILE f_while '(' expresion f_exprwhile ')' DO '{' estatutos '}' f_endwhile f_while :f_exprwhile :f_endwhile :for : FOR expresion f_for_start TO expresion f_for_to '{' estatutos '}' f_for_end f_for_start :f_for_to :f_for_end :to_num : TO_NUMBER '(' STR ')' \n              | TO_NUMBER '(' var ')' to_str : TO_STRING '(' expresion ')' input : INPUT '(' var ')' write : PRINT '(' write_list ')' write_list : write_list '&' write_listp\n                  | write_listpwrite_listp : STR \n                   | var \n                   | CALL to_strreturn : RET '(' expresion ')' empty :"
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,193,],[0,-1,]),'ID':([2,3,11,12,14,19,22,23,28,31,35,41,44,46,50,55,56,57,59,80,81,83,86,87,90,91,92,96,97,98,99,100,101,103,108,109,110,111,112,113,116,122,128,129,146,149,152,166,175,177,178,179,187,196,203,206,210,218,219,222,223,224,225,226,227,228,230,231,232,233,236,237,238,240,242,243,245,246,247,],[-2,4,-23,16,21,26,-37,-38,45,47,53,-86,68,53,-114,-80,-80,-80,45,45,-45,119,-21,121,45,45,45,45,45,45,45,45,140,-22,-44,-46,-47,-48,-49,68,45,45,45,163,-80,45,184,45,53,-50,45,45,45,45,45,-65,-114,-114,-114,-114,-114,45,-114,-114,45,45,45,45,-102,-114,-98,-99,-93,-91,-95,-89,-114,45,-90,]),';':([4,5,29,37,38,40,42,43,45,52,53,58,60,61,62,63,64,65,66,67,75,76,88,89,102,121,123,124,125,126,127,140,144,145,153,155,156,157,158,164,165,168,169,170,171,172,176,186,190,192,194,201,212,220,],[-3,6,-32,-71,-74,-77,-82,-88,-69,86,-29,-84,-83,-85,-51,-52,-53,-54,-55,-56,-114,103,-27,-35,-67,-29,-30,-73,-76,-79,-87,-70,-4,177,-28,-72,-75,-78,-81,-106,-107,-103,-104,-105,-113,-114,193,-57,-66,205,206,-36,-31,-58,]),'TYPE':([6,7,8,10,142,174,204,214,],[-114,12,-6,-5,-12,-8,-12,-7,]),'DEF':([6,7,8,9,10,11,32,48,49,86,103,104,141,142,174,204,205,210,214,218,219,225,],[-114,-114,-6,14,-5,-23,-114,79,-26,-21,-22,-114,79,-12,-8,-12,-25,-114,-7,14,-114,14,]),'MAIN':([6,7,8,9,10,11,13,15,18,86,103,142,174,204,214,229,234,235,241,],[-114,-114,-6,-114,-5,-23,17,-14,-13,-21,-22,-12,-8,-12,-7,-20,-15,-20,-16,]),'FUNC':([6,7,8,9,10,11,13,15,18,32,48,49,78,86,103,104,105,141,142,173,174,191,204,205,214,229,234,235,241,],[-114,-114,-6,-114,-5,-23,19,-14,-13,-114,-11,-26,-114,-21,-22,-114,19,-11,-12,-114,-8,19,-12,-25,-7,-20,-15,-20,-16,]),'}':([11,15,18,32,48,49,50,78,80,81,86,103,104,105,108,109,110,111,112,141,173,177,191,205,206,210,218,219,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,245,246,247,],[-23,-14,-13,-114,-11,-26,-114,-114,107,-45,-21,-22,-114,142,-44,-46,-47,-48,-49,-11,-114,-50,204,-25,-65,-114,-114,-114,-114,-114,229,-114,-114,232,233,-20,235,236,-102,-114,-15,-20,-98,-99,-93,-91,-16,-95,-89,-114,247,-90,]),'CALL':([11,28,41,50,55,56,57,59,80,81,86,90,91,92,97,99,100,103,108,109,110,111,112,116,122,128,146,149,166,177,178,179,187,196,203,206,210,218,219,222,223,224,225,226,227,228,230,231,232,233,236,237,238,240,242,243,245,246,247,],[-23,44,-86,-114,-80,-80,-80,44,113,-45,-21,44,44,44,135,44,44,-22,-44,-46,-47,-48,-49,44,44,44,-80,44,135,-50,44,44,44,44,44,-65,-114,-114,-114,-114,-114,113,-114,-114,113,113,113,113,-102,-114,-98,-99,-93,-91,-95,-89,-114,113,-90,]),'WHILE':([11,50,80,81,86,103,108,109,110,111,112,177,206,210,218,219,222,223,224,225,226,227,228,230,231,232,233,236,237,238,240,242,243,245,246,247,],[-23,-114,115,-45,-21,-22,-44,-46,-47,-48,-49,-50,-65,-114,-114,-114,-114,-114,115,-114,-114,115,115,115,115,-102,-114,-98,-99,-93,-91,-95,-89,-114,115,-90,]),'FOR':([11,50,80,81,86,103,108,109,110,111,112,177,206,210,218,219,222,223,224,225,226,227,228,230,231,232,233,236,237,238,240,242,243,245,246,247,],[-23,-114,116,-45,-21,-22,-44,-46,-47,-48,-49,-50,-65,-114,-114,-114,-114,-114,116,-114,-114,116,116,116,116,-102,-114,-98,-99,-93,-91,-95,-89,-114,116,-90,]),'IF':([11,50,80,81,86,103,108,109,110,111,112,177,206,210,218,219,222,223,224,225,226,227,228,230,231,232,233,236,237,238,240,242,243,245,246,247,],[-23,-114,117,-45,-21,-22,-44,-46,-47,-48,-49,-50,-65,-114,-114,-114,-114,-114,117,-114,-114,117,117,117,117,-102,-114,-98,-99,-93,-91,-95,-89,-114,117,-90,]),'NUMBER':([14,51,79,120,150,],[22,22,22,22,22,]),'STRING':([14,51,79,120,150,],[23,23,23,23,23,]),':':([16,20,21,22,23,24,27,29,30,45,68,74,89,95,106,118,123,143,201,212,],[-9,-114,-24,-37,-38,31,35,-32,46,-68,-68,101,-35,129,-114,150,-30,175,-36,-31,]),'{':([16,22,23,24,29,33,37,38,40,42,43,45,47,58,60,61,62,63,64,65,66,67,75,77,89,102,123,124,125,126,127,140,155,156,157,158,164,165,168,169,170,171,172,182,183,186,190,198,199,201,208,211,212,216,217,220,221,239,244,],[-9,-37,-38,32,-32,50,-71,-74,-77,-82,-88,-69,-10,-84,-83,-85,-51,-52,-53,-54,-55,-56,-114,104,-35,-67,-30,-73,-76,-79,-87,-70,-72,-75,-78,-81,-106,-107,-103,-104,-105,-113,-114,-19,-18,-57,-66,210,-19,-36,-101,219,-31,222,223,-58,226,-94,245,]),'(':([17,26,28,34,41,55,56,57,59,68,69,70,71,72,73,90,91,92,94,99,100,115,116,117,122,128,146,147,149,163,178,179,187,188,196,203,],[25,-17,41,51,-86,-80,-80,-80,41,-59,96,97,98,99,100,41,41,41,128,41,41,-96,41,149,41,41,-80,179,41,-60,41,41,41,203,41,41,]),'[':([20,22,23,45,75,89,106,140,172,],[28,-37,-38,-69,28,122,28,-70,28,]),')':([25,29,37,38,40,42,43,45,51,58,60,61,62,63,64,65,66,67,75,82,84,85,89,93,102,119,123,124,125,126,127,128,130,131,132,133,134,136,137,138,139,140,151,155,156,157,158,159,160,161,162,164,165,167,168,169,170,171,172,181,184,186,189,190,195,200,201,202,203,207,212,213,220,],[33,-32,-71,-74,-77,-82,-88,-69,-114,-84,-83,-85,-51,-52,-53,-54,-55,-56,-114,118,-39,-40,-35,127,-67,-43,-30,-73,-76,-79,-87,-114,164,165,-109,-110,-111,168,169,170,171,-70,-41,-72,-75,-78,-81,186,-61,-62,-63,-106,-107,-112,-103,-104,-105,-113,-114,197,-43,-57,-108,-66,-97,-42,-36,-64,-114,215,-31,220,-58,]),'NUM':([28,39,41,55,56,57,59,90,91,92,99,100,116,122,128,146,149,178,179,187,196,203,],[43,58,-86,-80,-80,-80,43,43,43,43,43,43,43,43,43,-80,43,43,43,43,43,43,]),'OPTERM':([28,29,37,38,40,41,42,43,45,55,56,57,58,59,60,61,62,63,64,65,66,67,75,89,90,91,92,99,100,102,116,122,123,124,125,126,127,128,140,146,149,156,157,158,164,165,168,169,170,171,172,178,179,186,187,190,196,201,203,212,220,],[39,-32,56,-74,-77,-86,-82,-88,-69,-80,-80,-80,-84,39,-83,-85,-51,-52,-53,-54,-55,-56,-114,-35,39,39,39,39,39,-67,39,39,-30,56,-76,-79,-87,39,-70,-80,39,-75,-78,-81,-106,-107,-103,-104,-105,-113,-114,39,39,-57,39,-66,39,-36,39,-31,-58,]),'OPFACT':([29,38,40,42,43,45,58,60,61,62,63,64,65,66,67,75,89,102,123,125,126,127,140,157,158,164,165,168,169,170,171,172,186,190,201,212,220,],[-32,57,-77,-82,-88,-69,-84,-83,-85,-51,-52,-53,-54,-55,-56,-114,-35,-67,-30,57,-79,-87,-70,-78,-81,-106,-107,-103,-104,-105,-113,-114,-57,-66,-36,-31,-58,]),'COMP':([29,36,37,38,40,42,43,45,58,60,61,62,63,64,65,66,67,75,89,93,102,123,124,125,126,127,138,139,140,148,154,155,156,157,158,162,164,165,168,169,170,171,172,181,186,190,194,195,201,202,208,212,220,],[-32,55,-71,-74,-77,-82,-88,-69,-84,-83,-85,-51,-52,-53,-54,-55,-56,-114,-35,55,-67,-30,-73,-76,-79,-87,55,55,-70,55,55,-72,-75,-78,-81,55,-106,-107,-103,-104,-105,-113,-114,55,-57,-66,55,55,-36,55,55,-31,-58,]),']':([29,36,37,38,40,42,43,45,54,58,60,61,62,63,64,65,66,67,75,89,102,123,124,125,126,127,140,154,155,156,157,158,164,165,168,169,170,171,172,185,186,190,201,212,220,],[-32,-33,-71,-74,-77,-82,-88,-69,89,-84,-83,-85,-51,-52,-53,-54,-55,-56,-114,-35,-67,-30,-73,-76,-79,-87,-70,-34,-72,-75,-78,-81,-106,-107,-103,-104,-105,-113,-114,201,-57,-66,-36,-31,-58,]),'=':([29,45,75,89,102,114,123,140,172,190,201,212,],[-32,-69,-114,-35,-67,146,-30,-70,-114,-66,-36,-31,]),'TO':([29,37,38,40,42,43,45,58,60,61,62,63,64,65,66,67,75,89,102,123,124,125,126,127,140,148,155,156,157,158,164,165,168,169,170,171,172,180,186,190,201,212,220,],[-32,-71,-74,-77,-82,-88,-69,-84,-83,-85,-51,-52,-53,-54,-55,-56,-114,-35,-67,-30,-73,-76,-79,-87,-70,-100,-72,-75,-78,-81,-106,-107,-103,-104,-105,-113,-114,196,-57,-66,-36,-31,-58,]),',':([29,37,38,40,42,43,45,52,53,58,60,61,62,63,64,65,66,67,75,76,84,88,89,102,119,121,123,124,125,126,127,140,151,153,155,156,157,158,160,162,164,165,168,169,170,171,172,184,186,190,192,200,201,202,212,220,],[-32,-71,-74,-77,-82,-88,-69,87,-29,-84,-83,-85,-51,-52,-53,-54,-55,-56,-114,87,120,-27,-35,-67,-43,-29,-30,-73,-76,-79,-87,-70,-41,-28,-72,-75,-78,-81,187,-63,-106,-107,-103,-104,-105,-113,-114,-43,-57,-66,87,-42,-36,-64,-31,-58,]),'&':([29,45,75,89,102,123,131,132,133,134,140,167,170,172,189,190,201,212,],[-32,-69,-114,-35,-67,-30,166,-109,-110,-111,-70,-112,-105,-114,-108,-66,-36,-31,]),'INPUT':([44,113,],[69,69,]),'PRINT':([44,113,],[70,70,]),'TO_NUMBER':([44,113,],[71,71,]),'TO_STRING':([44,113,135,],[72,72,72,]),'RET':([44,113,],[73,73,]),'STR':([97,98,166,],[133,136,133,]),'END':([107,],[144,]),'NOTHING':([150,],[183,]),'THEN':([197,209,],[-92,217,]),'DO':([215,],[221,]),'ELSE':([233,],[239,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'f_start':([2,],[3,]),'f_prog':([4,],[5,]),'clases':([6,],[7,]),'empty':([6,7,9,20,32,50,51,75,78,104,106,128,172,173,203,210,218,219,222,223,225,226,233,245,],[8,11,15,29,49,81,85,29,15,49,29,161,29,15,161,11,81,11,81,81,81,81,240,81,]),'vars':([7,210,219,],[9,218,225,]),'clase':([7,],[10,]),'funciones':([9,78,173,],[13,105,191,]),'funcion':([13,105,191,],[18,18,18,]),'tipo':([14,51,79,120,150,],[20,83,106,152,182,]),'f_startclass':([16,],[24,]),'dimension':([20,75,106,172,],[27,102,143,190,]),'f_varsobj':([21,],[30,]),'f_startfunc':([26,],[34,]),'expresion':([28,59,99,100,116,122,128,149,178,179,187,196,203,],[36,93,138,139,148,154,162,181,194,195,202,208,162,]),'exp':([28,59,90,99,100,116,122,128,149,178,179,187,196,203,],[37,37,124,37,37,37,37,37,37,37,37,37,37,37,]),'term':([28,59,90,91,99,100,116,122,128,149,178,179,187,196,203,],[38,38,38,125,38,38,38,38,38,38,38,38,38,38,38,]),'fact':([28,59,90,91,92,99,100,116,122,128,149,178,179,187,196,203,],[40,40,40,40,126,40,40,40,40,40,40,40,40,40,40,40,]),'var':([28,59,80,90,91,92,96,97,98,99,100,116,122,128,149,166,178,179,187,196,203,224,227,228,230,231,246,],[42,42,114,42,42,42,130,134,137,42,42,42,42,42,42,134,42,42,42,42,42,114,114,114,114,114,114,]),'cvars':([32,104,],[48,141,]),'lista_id':([35,46,175,],[52,76,192,]),'f_dim1':([36,],[54,]),'lparen':([41,],[59,]),'f_fact':([43,],[60,]),'call_func':([44,113,],[61,145,]),'func':([44,113,],[62,62,]),'input':([44,113,],[63,63,]),'write':([44,113,],[64,64,]),'to_num':([44,113,],[65,65,]),'to_str':([44,113,135,],[66,66,167,]),'return':([44,113,],[67,67,]),'f_varobj':([45,68,],[74,95,]),'f_verify_type':([45,],[75,]),'f_clasepadre':([47,],[77,]),'f_cvars':([48,141,],[78,173,]),'estatutos':([50,218,222,223,225,226,245,],[80,224,227,228,230,231,246,]),'params':([51,],[82,]),'pparams':([51,],[84,]),'f_vars':([53,121,],[88,153,]),'f_oper':([55,56,57,146,],[90,91,92,178,]),'f_verify_func':([68,],[94,]),'estatuto':([80,224,227,228,230,231,246,],[108,108,108,108,108,108,108,]),'asignacion':([80,224,227,228,230,231,246,],[109,109,109,109,109,109,109,]),'while':([80,224,227,228,230,231,246,],[110,110,110,110,110,110,110,]),'for':([80,224,227,228,230,231,246,],[111,111,111,111,111,111,111,]),'condicion':([80,224,227,228,230,231,246,],[112,112,112,112,112,112,112,]),'f_onedim':([89,],[123,]),'write_list':([97,],[131,]),'write_listp':([97,166,],[132,189,]),'f_while':([115,],[147,]),'f_param':([119,184,],[151,200,]),'f_expres':([124,],[155,]),'f_exp':([125,],[156,]),'f_term':([126,],[157,]),'rparen':([127,],[158,]),'args':([128,203,],[159,213,]),'args_list':([128,203,],[160,160,]),'f_verify_type_composite':([140,],[172,]),'f_endclass':([142,204,],[174,214,]),'f_end':([144,],[176,]),'f_for_start':([148,],[180,]),'f_dim2':([154,],[185,]),'f_verify_func_composite':([163,],[188,]),'f_tipofunc':([182,199,],[198,211,]),'f_nothing':([183,],[199,]),'f_exprwhile':([195,],[207,]),'f_if':([197,],[209,]),'f_twodim':([201,],[212,]),'f_for_to':([208,],[216,]),'f_endfunc':([229,235,],[234,241,]),'f_for_end':([232,],[237,]),'condicionp':([233,],[238,]),'f_endwhile':([236,],[242,]),'f_endif':([238,],[243,]),'f_else':([239,],[244,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> PROGRAM f_start ID f_prog ; clases vars funciones MAIN ( ) { estatutos } END f_end ;','start',17,'p_start','aloop.py',114),
  ('f_start -> <empty>','f_start',0,'p_f_start','aloop.py',117),
  ('f_prog -> <empty>','f_prog',0,'p_f_prog','aloop.py',123),
  ('f_end -> <empty>','f_end',0,'p_f_end','aloop.py',128),
  ('clases -> clases clase','clases',2,'p_clases','aloop.py',136),
  ('clases -> empty','clases',1,'p_clases','aloop.py',137),
  ('clase -> TYPE ID f_startclass : ID f_clasepadre { cvars f_cvars funciones } f_endclass','clase',12,'p_clase','aloop.py',140),
  ('clase -> TYPE ID f_startclass { cvars f_cvars funciones } f_endclass','clase',9,'p_clase','aloop.py',141),
  ('f_startclass -> <empty>','f_startclass',0,'p_f_startclass','aloop.py',144),
  ('f_clasepadre -> <empty>','f_clasepadre',0,'p_f_clasepadre','aloop.py',151),
  ('f_cvars -> <empty>','f_cvars',0,'p_f_cvars','aloop.py',157),
  ('f_endclass -> <empty>','f_endclass',0,'p_f_endclass','aloop.py',161),
  ('funciones -> funciones funcion','funciones',2,'p_funciones','aloop.py',166),
  ('funciones -> empty','funciones',1,'p_funciones','aloop.py',167),
  ('funcion -> FUNC ID f_startfunc ( params ) : tipo f_tipofunc { vars estatutos } f_endfunc','funcion',14,'p_funcion','aloop.py',170),
  ('funcion -> FUNC ID f_startfunc ( params ) : NOTHING f_nothing f_tipofunc { vars estatutos } f_endfunc','funcion',15,'p_funcion','aloop.py',171),
  ('f_startfunc -> <empty>','f_startfunc',0,'p_f_startfunc','aloop.py',174),
  ('f_nothing -> <empty>','f_nothing',0,'p_f_nothing','aloop.py',179),
  ('f_tipofunc -> <empty>','f_tipofunc',0,'p_f_tipofunc','aloop.py',184),
  ('f_endfunc -> <empty>','f_endfunc',0,'p_f_endfunc','aloop.py',188),
  ('vars -> vars DEF tipo dimension : lista_id ;','vars',7,'p_vars','aloop.py',194),
  ('vars -> vars DEF ID f_varsobj : lista_id ;','vars',7,'p_vars','aloop.py',195),
  ('vars -> empty','vars',1,'p_vars','aloop.py',196),
  ('f_varsobj -> <empty>','f_varsobj',0,'p_f_varsobj','aloop.py',199),
  ('cvars -> cvars DEF tipo dimension : lista_id ;','cvars',7,'p_cvars','aloop.py',210),
  ('cvars -> empty','cvars',1,'p_cvars','aloop.py',211),
  ('lista_id -> ID f_vars','lista_id',2,'p_lista_id','aloop.py',214),
  ('lista_id -> lista_id , ID f_vars','lista_id',4,'p_lista_id','aloop.py',215),
  ('f_vars -> <empty>','f_vars',0,'p_f_vars','aloop.py',218),
  ('dimension -> [ expresion f_dim1 ] f_onedim','dimension',5,'p_dimension','aloop.py',238),
  ('dimension -> [ expresion f_dim1 ] [ expresion f_dim2 ] f_twodim','dimension',9,'p_dimension','aloop.py',239),
  ('dimension -> empty','dimension',1,'p_dimension','aloop.py',240),
  ('f_dim1 -> <empty>','f_dim1',0,'p_f_dim1','aloop.py',243),
  ('f_dim2 -> <empty>','f_dim2',0,'p_f_dim2','aloop.py',248),
  ('f_onedim -> <empty>','f_onedim',0,'p_f_onedim','aloop.py',253),
  ('f_twodim -> <empty>','f_twodim',0,'p_f_twodim','aloop.py',260),
  ('tipo -> NUMBER','tipo',1,'p_tipo','aloop.py',267),
  ('tipo -> STRING','tipo',1,'p_tipo','aloop.py',268),
  ('params -> pparams','params',1,'p_params','aloop.py',276),
  ('params -> empty','params',1,'p_params','aloop.py',277),
  ('pparams -> tipo ID f_param','pparams',3,'p_pparams','aloop.py',280),
  ('pparams -> pparams , tipo ID f_param','pparams',5,'p_pparams','aloop.py',281),
  ('f_param -> <empty>','f_param',0,'p_f_param','aloop.py',284),
  ('estatutos -> estatutos estatuto','estatutos',2,'p_estatutos','aloop.py',289),
  ('estatutos -> empty','estatutos',1,'p_estatutos','aloop.py',290),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','aloop.py',293),
  ('estatuto -> while','estatuto',1,'p_estatuto','aloop.py',294),
  ('estatuto -> for','estatuto',1,'p_estatuto','aloop.py',295),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','aloop.py',296),
  ('estatuto -> CALL call_func ;','estatuto',3,'p_estatuto','aloop.py',297),
  ('call_func -> func','call_func',1,'p_call_func','aloop.py',300),
  ('call_func -> input','call_func',1,'p_call_func','aloop.py',301),
  ('call_func -> write','call_func',1,'p_call_func','aloop.py',302),
  ('call_func -> to_num','call_func',1,'p_call_func','aloop.py',303),
  ('call_func -> to_str','call_func',1,'p_call_func','aloop.py',304),
  ('call_func -> return','call_func',1,'p_call_func','aloop.py',305),
  ('func -> ID f_verify_func ( args )','func',5,'p_func','aloop.py',308),
  ('func -> ID f_varobj : ID f_verify_func_composite ( args )','func',8,'p_func','aloop.py',309),
  ('f_verify_func -> <empty>','f_verify_func',0,'p_f_verify_func','aloop.py',312),
  ('f_verify_func_composite -> <empty>','f_verify_func_composite',0,'p_f_verify_func_composite','aloop.py',322),
  ('args -> args_list','args',1,'p_args','aloop.py',335),
  ('args -> empty','args',1,'p_args','aloop.py',336),
  ('args_list -> expresion','args_list',1,'p_args_list','aloop.py',339),
  ('args_list -> args_list , expresion','args_list',3,'p_args_list','aloop.py',340),
  ('asignacion -> var = f_oper expresion ;','asignacion',5,'p_asignacion','aloop.py',343),
  ('var -> ID f_varobj : ID f_verify_type_composite dimension','var',6,'p_var','aloop.py',347),
  ('var -> ID f_verify_type dimension','var',3,'p_var','aloop.py',348),
  ('f_varobj -> <empty>','f_varobj',0,'p_f_varobj','aloop.py',351),
  ('f_verify_type -> <empty>','f_verify_type',0,'p_f_verify_type','aloop.py',356),
  ('f_verify_type_composite -> <empty>','f_verify_type_composite',0,'p_f_verify_type_composite','aloop.py',368),
  ('expresion -> exp','expresion',1,'p_expresion','aloop.py',382),
  ('expresion -> expresion COMP f_oper exp f_expres','expresion',5,'p_expresion','aloop.py',383),
  ('f_expres -> <empty>','f_expres',0,'p_f_expres','aloop.py',386),
  ('exp -> term','exp',1,'p_exp','aloop.py',410),
  ('exp -> exp OPTERM f_oper term f_exp','exp',5,'p_exp','aloop.py',411),
  ('f_exp -> <empty>','f_exp',0,'p_f_exp','aloop.py',415),
  ('term -> fact','term',1,'p_term','aloop.py',439),
  ('term -> term OPFACT f_oper fact f_term','term',5,'p_term','aloop.py',440),
  ('f_term -> <empty>','f_term',0,'p_f_term','aloop.py',444),
  ('f_oper -> <empty>','f_oper',0,'p_f_oper','aloop.py',469),
  ('fact -> ( lparen expresion ) rparen','fact',5,'p_fact','aloop.py',473),
  ('fact -> var','fact',1,'p_fact','aloop.py',474),
  ('fact -> NUM f_fact','fact',2,'p_fact','aloop.py',475),
  ('fact -> OPTERM NUM','fact',2,'p_fact','aloop.py',476),
  ('fact -> CALL call_func','fact',2,'p_fact','aloop.py',477),
  ('lparen -> <empty>','lparen',0,'p_lparen','aloop.py',499),
  ('rparen -> <empty>','rparen',0,'p_rparen','aloop.py',503),
  ('f_fact -> <empty>','f_fact',0,'p_f_fact','aloop.py',507),
  ('condicion -> IF ( expresion ) f_if THEN { estatutos } condicionp f_endif','condicion',11,'p_condicion','aloop.py',520),
  ('condicionp -> ELSE f_else { estatutos }','condicionp',5,'p_condicionp','aloop.py',523),
  ('condicionp -> empty','condicionp',1,'p_condicionp','aloop.py',524),
  ('f_if -> <empty>','f_if',0,'p_f_if','aloop.py',527),
  ('f_endif -> <empty>','f_endif',0,'p_f_endif','aloop.py',537),
  ('f_else -> <empty>','f_else',0,'p_f_else','aloop.py',542),
  ('while -> WHILE f_while ( expresion f_exprwhile ) DO { estatutos } f_endwhile','while',11,'p_while','aloop.py',549),
  ('f_while -> <empty>','f_while',0,'p_f_while','aloop.py',552),
  ('f_exprwhile -> <empty>','f_exprwhile',0,'p_f_exprwhile','aloop.py',556),
  ('f_endwhile -> <empty>','f_endwhile',0,'p_f_endwhile','aloop.py',566),
  ('for -> FOR expresion f_for_start TO expresion f_for_to { estatutos } f_for_end','for',10,'p_for','aloop.py',573),
  ('f_for_start -> <empty>','f_for_start',0,'p_f_for_start','aloop.py',576),
  ('f_for_to -> <empty>','f_for_to',0,'p_f_for_to','aloop.py',586),
  ('f_for_end -> <empty>','f_for_end',0,'p_f_for_end','aloop.py',602),
  ('to_num -> TO_NUMBER ( STR )','to_num',4,'p_to_num','aloop.py',614),
  ('to_num -> TO_NUMBER ( var )','to_num',4,'p_to_num','aloop.py',615),
  ('to_str -> TO_STRING ( expresion )','to_str',4,'p_to_str','aloop.py',628),
  ('input -> INPUT ( var )','input',4,'p_input','aloop.py',641),
  ('write -> PRINT ( write_list )','write',4,'p_write','aloop.py',645),
  ('write_list -> write_list & write_listp','write_list',3,'p_write_list','aloop.py',648),
  ('write_list -> write_listp','write_list',1,'p_write_list','aloop.py',649),
  ('write_listp -> STR','write_listp',1,'p_write_listp','aloop.py',652),
  ('write_listp -> var','write_listp',1,'p_write_listp','aloop.py',653),
  ('write_listp -> CALL to_str','write_listp',2,'p_write_listp','aloop.py',654),
  ('return -> RET ( expresion )','return',4,'p_return','aloop.py',661),
  ('empty -> <empty>','empty',0,'p_empty','aloop.py',665),
]
