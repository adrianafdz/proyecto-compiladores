
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "startCALL COMP DEF DO ELSE END FOR FUNC ID IF INPUT MAIN NOTHING NUM NUMBER OPFACT OPTERM PRINT PROGRAM RET STR STRING THEN TO TO_NUMBER TO_STRING TYPE WHILEstart : PROGRAM f_start ID f_prog ';' clases vars funciones MAIN '(' ')' '{' estatutos '}' END f_end ';' f_start :f_prog :f_end : clases : clases clase\n              | emptyclase : TYPE ID f_startclass ':' ID f_clasepadre '{' cvars f_cvars funciones '}' f_endclass \n             | TYPE ID f_startclass '{' cvars f_cvars funciones '}' f_endclass f_startclass :f_clasepadre :f_cvars :f_endclass :funciones : funciones funcion\n                  | emptyfuncion : FUNC ID f_startfunc '(' params ')' ':' tipo f_tipofunc '{' vars estatutos '}' f_endfunc\n               | FUNC ID f_startfunc '(' params ')' ':' NOTHING f_nothing f_tipofunc '{' vars estatutos '}' f_endfunc f_startfunc :f_nothing :f_tipofunc :f_endfunc :vars : vars DEF tipo dimension ':' lista_id ';'\n            | vars DEF ID f_varsobj ':' lista_id ';'\n            | emptyf_varsobj :cvars : cvars DEF tipo dimension ':' lista_id ';'\n             | emptylista_id : ID f_vars\n                | lista_id ',' ID f_varsf_vars :dimension : '[' expresion f_dim1 ']' f_onedim\n                 | '[' expresion f_dim1 ']' '[' expresion f_dim2 ']' f_twodim\n                 | emptyf_dim1 :f_dim2 :f_onedim :f_twodim :tipo : NUMBER \n            | STRINGparams : pparams \n              | emptypparams : tipo ID f_param\n               | pparams ',' tipo ID f_paramf_param :estatutos : estatutos estatuto \n                 | emptyestatuto : asignacion \n                | while \n                | for \n                | condicion \n                | CALL call_func ';' call_func : func\n                 | input \n                 | write \n                 | to_num \n                 | to_str\n                 | return func : ID  '(' args ')'\n            | ID  ':' ID '(' args ')' args : args_list\n            | emptyargs_list : expresion \n                 | args_list ',' expresionasignacion : var '=' f_oper expresion ';' var : ID f_varobj ':' ID f_verify_type_composite dimension\n           | ID f_verify_type dimensionf_varobj :f_verify_type :f_verify_type_composite :expresion : exp\n                 | expresion COMP f_oper exp f_expresf_expres :exp : term\n           | exp OPTERM f_oper term f_expf_exp :term : fact\n            | term OPFACT f_oper fact f_termf_term :f_oper :fact : '(' lparen expresion ')' rparen\n            | var\n            | NUM f_fact\n            | OPTERM NUM\n            | CALL call_funclparen :rparen :f_fact :condicion : IF '(' expresion ')' THEN '{' estatutos '}' condicionpcondicionp : ELSE '{' estatutos '}'\n                  | empty while : WHILE '(' expresion ')' DO '{' estatutos '}' for : FOR expresion TO expresion '{' estatutos '}' to_num : TO_NUMBER '(' STR ')' \n              | TO_NUMBER '(' var ')' to_str : TO_STRING '(' expresion ')' input : INPUT '(' var ')' write : PRINT '(' write_list ')' write_list : write_list '&' write_listp\n                  | write_listpwrite_listp : STR \n                   | var \n                   | CALL to_strreturn : RET '(' expresion ')' empty :"
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,193,],[0,-1,]),'ID':([2,3,11,12,14,19,22,23,28,31,35,41,44,46,50,55,56,57,59,80,81,83,86,87,90,91,92,94,95,96,97,98,99,100,101,103,108,109,110,111,112,113,116,122,149,150,152,155,163,164,167,176,178,179,181,205,207,209,213,214,215,216,217,218,219,220,221,222,223,224,226,227,229,232,234,235,],[-2,4,-23,16,21,26,-37,-38,45,47,53,-84,68,53,-103,-78,-78,-78,45,45,-45,119,-21,121,45,45,45,45,132,45,45,45,45,45,143,-22,-44,-46,-47,-48,-49,68,45,45,-78,45,45,185,45,45,45,53,-50,45,45,-63,-103,-103,-103,45,-103,-103,-103,45,-91,45,45,-103,-90,-103,45,-87,-89,-103,45,-88,]),';':([4,5,29,37,38,40,42,43,45,52,53,58,60,61,62,63,64,65,66,67,75,76,88,89,102,121,123,124,125,126,127,143,147,148,156,158,159,160,161,162,165,166,169,170,171,172,173,177,190,192,194,201,202,211,],[-3,6,-32,-69,-72,-75,-80,-86,-67,86,-29,-82,-81,-83,-51,-52,-53,-54,-55,-56,-103,103,-27,-35,-65,-29,-30,-71,-74,-77,-85,-68,-4,178,-28,-70,-73,-76,-79,-57,-95,-96,-92,-93,-94,-102,-103,193,-64,204,205,-36,-58,-31,]),'TYPE':([6,7,8,10,145,175,203,212,],[-103,12,-6,-5,-12,-8,-12,-7,]),'DEF':([6,7,8,9,10,11,32,48,49,86,103,104,144,145,175,203,204,209,212,216,217,222,],[-103,-103,-6,14,-5,-23,-103,79,-26,-21,-22,-103,79,-12,-8,-12,-25,-103,-7,14,-103,14,]),'MAIN':([6,7,8,9,10,11,13,15,18,86,103,145,175,203,212,225,230,231,233,],[-103,-103,-6,-103,-5,-23,17,-14,-13,-21,-22,-12,-8,-12,-7,-20,-15,-20,-16,]),'FUNC':([6,7,8,9,10,11,13,15,18,32,48,49,78,86,103,104,105,144,145,174,175,191,203,204,212,225,230,231,233,],[-103,-103,-6,-103,-5,-23,19,-14,-13,-103,-11,-26,-103,-21,-22,-103,19,-11,-12,-103,-8,19,-12,-25,-7,-20,-15,-20,-16,]),'}':([11,15,18,32,48,49,50,78,80,81,86,103,104,105,108,109,110,111,112,144,174,178,191,204,205,207,209,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,],[-23,-14,-13,-103,-11,-26,-103,-103,107,-45,-21,-22,-103,145,-44,-46,-47,-48,-49,-11,-103,-50,203,-25,-63,-103,-103,-103,219,-103,-103,-103,223,-91,224,225,-103,-90,-103,-20,231,-87,-89,-15,-20,-103,-16,235,-88,]),'CALL':([11,28,41,50,55,56,57,59,80,81,86,90,91,92,94,97,99,100,103,108,109,110,111,112,116,122,149,150,152,163,164,167,178,179,181,205,207,209,213,214,215,216,217,218,219,220,221,222,223,224,226,227,229,232,234,235,],[-23,44,-84,-103,-78,-78,-78,44,113,-45,-21,44,44,44,44,138,44,44,-22,-44,-46,-47,-48,-49,44,44,-78,44,44,44,44,138,-50,44,44,-63,-103,-103,-103,113,-103,-103,-103,113,-91,113,113,-103,-90,-103,113,-87,-89,-103,113,-88,]),'WHILE':([11,50,80,81,86,103,108,109,110,111,112,178,205,207,209,213,214,215,216,217,218,219,220,221,222,223,224,226,227,229,232,234,235,],[-23,-103,115,-45,-21,-22,-44,-46,-47,-48,-49,-50,-63,-103,-103,-103,115,-103,-103,-103,115,-91,115,115,-103,-90,-103,115,-87,-89,-103,115,-88,]),'FOR':([11,50,80,81,86,103,108,109,110,111,112,178,205,207,209,213,214,215,216,217,218,219,220,221,222,223,224,226,227,229,232,234,235,],[-23,-103,116,-45,-21,-22,-44,-46,-47,-48,-49,-50,-63,-103,-103,-103,116,-103,-103,-103,116,-91,116,116,-103,-90,-103,116,-87,-89,-103,116,-88,]),'IF':([11,50,80,81,86,103,108,109,110,111,112,178,205,207,209,213,214,215,216,217,218,219,220,221,222,223,224,226,227,229,232,234,235,],[-23,-103,117,-45,-21,-22,-44,-46,-47,-48,-49,-50,-63,-103,-103,-103,117,-103,-103,-103,117,-91,117,117,-103,-90,-103,117,-87,-89,-103,117,-88,]),'NUMBER':([14,51,79,120,153,],[22,22,22,22,22,]),'STRING':([14,51,79,120,153,],[23,23,23,23,23,]),':':([16,20,21,22,23,24,27,29,30,45,68,74,89,106,118,123,146,201,211,],[-9,-103,-24,-37,-38,31,35,-32,46,-66,95,101,-35,-103,153,-30,176,-36,-31,]),'{':([16,22,23,24,29,33,37,38,40,42,43,45,47,58,60,61,62,63,64,65,66,67,75,77,89,102,123,124,125,126,127,143,158,159,160,161,162,165,166,169,170,171,172,173,183,184,190,196,198,199,201,202,206,208,210,211,228,],[-9,-37,-38,32,-32,50,-69,-72,-75,-80,-86,-67,-10,-82,-81,-83,-51,-52,-53,-54,-55,-56,-103,104,-35,-65,-30,-71,-74,-77,-85,-68,-70,-73,-76,-79,-57,-95,-96,-92,-93,-94,-102,-103,-19,-18,-64,207,209,-19,-36,-58,213,215,217,-31,232,]),'(':([17,26,28,34,41,55,56,57,59,68,69,70,71,72,73,90,91,92,94,99,100,115,116,117,122,132,149,150,152,163,164,179,181,],[25,-17,41,51,-84,-78,-78,-78,41,94,96,97,98,99,100,41,41,41,41,41,41,150,41,152,41,164,-78,41,41,41,41,41,41,]),'[':([20,22,23,45,75,89,106,143,173,],[28,-37,-38,-67,28,122,28,-68,28,]),')':([25,29,37,38,40,42,43,45,51,58,60,61,62,63,64,65,66,67,75,82,84,85,89,93,94,102,119,123,124,125,126,127,128,129,130,131,133,134,135,136,137,139,140,141,142,143,154,158,159,160,161,162,164,165,166,168,169,170,171,172,173,180,182,185,187,188,189,190,200,201,202,211,],[33,-32,-69,-72,-75,-80,-86,-67,-103,-82,-81,-83,-51,-52,-53,-54,-55,-56,-103,118,-39,-40,-35,127,-103,-65,-43,-30,-71,-74,-77,-85,162,-59,-60,-61,165,166,-98,-99,-100,169,170,171,172,-68,-41,-70,-73,-76,-79,-57,-103,-95,-96,-101,-92,-93,-94,-102,-103,195,197,-43,-62,202,-97,-64,-42,-36,-58,-31,]),'NUM':([28,39,41,55,56,57,59,90,91,92,94,99,100,116,122,149,150,152,163,164,179,181,],[43,58,-84,-78,-78,-78,43,43,43,43,43,43,43,43,43,-78,43,43,43,43,43,43,]),'OPTERM':([28,29,37,38,40,41,42,43,45,55,56,57,58,59,60,61,62,63,64,65,66,67,75,89,90,91,92,94,99,100,102,116,122,123,124,125,126,127,143,149,150,152,159,160,161,162,163,164,165,166,169,170,171,172,173,179,181,190,201,202,211,],[39,-32,56,-72,-75,-84,-80,-86,-67,-78,-78,-78,-82,39,-81,-83,-51,-52,-53,-54,-55,-56,-103,-35,39,39,39,39,39,39,-65,39,39,-30,56,-74,-77,-85,-68,-78,39,39,-73,-76,-79,-57,39,39,-95,-96,-92,-93,-94,-102,-103,39,39,-64,-36,-58,-31,]),'OPFACT':([29,38,40,42,43,45,58,60,61,62,63,64,65,66,67,75,89,102,123,125,126,127,143,160,161,162,165,166,169,170,171,172,173,190,201,202,211,],[-32,57,-75,-80,-86,-67,-82,-81,-83,-51,-52,-53,-54,-55,-56,-103,-35,-65,-30,57,-77,-85,-68,-76,-79,-57,-95,-96,-92,-93,-94,-102,-103,-64,-36,-58,-31,]),'COMP':([29,36,37,38,40,42,43,45,58,60,61,62,63,64,65,66,67,75,89,93,102,123,124,125,126,127,131,141,142,143,151,157,158,159,160,161,162,165,166,169,170,171,172,173,180,182,187,190,194,196,201,202,211,],[-32,55,-69,-72,-75,-80,-86,-67,-82,-81,-83,-51,-52,-53,-54,-55,-56,-103,-35,55,-65,-30,-71,-74,-77,-85,55,55,55,-68,55,55,-70,-73,-76,-79,-57,-95,-96,-92,-93,-94,-102,-103,55,55,55,-64,55,55,-36,-58,-31,]),']':([29,36,37,38,40,42,43,45,54,58,60,61,62,63,64,65,66,67,75,89,102,123,124,125,126,127,143,157,158,159,160,161,162,165,166,169,170,171,172,173,186,190,201,202,211,],[-32,-33,-69,-72,-75,-80,-86,-67,89,-82,-81,-83,-51,-52,-53,-54,-55,-56,-103,-35,-65,-30,-71,-74,-77,-85,-68,-34,-70,-73,-76,-79,-57,-95,-96,-92,-93,-94,-102,-103,201,-64,-36,-58,-31,]),'=':([29,45,75,89,102,114,123,143,173,190,201,211,],[-32,-67,-103,-35,-65,149,-30,-68,-103,-64,-36,-31,]),',':([29,37,38,40,42,43,45,52,53,58,60,61,62,63,64,65,66,67,75,76,84,88,89,102,119,121,123,124,125,126,127,129,131,143,154,156,158,159,160,161,162,165,166,169,170,171,172,173,185,187,190,192,200,201,202,211,],[-32,-69,-72,-75,-80,-86,-67,87,-29,-82,-81,-83,-51,-52,-53,-54,-55,-56,-103,87,120,-27,-35,-65,-43,-29,-30,-71,-74,-77,-85,163,-61,-68,-41,-28,-70,-73,-76,-79,-57,-95,-96,-92,-93,-94,-102,-103,-43,-62,-64,87,-42,-36,-58,-31,]),'TO':([29,37,38,40,42,43,45,58,60,61,62,63,64,65,66,67,75,89,102,123,124,125,126,127,143,151,158,159,160,161,162,165,166,169,170,171,172,173,190,201,202,211,],[-32,-69,-72,-75,-80,-86,-67,-82,-81,-83,-51,-52,-53,-54,-55,-56,-103,-35,-65,-30,-71,-74,-77,-85,-68,181,-70,-73,-76,-79,-57,-95,-96,-92,-93,-94,-102,-103,-64,-36,-58,-31,]),'&':([29,45,75,89,102,123,134,135,136,137,143,168,171,173,189,190,201,211,],[-32,-67,-103,-35,-65,-30,167,-98,-99,-100,-68,-101,-94,-103,-97,-64,-36,-31,]),'INPUT':([44,113,],[69,69,]),'PRINT':([44,113,],[70,70,]),'TO_NUMBER':([44,113,],[71,71,]),'TO_STRING':([44,113,138,],[72,72,72,]),'RET':([44,113,],[73,73,]),'STR':([97,98,167,],[136,139,136,]),'END':([107,],[147,]),'NOTHING':([153,],[184,]),'DO':([195,],[206,]),'THEN':([197,],[208,]),'ELSE':([224,],[228,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'f_start':([2,],[3,]),'f_prog':([4,],[5,]),'clases':([6,],[7,]),'empty':([6,7,9,20,32,50,51,75,78,94,104,106,164,173,174,207,209,213,215,216,217,222,224,232,],[8,11,15,29,49,81,85,29,15,130,49,29,130,29,15,81,11,81,81,81,11,81,229,81,]),'vars':([7,209,217,],[9,216,222,]),'clase':([7,],[10,]),'funciones':([9,78,174,],[13,105,191,]),'funcion':([13,105,191,],[18,18,18,]),'tipo':([14,51,79,120,153,],[20,83,106,155,183,]),'f_startclass':([16,],[24,]),'dimension':([20,75,106,173,],[27,102,146,190,]),'f_varsobj':([21,],[30,]),'f_startfunc':([26,],[34,]),'expresion':([28,59,94,99,100,116,122,150,152,163,164,179,181,],[36,93,131,141,142,151,157,180,182,187,131,194,196,]),'exp':([28,59,90,94,99,100,116,122,150,152,163,164,179,181,],[37,37,124,37,37,37,37,37,37,37,37,37,37,37,]),'term':([28,59,90,91,94,99,100,116,122,150,152,163,164,179,181,],[38,38,38,125,38,38,38,38,38,38,38,38,38,38,38,]),'fact':([28,59,90,91,92,94,99,100,116,122,150,152,163,164,179,181,],[40,40,40,40,126,40,40,40,40,40,40,40,40,40,40,40,]),'var':([28,59,80,90,91,92,94,96,97,98,99,100,116,122,150,152,163,164,167,179,181,214,218,220,221,226,234,],[42,42,114,42,42,42,42,133,137,140,42,42,42,42,42,42,42,42,137,42,42,114,114,114,114,114,114,]),'cvars':([32,104,],[48,144,]),'lista_id':([35,46,176,],[52,76,192,]),'f_dim1':([36,],[54,]),'lparen':([41,],[59,]),'f_fact':([43,],[60,]),'call_func':([44,113,],[61,148,]),'func':([44,113,],[62,62,]),'input':([44,113,],[63,63,]),'write':([44,113,],[64,64,]),'to_num':([44,113,],[65,65,]),'to_str':([44,113,138,],[66,66,168,]),'return':([44,113,],[67,67,]),'f_varobj':([45,],[74,]),'f_verify_type':([45,],[75,]),'f_clasepadre':([47,],[77,]),'f_cvars':([48,144,],[78,174,]),'estatutos':([50,207,213,215,216,222,232,],[80,214,218,220,221,226,234,]),'params':([51,],[82,]),'pparams':([51,],[84,]),'f_vars':([53,121,],[88,156,]),'f_oper':([55,56,57,149,],[90,91,92,179,]),'estatuto':([80,214,218,220,221,226,234,],[108,108,108,108,108,108,108,]),'asignacion':([80,214,218,220,221,226,234,],[109,109,109,109,109,109,109,]),'while':([80,214,218,220,221,226,234,],[110,110,110,110,110,110,110,]),'for':([80,214,218,220,221,226,234,],[111,111,111,111,111,111,111,]),'condicion':([80,214,218,220,221,226,234,],[112,112,112,112,112,112,112,]),'f_onedim':([89,],[123,]),'args':([94,164,],[128,188,]),'args_list':([94,164,],[129,129,]),'write_list':([97,],[134,]),'write_listp':([97,167,],[135,189,]),'f_param':([119,185,],[154,200,]),'f_expres':([124,],[158,]),'f_exp':([125,],[159,]),'f_term':([126,],[160,]),'rparen':([127,],[161,]),'f_verify_type_composite':([143,],[173,]),'f_endclass':([145,203,],[175,212,]),'f_end':([147,],[177,]),'f_dim2':([157,],[186,]),'f_tipofunc':([183,199,],[198,210,]),'f_nothing':([184,],[199,]),'f_twodim':([201,],[211,]),'condicionp':([224,],[227,]),'f_endfunc':([225,231,],[230,233,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> PROGRAM f_start ID f_prog ; clases vars funciones MAIN ( ) { estatutos } END f_end ;','start',17,'p_start','aloop.py',112),
  ('f_start -> <empty>','f_start',0,'p_f_start','aloop.py',115),
  ('f_prog -> <empty>','f_prog',0,'p_f_prog','aloop.py',120),
  ('f_end -> <empty>','f_end',0,'p_f_end','aloop.py',125),
  ('clases -> clases clase','clases',2,'p_clases','aloop.py',133),
  ('clases -> empty','clases',1,'p_clases','aloop.py',134),
  ('clase -> TYPE ID f_startclass : ID f_clasepadre { cvars f_cvars funciones } f_endclass','clase',12,'p_clase','aloop.py',137),
  ('clase -> TYPE ID f_startclass { cvars f_cvars funciones } f_endclass','clase',9,'p_clase','aloop.py',138),
  ('f_startclass -> <empty>','f_startclass',0,'p_f_startclass','aloop.py',141),
  ('f_clasepadre -> <empty>','f_clasepadre',0,'p_f_clasepadre','aloop.py',147),
  ('f_cvars -> <empty>','f_cvars',0,'p_f_cvars','aloop.py',152),
  ('f_endclass -> <empty>','f_endclass',0,'p_f_endclass','aloop.py',156),
  ('funciones -> funciones funcion','funciones',2,'p_funciones','aloop.py',161),
  ('funciones -> empty','funciones',1,'p_funciones','aloop.py',162),
  ('funcion -> FUNC ID f_startfunc ( params ) : tipo f_tipofunc { vars estatutos } f_endfunc','funcion',14,'p_funcion','aloop.py',165),
  ('funcion -> FUNC ID f_startfunc ( params ) : NOTHING f_nothing f_tipofunc { vars estatutos } f_endfunc','funcion',15,'p_funcion','aloop.py',166),
  ('f_startfunc -> <empty>','f_startfunc',0,'p_f_startfunc','aloop.py',169),
  ('f_nothing -> <empty>','f_nothing',0,'p_f_nothing','aloop.py',174),
  ('f_tipofunc -> <empty>','f_tipofunc',0,'p_f_tipofunc','aloop.py',179),
  ('f_endfunc -> <empty>','f_endfunc',0,'p_f_endfunc','aloop.py',183),
  ('vars -> vars DEF tipo dimension : lista_id ;','vars',7,'p_vars','aloop.py',188),
  ('vars -> vars DEF ID f_varsobj : lista_id ;','vars',7,'p_vars','aloop.py',189),
  ('vars -> empty','vars',1,'p_vars','aloop.py',190),
  ('f_varsobj -> <empty>','f_varsobj',0,'p_f_varsobj','aloop.py',193),
  ('cvars -> cvars DEF tipo dimension : lista_id ;','cvars',7,'p_cvars','aloop.py',199),
  ('cvars -> empty','cvars',1,'p_cvars','aloop.py',200),
  ('lista_id -> ID f_vars','lista_id',2,'p_lista_id','aloop.py',203),
  ('lista_id -> lista_id , ID f_vars','lista_id',4,'p_lista_id','aloop.py',204),
  ('f_vars -> <empty>','f_vars',0,'p_f_vars','aloop.py',207),
  ('dimension -> [ expresion f_dim1 ] f_onedim','dimension',5,'p_dimension','aloop.py',227),
  ('dimension -> [ expresion f_dim1 ] [ expresion f_dim2 ] f_twodim','dimension',9,'p_dimension','aloop.py',228),
  ('dimension -> empty','dimension',1,'p_dimension','aloop.py',229),
  ('f_dim1 -> <empty>','f_dim1',0,'p_f_dim1','aloop.py',232),
  ('f_dim2 -> <empty>','f_dim2',0,'p_f_dim2','aloop.py',237),
  ('f_onedim -> <empty>','f_onedim',0,'p_f_onedim','aloop.py',242),
  ('f_twodim -> <empty>','f_twodim',0,'p_f_twodim','aloop.py',250),
  ('tipo -> NUMBER','tipo',1,'p_tipo','aloop.py',257),
  ('tipo -> STRING','tipo',1,'p_tipo','aloop.py',258),
  ('params -> pparams','params',1,'p_params','aloop.py',266),
  ('params -> empty','params',1,'p_params','aloop.py',267),
  ('pparams -> tipo ID f_param','pparams',3,'p_pparams','aloop.py',270),
  ('pparams -> pparams , tipo ID f_param','pparams',5,'p_pparams','aloop.py',271),
  ('f_param -> <empty>','f_param',0,'p_f_param','aloop.py',274),
  ('estatutos -> estatutos estatuto','estatutos',2,'p_estatutos','aloop.py',279),
  ('estatutos -> empty','estatutos',1,'p_estatutos','aloop.py',280),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','aloop.py',283),
  ('estatuto -> while','estatuto',1,'p_estatuto','aloop.py',284),
  ('estatuto -> for','estatuto',1,'p_estatuto','aloop.py',285),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','aloop.py',286),
  ('estatuto -> CALL call_func ;','estatuto',3,'p_estatuto','aloop.py',287),
  ('call_func -> func','call_func',1,'p_call_func','aloop.py',290),
  ('call_func -> input','call_func',1,'p_call_func','aloop.py',291),
  ('call_func -> write','call_func',1,'p_call_func','aloop.py',292),
  ('call_func -> to_num','call_func',1,'p_call_func','aloop.py',293),
  ('call_func -> to_str','call_func',1,'p_call_func','aloop.py',294),
  ('call_func -> return','call_func',1,'p_call_func','aloop.py',295),
  ('func -> ID ( args )','func',4,'p_func','aloop.py',298),
  ('func -> ID : ID ( args )','func',6,'p_func','aloop.py',299),
  ('args -> args_list','args',1,'p_args','aloop.py',302),
  ('args -> empty','args',1,'p_args','aloop.py',303),
  ('args_list -> expresion','args_list',1,'p_args_list','aloop.py',306),
  ('args_list -> args_list , expresion','args_list',3,'p_args_list','aloop.py',307),
  ('asignacion -> var = f_oper expresion ;','asignacion',5,'p_asignacion','aloop.py',310),
  ('var -> ID f_varobj : ID f_verify_type_composite dimension','var',6,'p_var','aloop.py',313),
  ('var -> ID f_verify_type dimension','var',3,'p_var','aloop.py',314),
  ('f_varobj -> <empty>','f_varobj',0,'p_f_varobj','aloop.py',317),
  ('f_verify_type -> <empty>','f_verify_type',0,'p_f_verify_type','aloop.py',322),
  ('f_verify_type_composite -> <empty>','f_verify_type_composite',0,'p_f_verify_type_composite','aloop.py',333),
  ('expresion -> exp','expresion',1,'p_expresion','aloop.py',345),
  ('expresion -> expresion COMP f_oper exp f_expres','expresion',5,'p_expresion','aloop.py',346),
  ('f_expres -> <empty>','f_expres',0,'p_f_expres','aloop.py',349),
  ('exp -> term','exp',1,'p_exp','aloop.py',372),
  ('exp -> exp OPTERM f_oper term f_exp','exp',5,'p_exp','aloop.py',373),
  ('f_exp -> <empty>','f_exp',0,'p_f_exp','aloop.py',377),
  ('term -> fact','term',1,'p_term','aloop.py',400),
  ('term -> term OPFACT f_oper fact f_term','term',5,'p_term','aloop.py',401),
  ('f_term -> <empty>','f_term',0,'p_f_term','aloop.py',405),
  ('f_oper -> <empty>','f_oper',0,'p_f_oper','aloop.py',429),
  ('fact -> ( lparen expresion ) rparen','fact',5,'p_fact','aloop.py',433),
  ('fact -> var','fact',1,'p_fact','aloop.py',434),
  ('fact -> NUM f_fact','fact',2,'p_fact','aloop.py',435),
  ('fact -> OPTERM NUM','fact',2,'p_fact','aloop.py',436),
  ('fact -> CALL call_func','fact',2,'p_fact','aloop.py',437),
  ('lparen -> <empty>','lparen',0,'p_lparen','aloop.py',459),
  ('rparen -> <empty>','rparen',0,'p_rparen','aloop.py',463),
  ('f_fact -> <empty>','f_fact',0,'p_f_fact','aloop.py',467),
  ('condicion -> IF ( expresion ) THEN { estatutos } condicionp','condicion',9,'p_condicion','aloop.py',480),
  ('condicionp -> ELSE { estatutos }','condicionp',4,'p_condicionp','aloop.py',483),
  ('condicionp -> empty','condicionp',1,'p_condicionp','aloop.py',484),
  ('while -> WHILE ( expresion ) DO { estatutos }','while',8,'p_while','aloop.py',487),
  ('for -> FOR expresion TO expresion { estatutos }','for',7,'p_for','aloop.py',490),
  ('to_num -> TO_NUMBER ( STR )','to_num',4,'p_to_num','aloop.py',493),
  ('to_num -> TO_NUMBER ( var )','to_num',4,'p_to_num','aloop.py',494),
  ('to_str -> TO_STRING ( expresion )','to_str',4,'p_to_str','aloop.py',497),
  ('input -> INPUT ( var )','input',4,'p_input','aloop.py',500),
  ('write -> PRINT ( write_list )','write',4,'p_write','aloop.py',504),
  ('write_list -> write_list & write_listp','write_list',3,'p_write_list','aloop.py',507),
  ('write_list -> write_listp','write_list',1,'p_write_list','aloop.py',508),
  ('write_listp -> STR','write_listp',1,'p_write_listp','aloop.py',511),
  ('write_listp -> var','write_listp',1,'p_write_listp','aloop.py',512),
  ('write_listp -> CALL to_str','write_listp',2,'p_write_listp','aloop.py',513),
  ('return -> RET ( expresion )','return',4,'p_return','aloop.py',520),
  ('empty -> <empty>','empty',0,'p_empty','aloop.py',523),
]
