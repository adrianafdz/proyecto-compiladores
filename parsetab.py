
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "startCALL COMP DEF DO ELSE END FOR FUNC ID IF INPUT MAIN NOTHING NUM NUMBER OPFACT OPTERM PRINT PROGRAM RET STR STRING THEN TO TO_NUMBER TO_STRING TYPE WHILEstart : PROGRAM f_start ID f_prog ';' clases vars funciones MAIN f_main '(' ')' '{' estatutos '}' END f_end ';' f_start :f_prog :f_main :f_end : clases : clases clase\n              | emptyclase : TYPE ID f_startclass ':' ID f_clasepadre '{' cvars f_cvars funciones '}' f_endclass \n             | TYPE ID f_startclass '{' cvars f_cvars funciones '}' f_endclass f_startclass :f_clasepadre :cvars : cvars DEF tipo dimension ':' lista_id ';'\n             | emptyf_cvars :f_endclass :funciones : funciones funcion\n                  | emptyfuncion : FUNC ID f_startfunc '(' params ')' ':' tipo f_tipofunc '{' cvars estatutos '}' f_endfunc\n               | FUNC ID f_startfunc '(' params ')' ':' NOTHING f_nothing f_tipofunc '{' cvars estatutos '}' f_endfunc f_startfunc :f_nothing :f_tipofunc :f_endfunc :vars : vars DEF tipo dimension ':' lista_id ';'\n            | vars DEF ID f_varsobj ':' lista_id_obj ';'\n            | emptyf_varsobj :lista_id : ID f_vars\n                | lista_id ',' ID f_varsf_vars :lista_id_obj : ID f_vars_obj\n                    | lista_id_obj ',' ID f_vars_objf_vars_obj :dimension : '[' NUM f_dim1 ']' f_enddim\n                 | '[' NUM f_dim1 ']' '[' NUM f_dim2 ']' f_enddim\n                 | emptyf_dim1 :f_dim2 :f_enddim :tipo : NUMBER \n            | STRINGparams : pparams \n              | emptypparams : tipo ID f_param\n               | pparams ',' tipo ID f_paramf_param :estatutos : estatutos estatuto \n                 | emptyestatuto : asignacion \n                | while \n                | for \n                | condicion \n                | CALL call_func ';' call_func : func f_gosub f_end_call f_end_check\n                 | input \n                 | write\n                 | return f_end_call :f_gosub :func : ID  f_verify_func '(' args ')'\n            | ID  f_varobj ':' ID f_verify_func_composite '(' args ')' f_verify_func :f_varobj :f_verify_func_composite :args : args_list f_end_args\n            | f_end_argsargs_list : expresion f_arg\n                 | args_list ',' expresion f_argf_arg :f_end_args :asignacion : var '=' f_oper expresion ';' var : ID f_varobj ':' ID f_verify_type_composite indexacion f_end_check\n           | ID f_verify_type indexacion f_end_checkf_verify_type :f_verify_type_composite :f_end_check :indexacion : '[' f_start_array expresion f_index ']' f_end_array\n                 | '[' f_start_array expresion f_index ']' '[' f_next_index expresion f_index ']' f_end_array\n                 | f_no_index emptyf_no_index :f_start_array :f_index :f_next_index :f_end_array :expresion : exp\n                 | expresion COMP f_oper exp f_expres f_expres :exp : term\n           | exp OPTERM f_oper term f_expf_exp :term : fact\n            | term OPFACT f_oper fact f_termf_term :f_oper :fact : '(' f_lparen expresion ')' f_rparen\n            | var\n            | NUM f_fact\n            | OPTERM NUM\n            | CALL func f_gosub f_return_val f_end_call f_end_check\n            | CALL to_num\n            | CALL to_str\n            | STR f_string \n            | fact '&' f_oper var f_concat\n            | fact '&' f_oper STR f_string f_concat f_concat :f_lparen :f_rparen :f_fact :f_return_val :condicion : IF '(' expresion ')' f_if THEN '{' estatutos '}' condicionp f_endifcondicionp : ELSE f_else '{' estatutos '}'\n                  | empty f_if :f_endif :f_else :while : WHILE f_while '(' expresion f_exprwhile ')' DO '{' estatutos '}' f_endwhile f_while :f_exprwhile :f_endwhile :for : FOR expresion f_for_start TO expresion f_for_to '{' estatutos '}' f_for_end f_for_start :f_for_to :f_for_end :to_num : TO_NUMBER '(' STR f_string ')' \n              | TO_NUMBER '(' var ')' to_str : TO_STRING '(' expresion ')' input : INPUT '(' var ')' write : PRINT '(' write_list ')' write_list : write_list '&' write_listp\n                  | write_listpwrite_listp : STR f_string\n                   | var \n                   | CALL to_strf_string :return : RET '(' expresion ')' empty :"
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,169,],[0,-1,]),'ID':([2,3,12,14,19,22,23,31,35,37,40,51,53,57,62,66,67,80,81,82,83,84,85,88,92,98,111,118,121,123,130,132,135,139,140,141,142,143,145,146,147,149,150,164,167,171,172,182,183,184,185,186,189,190,192,206,210,224,225,230,247,248,252,254,258,260,261,265,266,267,270,272,273,274,277,278,279,281,283,284,287,289,290,],[-2,4,16,21,26,-40,-41,38,44,46,-13,-136,69,71,74,78,-48,-47,-49,-50,-51,-52,107,78,126,44,-94,-106,107,78,165,-81,-53,78,78,78,78,78,-94,-94,-94,-94,78,-12,78,78,203,78,78,78,78,78,78,78,-136,78,-71,-136,-136,78,78,-136,78,-136,-136,78,-83,-136,78,78,78,78,-123,-136,-119,-120,-114,-112,-116,-110,-136,78,-111,]),';':([4,5,43,44,46,47,58,60,71,74,78,93,95,100,101,102,103,104,105,106,114,115,117,119,120,122,129,131,133,134,136,148,151,152,153,154,157,165,166,168,170,180,188,196,198,204,205,209,213,214,215,216,217,218,219,226,228,236,237,238,239,240,241,242,244,245,249,250,255,256,257,262,271,286,288,],[-3,6,56,-30,-33,61,-28,-31,-30,-33,-74,-29,-32,-80,-5,135,-59,-55,-56,-57,-85,-88,-91,-96,-108,-134,164,-76,-136,169,-58,-98,-97,-59,-100,-101,-102,-75,-73,-79,-76,210,-109,-80,-54,-127,-128,-135,-87,-90,-93,-105,-134,-107,-58,-76,-60,-86,-89,-92,-103,-105,-95,-76,-125,-126,-72,-84,-104,-99,-124,-77,-61,-84,-78,]),'TYPE':([6,7,8,10,76,97,163,195,],[-136,12,-7,-6,-15,-9,-15,-8,]),'DEF':([6,7,8,9,10,11,32,39,40,56,61,63,75,76,97,163,164,192,195,224,225,248,],[-136,-136,-7,14,-6,-26,-136,50,-13,-24,-25,-136,50,-15,-9,-15,-12,-136,-8,50,-136,50,]),'MAIN':([6,7,8,9,10,11,13,15,18,56,61,76,97,163,195,259,268,269,275,],[-136,-136,-7,-136,-6,-26,17,-17,-16,-24,-25,-15,-9,-15,-8,-23,-18,-23,-19,]),'FUNC':([6,7,8,9,10,11,13,15,18,32,39,40,49,56,61,63,64,75,76,96,97,128,163,164,195,259,268,269,275,],[-136,-136,-7,-136,-6,-26,19,-17,-16,-136,-14,-13,-136,-24,-25,-136,19,-14,-15,-136,-9,19,-15,-12,-8,-23,-18,-23,-19,]),'NUMBER':([14,42,50,70,90,],[22,22,22,22,22,]),'STRING':([14,42,50,70,90,],[23,23,23,23,23,]),'}':([15,18,32,39,40,49,51,63,64,66,67,75,80,81,82,83,84,96,128,135,164,192,210,224,225,247,248,254,258,259,260,265,266,267,268,269,272,273,274,275,277,278,279,281,283,284,287,289,290,],[-17,-16,-136,-14,-13,-136,-136,-136,76,79,-48,-14,-47,-49,-50,-51,-52,-136,163,-53,-12,-136,-71,-136,-136,259,-136,-136,-136,-23,269,-136,273,274,-18,-23,277,-123,-136,-19,-119,-120,-114,-112,-116,-110,-136,290,-111,]),':':([16,20,21,22,23,24,27,29,30,59,65,68,73,77,78,99,107,138,162,194,],[-10,-136,-27,-40,-41,31,35,-36,37,-39,-136,90,-34,98,-63,130,-63,172,-39,-35,]),'{':([16,22,23,24,38,41,48,78,100,114,115,117,119,120,122,124,125,131,133,148,151,152,153,154,157,159,160,165,166,168,188,193,196,212,213,214,215,216,217,218,219,226,228,235,236,237,238,239,240,241,242,244,245,246,249,250,253,255,256,257,262,271,280,285,286,288,],[-10,-40,-41,32,-11,51,63,-74,-80,-85,-88,-91,-96,-108,-134,-22,-21,-76,-136,-98,-97,-59,-100,-101,-102,192,-22,-75,-73,-79,-109,225,-80,-122,-87,-90,-93,-105,-134,-107,-58,-76,-60,254,-86,-89,-92,-103,-105,-95,-76,-125,-126,258,-72,-84,265,-104,-99,-124,-77,-61,-115,287,-84,-78,]),'(':([17,25,26,34,87,88,89,107,108,109,110,111,112,118,123,132,137,141,142,143,145,146,147,150,155,156,167,171,182,183,184,185,190,203,230,232,252,261,270,],[-4,33,-20,42,-117,118,123,-62,139,140,141,-94,143,-106,118,-81,171,118,118,118,-94,-94,-94,118,189,190,118,118,118,118,118,118,118,-64,118,252,118,-83,118,]),'[':([20,22,23,59,65,78,100,165,196,250,],[28,-40,-41,72,28,-74,132,-75,132,261,]),'NUM':([28,72,88,111,116,118,123,132,141,142,143,145,146,147,150,167,171,182,183,184,185,190,230,252,261,270,],[36,94,120,-94,148,-106,120,-81,120,120,120,-94,-94,-94,120,120,120,120,120,120,120,120,120,120,-83,120,]),')':([33,42,52,54,55,69,78,91,100,114,115,117,119,120,122,126,131,133,148,151,152,153,154,157,158,161,165,166,168,171,173,174,175,176,177,179,181,187,188,196,199,200,201,202,207,208,211,213,214,215,216,217,218,219,220,221,222,226,228,229,231,233,236,237,238,239,240,241,242,243,244,245,249,250,251,252,255,256,257,262,263,264,271,286,288,],[41,-136,68,-42,-43,-46,-74,-44,-80,-85,-88,-91,-96,-108,-134,-46,-76,-136,-98,-97,-59,-100,-101,-102,191,-45,-75,-73,-79,-70,204,205,-130,-134,-132,209,-118,218,-109,-80,228,-70,-66,-69,-131,-133,234,-87,-90,-93,-105,-134,-107,-58,-134,244,245,-76,-60,-65,-67,-129,-86,-89,-92,-103,-105,-95,-76,257,-125,-126,-72,-84,-69,-70,-104,-99,-124,-77,-68,271,-61,-84,-78,]),']':([36,45,78,94,100,114,115,117,119,120,122,127,131,133,148,151,152,153,154,157,165,166,168,188,196,197,213,214,215,216,217,218,219,226,227,228,236,237,238,239,240,241,242,244,245,249,250,255,256,257,262,271,276,282,286,288,],[-37,59,-74,-38,-80,-85,-88,-91,-96,-108,-134,162,-76,-136,-98,-97,-59,-100,-101,-102,-75,-73,-79,-109,-80,-82,-87,-90,-93,-105,-134,-107,-58,-76,250,-60,-86,-89,-92,-103,-105,-95,-76,-125,-126,-72,-84,-104,-99,-124,-77,-61,-82,286,-84,-78,]),'CALL':([40,51,66,67,80,81,82,83,84,88,111,118,123,132,135,140,141,142,143,145,146,147,150,164,167,171,182,183,184,185,190,192,206,210,224,225,230,247,248,252,254,258,260,261,265,266,267,270,272,273,274,277,278,279,281,283,284,287,289,290,],[-13,-136,85,-48,-47,-49,-50,-51,-52,121,-94,-106,121,-81,-53,178,121,121,121,-94,-94,-94,121,-12,121,121,121,121,121,121,121,-136,178,-71,-136,-136,121,85,-136,121,-136,-136,85,-83,-136,85,85,121,85,-123,-136,-119,-120,-114,-112,-116,-110,-136,85,-111,]),'WHILE':([40,51,66,67,80,81,82,83,84,135,164,192,210,224,225,247,248,254,258,260,265,266,267,272,273,274,277,278,279,281,283,284,287,289,290,],[-13,-136,87,-48,-47,-49,-50,-51,-52,-53,-12,-136,-71,-136,-136,87,-136,-136,-136,87,-136,87,87,87,-123,-136,-119,-120,-114,-112,-116,-110,-136,87,-111,]),'FOR':([40,51,66,67,80,81,82,83,84,135,164,192,210,224,225,247,248,254,258,260,265,266,267,272,273,274,277,278,279,281,283,284,287,289,290,],[-13,-136,88,-48,-47,-49,-50,-51,-52,-53,-12,-136,-71,-136,-136,88,-136,-136,-136,88,-136,88,88,88,-123,-136,-119,-120,-114,-112,-116,-110,-136,88,-111,]),'IF':([40,51,66,67,80,81,82,83,84,135,164,192,210,224,225,247,248,254,258,260,265,266,267,272,273,274,277,278,279,281,283,284,287,289,290,],[-13,-136,89,-48,-47,-49,-50,-51,-52,-53,-12,-136,-71,-136,-136,89,-136,-136,-136,89,-136,89,89,89,-123,-136,-119,-120,-114,-112,-116,-110,-136,89,-111,]),',':([43,44,46,47,54,58,60,69,71,74,78,91,93,95,100,114,115,117,119,120,122,126,129,131,133,148,151,152,153,154,157,161,165,166,168,188,196,200,202,213,214,215,216,217,218,219,226,228,231,236,237,238,239,240,241,242,244,245,249,250,251,255,256,257,262,263,271,286,288,],[57,-30,-33,62,70,-28,-31,-46,-30,-33,-74,-44,-29,-32,-80,-85,-88,-91,-96,-108,-134,-46,57,-76,-136,-98,-97,-59,-100,-101,-102,-45,-75,-73,-79,-109,-80,230,-69,-87,-90,-93,-105,-134,-107,-58,-76,-60,-67,-86,-89,-92,-103,-105,-95,-76,-125,-126,-72,-84,-69,-104,-99,-124,-77,-68,-61,-84,-78,]),'=':([78,86,100,131,133,165,166,168,196,226,249,250,262,286,288,],[-74,111,-80,-76,-136,-75,-73,-79,-80,-76,-72,-84,-77,-84,-78,]),'&':([78,100,117,119,120,122,131,133,148,151,152,153,154,157,165,166,168,174,175,176,177,188,196,207,208,215,216,217,218,219,226,228,233,239,240,241,242,244,245,249,250,255,256,257,262,271,286,288,],[-74,-80,149,-96,-108,-134,-76,-136,-98,-97,-59,-100,-101,-102,-75,-73,-79,206,-130,-134,-132,-109,-80,-131,-133,149,-105,-134,-107,-58,-76,-60,-129,-103,-105,-95,-76,-125,-126,-72,-84,-104,-99,-124,-77,-61,-84,-78,]),'OPFACT':([78,100,115,117,119,120,122,131,133,148,151,152,153,154,157,165,166,168,188,196,214,215,216,217,218,219,226,228,238,239,240,241,242,244,245,249,250,255,256,257,262,271,286,288,],[-74,-80,147,-91,-96,-108,-134,-76,-136,-98,-97,-59,-100,-101,-102,-75,-73,-79,-109,-80,147,-93,-105,-134,-107,-58,-76,-60,-92,-103,-105,-95,-76,-125,-126,-72,-84,-104,-99,-124,-77,-61,-84,-78,]),'OPTERM':([78,88,100,111,114,115,117,118,119,120,122,123,131,132,133,141,142,143,145,146,147,148,150,151,152,153,154,157,165,166,167,168,171,182,183,184,185,188,190,196,213,214,215,216,217,218,219,226,228,230,237,238,239,240,241,242,244,245,249,250,252,255,256,257,261,262,270,271,286,288,],[-74,116,-80,-94,146,-88,-91,-106,-96,-108,-134,116,-76,-81,-136,116,116,116,-94,-94,-94,-98,116,-97,-59,-100,-101,-102,-75,-73,116,-79,116,116,116,116,116,-109,116,-80,146,-90,-93,-105,-134,-107,-58,-76,-60,116,-89,-92,-103,-105,-95,-76,-125,-126,-72,-84,116,-104,-99,-124,-83,-77,116,-61,-84,-78,]),'COMP':([78,100,113,114,115,117,119,120,122,131,133,148,151,152,153,154,157,158,165,166,168,179,180,181,187,188,196,197,202,212,213,214,215,216,217,218,219,222,226,228,236,237,238,239,240,241,242,244,245,249,250,251,255,256,257,262,271,276,286,288,],[-74,-80,145,-85,-88,-91,-96,-108,-134,-76,-136,-98,-97,-59,-100,-101,-102,145,-75,-73,-79,145,145,145,145,-109,-80,145,145,145,-87,-90,-93,-105,-134,-107,-58,145,-76,-60,-86,-89,-92,-103,-105,-95,-76,-125,-126,-72,-84,145,-104,-99,-124,-77,-61,145,-84,-78,]),'TO':([78,100,113,114,115,117,119,120,122,131,133,144,148,151,152,153,154,157,165,166,168,188,196,213,214,215,216,217,218,219,226,228,236,237,238,239,240,241,242,244,245,249,250,255,256,257,262,271,286,288,],[-74,-80,-121,-85,-88,-91,-96,-108,-134,-76,-136,182,-98,-97,-59,-100,-101,-102,-75,-73,-79,-109,-80,-87,-90,-93,-105,-134,-107,-58,-76,-60,-86,-89,-92,-103,-105,-95,-76,-125,-126,-72,-84,-104,-99,-124,-77,-61,-84,-78,]),'END':([79,],[101,]),'INPUT':([85,],[108,]),'PRINT':([85,],[109,]),'RET':([85,],[110,]),'STR':([88,111,118,123,132,140,141,142,143,145,146,147,149,150,167,171,182,183,184,185,186,189,190,206,230,252,261,270,],[122,-94,-106,122,-81,176,122,122,122,-94,-94,-94,-94,122,122,122,122,122,122,122,217,220,122,176,122,122,-83,122,]),'NOTHING':([90,],[125,]),'TO_NUMBER':([121,],[155,]),'TO_STRING':([121,178,],[156,156,]),'THEN':([191,223,],[-113,246,]),'DO':([234,],[253,]),'ELSE':([274,],[280,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'f_start':([2,],[3,]),'f_prog':([4,],[5,]),'clases':([6,],[7,]),'empty':([6,7,9,20,32,42,49,51,63,65,96,133,192,224,225,248,254,258,265,274,287,],[8,11,15,29,40,55,15,67,40,29,15,168,40,67,40,67,67,67,67,281,67,]),'vars':([7,],[9,]),'clase':([7,],[10,]),'funciones':([9,49,96,],[13,64,128,]),'funcion':([13,64,128,],[18,18,18,]),'tipo':([14,42,50,70,90,],[20,53,65,92,124,]),'f_startclass':([16,],[24,]),'f_main':([17,],[25,]),'dimension':([20,65,],[27,77,]),'f_varsobj':([21,],[30,]),'f_startfunc':([26,],[34,]),'cvars':([32,63,192,225,],[39,75,224,248,]),'lista_id':([35,98,],[43,129,]),'f_dim1':([36,],[45,]),'lista_id_obj':([37,],[47,]),'f_clasepadre':([38,],[48,]),'f_cvars':([39,75,],[49,96,]),'params':([42,],[52,]),'pparams':([42,],[54,]),'f_vars':([44,71,],[58,93,]),'f_vars_obj':([46,74,],[60,95,]),'estatutos':([51,224,248,254,258,265,287,],[66,247,260,266,267,272,289,]),'f_enddim':([59,162,],[73,194,]),'estatuto':([66,247,260,266,267,272,289,],[80,80,80,80,80,80,80,]),'asignacion':([66,247,260,266,267,272,289,],[81,81,81,81,81,81,81,]),'while':([66,247,260,266,267,272,289,],[82,82,82,82,82,82,82,]),'for':([66,247,260,266,267,272,289,],[83,83,83,83,83,83,83,]),'condicion':([66,247,260,266,267,272,289,],[84,84,84,84,84,84,84,]),'var':([66,88,123,139,140,141,142,143,150,167,171,182,183,184,185,186,189,190,206,230,247,252,260,266,267,270,272,289,],[86,119,119,173,177,119,119,119,119,119,119,119,119,119,119,216,221,119,177,119,86,119,86,86,86,119,86,86,]),'f_param':([69,126,],[91,161,]),'f_endclass':([76,163,],[97,195,]),'f_varobj':([78,107,],[99,138,]),'f_verify_type':([78,],[100,]),'call_func':([85,],[102,]),'func':([85,121,],[103,152,]),'input':([85,],[104,]),'write':([85,],[105,]),'return':([85,],[106,]),'f_while':([87,],[112,]),'expresion':([88,123,141,142,143,150,167,171,182,190,230,252,270,],[113,158,179,180,181,187,197,202,212,222,251,202,276,]),'exp':([88,123,141,142,143,150,167,171,182,183,190,230,252,270,],[114,114,114,114,114,114,114,114,114,213,114,114,114,114,]),'term':([88,123,141,142,143,150,167,171,182,183,184,190,230,252,270,],[115,115,115,115,115,115,115,115,115,115,214,115,115,115,115,]),'fact':([88,123,141,142,143,150,167,171,182,183,184,185,190,230,252,270,],[117,117,117,117,117,117,117,117,117,117,117,215,117,117,117,117,]),'f_dim2':([94,],[127,]),'indexacion':([100,196,],[131,226,]),'f_no_index':([100,196,],[133,133,]),'f_end':([101,],[134,]),'f_gosub':([103,152,],[136,188,]),'f_verify_func':([107,],[137,]),'f_oper':([111,145,146,147,149,],[142,183,184,185,186,]),'f_for_start':([113,],[144,]),'f_lparen':([118,],[150,]),'f_fact':([120,],[151,]),'to_num':([121,],[153,]),'to_str':([121,178,],[154,208,]),'f_string':([122,176,217,220,],[157,207,240,243,]),'f_tipofunc':([124,160,],[159,193,]),'f_nothing':([125,],[160,]),'f_end_check':([131,170,226,242,],[166,198,249,256,]),'f_start_array':([132,],[167,]),'f_end_call':([136,219,],[170,242,]),'write_list':([140,],[174,]),'write_listp':([140,206,],[175,233,]),'f_verify_type_composite':([165,],[196,]),'args':([171,252,],[199,264,]),'args_list':([171,252,],[200,200,]),'f_end_args':([171,200,252,],[201,229,201,]),'f_exprwhile':([181,],[211,]),'f_return_val':([188,],[219,]),'f_if':([191,],[223,]),'f_index':([197,276,],[227,282,]),'f_arg':([202,251,],[231,263,]),'f_verify_func_composite':([203,],[232,]),'f_for_to':([212,],[235,]),'f_expres':([213,],[236,]),'f_exp':([214,],[237,]),'f_term':([215,],[238,]),'f_concat':([216,240,],[239,255,]),'f_rparen':([218,],[241,]),'f_end_array':([250,286,],[262,288,]),'f_endfunc':([259,269,],[268,275,]),'f_next_index':([261,],[270,]),'f_for_end':([273,],[278,]),'condicionp':([274,],[279,]),'f_endwhile':([277,],[283,]),'f_endif':([279,],[284,]),'f_else':([280,],[285,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> PROGRAM f_start ID f_prog ; clases vars funciones MAIN f_main ( ) { estatutos } END f_end ;','start',18,'p_start','aloop.py',234),
  ('f_start -> <empty>','f_start',0,'p_f_start','aloop.py',237),
  ('f_prog -> <empty>','f_prog',0,'p_f_prog','aloop.py',245),
  ('f_main -> <empty>','f_main',0,'p_f_main','aloop.py',250),
  ('f_end -> <empty>','f_end',0,'p_f_end','aloop.py',255),
  ('clases -> clases clase','clases',2,'p_clases','aloop.py',274),
  ('clases -> empty','clases',1,'p_clases','aloop.py',275),
  ('clase -> TYPE ID f_startclass : ID f_clasepadre { cvars f_cvars funciones } f_endclass','clase',12,'p_clase','aloop.py',278),
  ('clase -> TYPE ID f_startclass { cvars f_cvars funciones } f_endclass','clase',9,'p_clase','aloop.py',279),
  ('f_startclass -> <empty>','f_startclass',0,'p_f_startclass','aloop.py',282),
  ('f_clasepadre -> <empty>','f_clasepadre',0,'p_f_clasepadre','aloop.py',290),
  ('cvars -> cvars DEF tipo dimension : lista_id ;','cvars',7,'p_cvars','aloop.py',306),
  ('cvars -> empty','cvars',1,'p_cvars','aloop.py',307),
  ('f_cvars -> <empty>','f_cvars',0,'p_f_cvars','aloop.py',310),
  ('f_endclass -> <empty>','f_endclass',0,'p_f_endclass','aloop.py',316),
  ('funciones -> funciones funcion','funciones',2,'p_funciones','aloop.py',331),
  ('funciones -> empty','funciones',1,'p_funciones','aloop.py',332),
  ('funcion -> FUNC ID f_startfunc ( params ) : tipo f_tipofunc { cvars estatutos } f_endfunc','funcion',14,'p_funcion','aloop.py',335),
  ('funcion -> FUNC ID f_startfunc ( params ) : NOTHING f_nothing f_tipofunc { cvars estatutos } f_endfunc','funcion',15,'p_funcion','aloop.py',336),
  ('f_startfunc -> <empty>','f_startfunc',0,'p_f_startfunc','aloop.py',339),
  ('f_nothing -> <empty>','f_nothing',0,'p_f_nothing','aloop.py',344),
  ('f_tipofunc -> <empty>','f_tipofunc',0,'p_f_tipofunc','aloop.py',349),
  ('f_endfunc -> <empty>','f_endfunc',0,'p_f_endfunc','aloop.py',369),
  ('vars -> vars DEF tipo dimension : lista_id ;','vars',7,'p_vars','aloop.py',395),
  ('vars -> vars DEF ID f_varsobj : lista_id_obj ;','vars',7,'p_vars','aloop.py',396),
  ('vars -> empty','vars',1,'p_vars','aloop.py',397),
  ('f_varsobj -> <empty>','f_varsobj',0,'p_f_varsobj','aloop.py',400),
  ('lista_id -> ID f_vars','lista_id',2,'p_lista_id','aloop.py',412),
  ('lista_id -> lista_id , ID f_vars','lista_id',4,'p_lista_id','aloop.py',413),
  ('f_vars -> <empty>','f_vars',0,'p_f_vars','aloop.py',416),
  ('lista_id_obj -> ID f_vars_obj','lista_id_obj',2,'p_lista_id_obj','aloop.py',466),
  ('lista_id_obj -> lista_id_obj , ID f_vars_obj','lista_id_obj',4,'p_lista_id_obj','aloop.py',467),
  ('f_vars_obj -> <empty>','f_vars_obj',0,'p_f_vars_obj','aloop.py',470),
  ('dimension -> [ NUM f_dim1 ] f_enddim','dimension',5,'p_dimension','aloop.py',488),
  ('dimension -> [ NUM f_dim1 ] [ NUM f_dim2 ] f_enddim','dimension',9,'p_dimension','aloop.py',489),
  ('dimension -> empty','dimension',1,'p_dimension','aloop.py',490),
  ('f_dim1 -> <empty>','f_dim1',0,'p_f_dim1','aloop.py',493),
  ('f_dim2 -> <empty>','f_dim2',0,'p_f_dim2','aloop.py',501),
  ('f_enddim -> <empty>','f_enddim',0,'p_f_enddim','aloop.py',508),
  ('tipo -> NUMBER','tipo',1,'p_tipo','aloop.py',515),
  ('tipo -> STRING','tipo',1,'p_tipo','aloop.py',516),
  ('params -> pparams','params',1,'p_params','aloop.py',524),
  ('params -> empty','params',1,'p_params','aloop.py',525),
  ('pparams -> tipo ID f_param','pparams',3,'p_pparams','aloop.py',528),
  ('pparams -> pparams , tipo ID f_param','pparams',5,'p_pparams','aloop.py',529),
  ('f_param -> <empty>','f_param',0,'p_f_param','aloop.py',532),
  ('estatutos -> estatutos estatuto','estatutos',2,'p_estatutos','aloop.py',548),
  ('estatutos -> empty','estatutos',1,'p_estatutos','aloop.py',549),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','aloop.py',552),
  ('estatuto -> while','estatuto',1,'p_estatuto','aloop.py',553),
  ('estatuto -> for','estatuto',1,'p_estatuto','aloop.py',554),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','aloop.py',555),
  ('estatuto -> CALL call_func ;','estatuto',3,'p_estatuto','aloop.py',556),
  ('call_func -> func f_gosub f_end_call f_end_check','call_func',4,'p_call_func','aloop.py',559),
  ('call_func -> input','call_func',1,'p_call_func','aloop.py',560),
  ('call_func -> write','call_func',1,'p_call_func','aloop.py',561),
  ('call_func -> return','call_func',1,'p_call_func','aloop.py',562),
  ('f_end_call -> <empty>','f_end_call',0,'p_f_end_call','aloop.py',565),
  ('f_gosub -> <empty>','f_gosub',0,'p_f_gosub','aloop.py',569),
  ('func -> ID f_verify_func ( args )','func',5,'p_func','aloop.py',585),
  ('func -> ID f_varobj : ID f_verify_func_composite ( args )','func',8,'p_func','aloop.py',586),
  ('f_verify_func -> <empty>','f_verify_func',0,'p_f_verify_func','aloop.py',589),
  ('f_varobj -> <empty>','f_varobj',0,'p_f_varobj','aloop.py',608),
  ('f_verify_func_composite -> <empty>','f_verify_func_composite',0,'p_f_verify_func_composite','aloop.py',612),
  ('args -> args_list f_end_args','args',2,'p_args','aloop.py',636),
  ('args -> f_end_args','args',1,'p_args','aloop.py',637),
  ('args_list -> expresion f_arg','args_list',2,'p_args_list','aloop.py',640),
  ('args_list -> args_list , expresion f_arg','args_list',4,'p_args_list','aloop.py',641),
  ('f_arg -> <empty>','f_arg',0,'p_f_arg','aloop.py',644),
  ('f_end_args -> <empty>','f_end_args',0,'p_f_end_args','aloop.py',663),
  ('asignacion -> var = f_oper expresion ;','asignacion',5,'p_asignacion','aloop.py',673),
  ('var -> ID f_varobj : ID f_verify_type_composite indexacion f_end_check','var',7,'p_var','aloop.py',680),
  ('var -> ID f_verify_type indexacion f_end_check','var',4,'p_var','aloop.py',681),
  ('f_verify_type -> <empty>','f_verify_type',0,'p_f_verify_type','aloop.py',684),
  ('f_verify_type_composite -> <empty>','f_verify_type_composite',0,'p_f_verify_type_composite','aloop.py',710),
  ('f_end_check -> <empty>','f_end_check',0,'p_f_end_check','aloop.py',735),
  ('indexacion -> [ f_start_array expresion f_index ] f_end_array','indexacion',6,'p_indexacion','aloop.py',740),
  ('indexacion -> [ f_start_array expresion f_index ] [ f_next_index expresion f_index ] f_end_array','indexacion',11,'p_indexacion','aloop.py',741),
  ('indexacion -> f_no_index empty','indexacion',2,'p_indexacion','aloop.py',742),
  ('f_no_index -> <empty>','f_no_index',0,'p_f_no_index','aloop.py',745),
  ('f_start_array -> <empty>','f_start_array',0,'p_f_start_array','aloop.py',752),
  ('f_index -> <empty>','f_index',0,'p_f_index','aloop.py',765),
  ('f_next_index -> <empty>','f_next_index',0,'p_f_next_index','aloop.py',795),
  ('f_end_array -> <empty>','f_end_array',0,'p_f_end_array','aloop.py',802),
  ('expresion -> exp','expresion',1,'p_expresion','aloop.py',837),
  ('expresion -> expresion COMP f_oper exp f_expres','expresion',5,'p_expresion','aloop.py',838),
  ('f_expres -> <empty>','f_expres',0,'p_f_expres','aloop.py',841),
  ('exp -> term','exp',1,'p_exp','aloop.py',865),
  ('exp -> exp OPTERM f_oper term f_exp','exp',5,'p_exp','aloop.py',866),
  ('f_exp -> <empty>','f_exp',0,'p_f_exp','aloop.py',870),
  ('term -> fact','term',1,'p_term','aloop.py',894),
  ('term -> term OPFACT f_oper fact f_term','term',5,'p_term','aloop.py',895),
  ('f_term -> <empty>','f_term',0,'p_f_term','aloop.py',899),
  ('f_oper -> <empty>','f_oper',0,'p_f_oper','aloop.py',924),
  ('fact -> ( f_lparen expresion ) f_rparen','fact',5,'p_fact','aloop.py',928),
  ('fact -> var','fact',1,'p_fact','aloop.py',929),
  ('fact -> NUM f_fact','fact',2,'p_fact','aloop.py',930),
  ('fact -> OPTERM NUM','fact',2,'p_fact','aloop.py',931),
  ('fact -> CALL func f_gosub f_return_val f_end_call f_end_check','fact',6,'p_fact','aloop.py',932),
  ('fact -> CALL to_num','fact',2,'p_fact','aloop.py',933),
  ('fact -> CALL to_str','fact',2,'p_fact','aloop.py',934),
  ('fact -> STR f_string','fact',2,'p_fact','aloop.py',935),
  ('fact -> fact & f_oper var f_concat','fact',5,'p_fact','aloop.py',936),
  ('fact -> fact & f_oper STR f_string f_concat','fact',6,'p_fact','aloop.py',937),
  ('f_concat -> <empty>','f_concat',0,'p_f_concat','aloop.py',950),
  ('f_lparen -> <empty>','f_lparen',0,'p_f_lparen','aloop.py',974),
  ('f_rparen -> <empty>','f_rparen',0,'p_f_rparen','aloop.py',978),
  ('f_fact -> <empty>','f_fact',0,'p_f_fact','aloop.py',982),
  ('f_return_val -> <empty>','f_return_val',0,'p_f_return_val','aloop.py',988),
  ('condicion -> IF ( expresion ) f_if THEN { estatutos } condicionp f_endif','condicion',11,'p_condicion','aloop.py',1021),
  ('condicionp -> ELSE f_else { estatutos }','condicionp',5,'p_condicionp','aloop.py',1024),
  ('condicionp -> empty','condicionp',1,'p_condicionp','aloop.py',1025),
  ('f_if -> <empty>','f_if',0,'p_f_if','aloop.py',1028),
  ('f_endif -> <empty>','f_endif',0,'p_f_endif','aloop.py',1038),
  ('f_else -> <empty>','f_else',0,'p_f_else','aloop.py',1043),
  ('while -> WHILE f_while ( expresion f_exprwhile ) DO { estatutos } f_endwhile','while',11,'p_while','aloop.py',1050),
  ('f_while -> <empty>','f_while',0,'p_f_while','aloop.py',1053),
  ('f_exprwhile -> <empty>','f_exprwhile',0,'p_f_exprwhile','aloop.py',1057),
  ('f_endwhile -> <empty>','f_endwhile',0,'p_f_endwhile','aloop.py',1067),
  ('for -> FOR expresion f_for_start TO expresion f_for_to { estatutos } f_for_end','for',10,'p_for','aloop.py',1074),
  ('f_for_start -> <empty>','f_for_start',0,'p_f_for_start','aloop.py',1077),
  ('f_for_to -> <empty>','f_for_to',0,'p_f_for_to','aloop.py',1087),
  ('f_for_end -> <empty>','f_for_end',0,'p_f_for_end','aloop.py',1103),
  ('to_num -> TO_NUMBER ( STR f_string )','to_num',5,'p_to_num','aloop.py',1115),
  ('to_num -> TO_NUMBER ( var )','to_num',4,'p_to_num','aloop.py',1116),
  ('to_str -> TO_STRING ( expresion )','to_str',4,'p_to_str','aloop.py',1128),
  ('input -> INPUT ( var )','input',4,'p_input','aloop.py',1140),
  ('write -> PRINT ( write_list )','write',4,'p_write','aloop.py',1147),
  ('write_list -> write_list & write_listp','write_list',3,'p_write_list','aloop.py',1150),
  ('write_list -> write_listp','write_list',1,'p_write_list','aloop.py',1151),
  ('write_listp -> STR f_string','write_listp',2,'p_write_listp','aloop.py',1154),
  ('write_listp -> var','write_listp',1,'p_write_listp','aloop.py',1155),
  ('write_listp -> CALL to_str','write_listp',2,'p_write_listp','aloop.py',1156),
  ('f_string -> <empty>','f_string',0,'p_f_string','aloop.py',1163),
  ('return -> RET ( expresion )','return',4,'p_return','aloop.py',1170),
  ('empty -> <empty>','empty',0,'p_empty','aloop.py',1208),
]
